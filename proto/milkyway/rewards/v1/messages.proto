syntax = "proto3";
package milkyway.rewards.v1;

import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/msg/v1/msg.proto";
import "google/protobuf/timestamp.proto";
import "gogoproto/gogo.proto";
import "milkyway/rewards/v1/params.proto";
import "milkyway/rewards/v1/models.proto";

option go_package = "github.com/milkyway-labs/milkyway/x/rewards/types";

// Msg defines the services module's gRPC message service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // CreateRewardsPlan defines the operation for creating a new
  // rewards plan.
  rpc CreateRewardsPlan(MsgCreateRewardsPlan)
      returns (MsgCreateRewardsPlanResponse);

  // UpdateParams defines a (governance) operation for updating the module
  // parameters.
  // The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

// MsgCreateRewardsPlan defines the message structure for the
// CreateRewardsPlan gRPC service method. It allows an account to create a
// new rewards plan. It requires a sender address as well as the details of
// the plan to be created.
message MsgCreateRewardsPlan {
  option (cosmos.msg.v1.signer) = "sender";
  option (amino.name) = "rewards/MsgCreateRewardsPlan";

  // Sender is the address of the user registering the service
  string sender = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  string description = 2;

  uint32 service_id = 3 [ (gogoproto.customname) = "ServiceID" ];

  // Amount is the amount of rewards to be distributed.
  repeated cosmos.base.v1beta1.Coin amount = 4 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false
  ];

  // StartTime is the starting time of the plan
  google.protobuf.Timestamp start_time = 5
      [ (gogoproto.stdtime) = true, (gogoproto.nullable) = false ];

  // EndTime is the ending time of the plan
  google.protobuf.Timestamp end_time = 6
      [ (gogoproto.stdtime) = true, (gogoproto.nullable) = false ];

  PoolsDistribution pools_distribution = 7 [ (gogoproto.nullable) = false ];

  OperatorsDistribution operators_distribution = 8
      [ (gogoproto.nullable) = false ];

  UsersDistribution users_distribution = 9 [ (gogoproto.nullable) = false ];
}

// MsgCreateRewardsPlanResponse is the return value of
// MsgCreateRewardsPlan. It returns the newly created plan ID.
message MsgCreateRewardsPlanResponse {
  // NewRewardsPlanID is the ID of the newly created rewards plan
  uint64 new_rewards_plan_id = 1
      [ (gogoproto.customname) = "NewRewardsPlanID" ];
}

// MsgUpdateParams defines the message structure for the UpdateParams gRPC
// service method. It allows the authority to update the module parameters.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "rewards/MsgUpdateParams";

  // Authority is the address that controls the module (defaults to x/gov unless
  // overwritten).
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // Params define the parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [ (gogoproto.nullable) = false ];
}

// MsgUpdateParamsResponse is the return value of MsgUpdateParams.
message MsgUpdateParamsResponse {}