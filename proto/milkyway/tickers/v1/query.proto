syntax = "proto3";
package milkyway.tickers.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "milkyway/tickers/v1/params.proto";

option go_package = "github.com/milkyway-labs/milkyway/x/tickers/types";

// Query defines the gRPC querier service.
service Query {
  // Params defines a gRPC query method that returns the parameters of the
  // module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/milkyway/tickers/v1/params";
  }

  rpc Ticker(QueryTickerRequest) returns (QueryTickerResponse) {
    option (google.api.http).get = "/milkyway/tickers/v1/tickers/{denom}";
  }

  rpc Denoms(QueryDenomsRequest) returns (QueryDenomsResponse) {
    option (google.api.http).get = "/milkyway/tickers/v1/denoms/{ticker}";
  }
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  Params params = 1 [ (gogoproto.nullable) = false ];
}

message QueryTickerRequest { string denom = 1; }

message QueryTickerResponse { string ticker = 1; }

message QueryDenomsRequest {
  string ticker = 1;

  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryDenomsResponse {
  repeated string denoms = 1;

  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
