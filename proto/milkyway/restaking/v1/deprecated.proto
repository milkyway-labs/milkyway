syntax = "proto3";
package milkyway.restaking.v1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";


option go_package = "github.com/milkyway-labs/milkyway/x/restaking/types";

// Deprecated: This struct has been deprecated in favor of the new
// ServiceParams struct.
// ServiceParams represent the params that have been set for an individual
// service.
message LegacyServiceParams {
  option deprecated = true;

  // Deprecated: The information of this field has been moved to the x/services module.
  // SlashFraction defines the fraction of the delegation that will be slashed
  // in case of a misbehavior.
  string slash_fraction = 1 [
    deprecated = true,
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];

  // Deprecated: The information of this field has been moved to the new ServiceParams struct.
  // WhitelistedPoolsIDs defines the list of pool IDs that are providing
  // cryptoeconomic security to the service.
  repeated uint32 whitelisted_pools_ids = 2 [
    deprecated = true,
    (gogoproto.customname) = "WhitelistedPoolsIDs"
  ];

  // Deprecated: The information of this field has been moved to the new ServiceParams struct.
  // WhitelistedOperatorsIDs defines the list of operator IDs that are allowed
  // to validate this service.
  repeated uint32 whitelisted_operators_ids = 3 [
    deprecated = true,
    (gogoproto.customname) = "WhitelistedOperatorsIDs"
  ];
}


// Deprecated: This struct has been deprecated in favor of the new
// ServiceParamsRecord struct.
// LegacyServiceParamsRecord represents the params that have been set for an
// individual service.
message LegacyServiceParamsRecord {
  option deprecated = true;
  // ServiceID is the ID of the service.
  uint32 service_id = 1 [
    deprecated = true,
    (gogoproto.customname) = "ServiceID"
  ];

  // Params defines the parameters for the operators module.
  LegacyServiceParams params = 2 [
    deprecated = true,
    (gogoproto.nullable) = false
  ];
}
