syntax = "proto3";
package milkyway.investors.v1;

import "amino/amino.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

option go_package = "github.com/milkyway-labs/milkyway/v12/x/investors/types";

// Query defines the gRPC querier service.
service Query {
  // InvestorsRewardRatio queries the investors reward ratio.
  rpc InvestorsRewardRatio(QueryInvestorsRewardRatioRequest) returns (QueryInvestorsRewardRatioResponse) {
    option (google.api.http).get = "/milkyway/investors/v1/investors_reward_ratio";
  }

  // VestingInvestors queries the list of vesting investors.
  rpc VestingInvestors(QueryVestingInvestorsRequest) returns (QueryVestingInvestorsResponse) {
    option (google.api.http).get = "/milkyway/investors/v1/vesting_investors";
  }
}

// QueryInvestorsRewardRatioRequest is request type for the
// Query/InvestorsRewardRatio RPC method.
message QueryInvestorsRewardRatioRequest {}

// QueryInvestorsRewardRatioResponse is response type for the
// Query/InvestorsRewardRatio RPC method.
message QueryInvestorsRewardRatioResponse {
  // InvestorsRewardRatio defines the proportion of staking rewards allocated to
  // vesting investors relative to normal users.
  string investors_reward_ratio = 2 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// QueryVestingInvestorsRequest is request type for the Query/VestingInvestors
// RPC method.
message QueryVestingInvestorsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryVestingInvestorsResponse is response type for the Query/VestingInvestors
// RPC method.
message QueryVestingInvestorsResponse {
  repeated string vesting_investors_addresses = 1 [
    (cosmos_proto.scalar) = "cosmos.AddressString",
    (amino.dont_omitempty) = true
  ];

  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
