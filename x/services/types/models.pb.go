// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: milkyway/services/v1/models.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// ServiceStatus defines the status of a service
type ServiceStatus int32

const (
	// SERVICE_STATUS_UNSPECIFIED defines an unspecified status
	SERVICE_STATUS_UNSPECIFIED ServiceStatus = 0
	// SERVICE_STATUS_CREATED identifies a recently created service that is not
	// yet active
	SERVICE_STATUS_CREATED ServiceStatus = 1
	// SERVICE_STATUS_ACTIVE identifies an active service
	SERVICE_STATUS_ACTIVE ServiceStatus = 2
	// SERVICE_STATUS_INACTIVE identifies an inactive service
	SERVICE_STATUS_INACTIVE ServiceStatus = 3
)

var ServiceStatus_name = map[int32]string{
	0: "SERVICE_STATUS_UNSPECIFIED",
	1: "SERVICE_STATUS_CREATED",
	2: "SERVICE_STATUS_ACTIVE",
	3: "SERVICE_STATUS_INACTIVE",
}

var ServiceStatus_value = map[string]int32{
	"SERVICE_STATUS_UNSPECIFIED": 0,
	"SERVICE_STATUS_CREATED":     1,
	"SERVICE_STATUS_ACTIVE":      2,
	"SERVICE_STATUS_INACTIVE":    3,
}

func (x ServiceStatus) String() string {
	return proto.EnumName(ServiceStatus_name, int32(x))
}

func (ServiceStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4411e719afee9a70, []int{0}
}

// Service defines the fields of a service
type Service struct {
	// ID is the unique identifier of the service
	ID uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Status is the status of the service
	Status ServiceStatus `protobuf:"varint,2,opt,name=status,proto3,enum=milkyway.services.v1.ServiceStatus" json:"status,omitempty"`
	// Admin is the address of the user that has administrative power over the
	// service
	Admin string `protobuf:"bytes,3,opt,name=admin,proto3" json:"admin,omitempty"`
	// Name is the name of the service
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Description is the description of the service
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Website is the website of the service
	Website string `protobuf:"bytes,6,opt,name=website,proto3" json:"website,omitempty"`
	// PictureURL is the URL of the picture of the service
	PictureURL string `protobuf:"bytes,7,opt,name=picture_url,json=pictureUrl,proto3" json:"picture_url,omitempty"`
	// Address is the address of the account associated with the service.
	// This will be used in order to store all the tokens that are delegated to
	// this service by various users.
	Address string `protobuf:"bytes,8,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_4411e719afee9a70, []int{0}
}
func (m *Service) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Service.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(m, src)
}
func (m *Service) XXX_Size() int {
	return m.Size()
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

func (m *Service) GetID() uint32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Service) GetStatus() ServiceStatus {
	if m != nil {
		return m.Status
	}
	return SERVICE_STATUS_UNSPECIFIED
}

func (m *Service) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

func (m *Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Service) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Service) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *Service) GetPictureURL() string {
	if m != nil {
		return m.PictureURL
	}
	return ""
}

func (m *Service) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func init() {
	proto.RegisterEnum("milkyway.services.v1.ServiceStatus", ServiceStatus_name, ServiceStatus_value)
	proto.RegisterType((*Service)(nil), "milkyway.services.v1.Service")
}

func init() { proto.RegisterFile("milkyway/services/v1/models.proto", fileDescriptor_4411e719afee9a70) }

var fileDescriptor_4411e719afee9a70 = []byte{
	// 443 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc7, 0xbd, 0x6e, 0x9a, 0xc0, 0x54, 0xad, 0xa2, 0x55, 0x28, 0x5b, 0x23, 0xb9, 0x01, 0x2e,
	0x11, 0x52, 0x6d, 0x35, 0x1c, 0x39, 0xe5, 0xc3, 0x48, 0x96, 0xaa, 0xaa, 0xb2, 0x93, 0x1e, 0xb8,
	0x44, 0x8e, 0xbd, 0x0a, 0x2b, 0xec, 0x6c, 0xb4, 0xbb, 0x49, 0xc9, 0x1b, 0xc0, 0x8d, 0x77, 0xe0,
	0x15, 0x78, 0x03, 0x2e, 0x1c, 0x2b, 0x4e, 0x9c, 0x2a, 0xe4, 0xbc, 0x08, 0x8a, 0xd7, 0xe6, 0x23,
	0x42, 0xea, 0x6d, 0x66, 0x7e, 0x3f, 0x8f, 0xff, 0x96, 0x07, 0x9e, 0x66, 0x2c, 0x7d, 0xb7, 0xbe,
	0x89, 0xd6, 0xae, 0xa4, 0x62, 0xc5, 0x62, 0x2a, 0xdd, 0xd5, 0xb9, 0x9b, 0xf1, 0x84, 0xa6, 0xd2,
	0x59, 0x08, 0xae, 0x38, 0x6e, 0x55, 0x8a, 0x53, 0x29, 0xce, 0xea, 0xdc, 0x6a, 0xcd, 0xf8, 0x8c,
	0x17, 0x82, 0xbb, 0xad, 0xb4, 0x6b, 0x9d, 0xc4, 0x5c, 0x66, 0x5c, 0x4e, 0x34, 0xd0, 0x8d, 0x46,
	0xcf, 0xbe, 0x9a, 0xd0, 0x08, 0xf5, 0x02, 0x7c, 0x0c, 0x26, 0x4b, 0x08, 0x6a, 0xa3, 0xce, 0x61,
	0xbf, 0x9e, 0xdf, 0x9d, 0x9a, 0xfe, 0x30, 0x30, 0x59, 0x82, 0x5f, 0x41, 0x5d, 0xaa, 0x48, 0x2d,
	0x25, 0x31, 0xdb, 0xa8, 0x73, 0xd4, 0x7d, 0xee, 0xfc, 0xef, 0xdd, 0x4e, 0xb9, 0x26, 0x2c, 0xd4,
	0xa0, 0x7c, 0x04, 0x3b, 0xb0, 0x1f, 0x25, 0x19, 0x9b, 0x93, 0xbd, 0x36, 0xea, 0x3c, 0xec, 0x93,
	0xef, 0x5f, 0xce, 0x5a, 0x65, 0x82, 0x5e, 0x92, 0x08, 0x2a, 0x65, 0xa8, 0x04, 0x9b, 0xcf, 0x02,
	0xad, 0x61, 0x0c, 0xb5, 0x79, 0x94, 0x51, 0x52, 0xdb, 0xea, 0x41, 0x51, 0xe3, 0x36, 0x1c, 0x24,
	0x54, 0xc6, 0x82, 0x2d, 0x14, 0xe3, 0x73, 0xb2, 0x5f, 0xa0, 0xbf, 0x47, 0x98, 0x40, 0xe3, 0x86,
	0x4e, 0x25, 0x53, 0x94, 0xd4, 0x0b, 0x5a, 0xb5, 0xd8, 0x85, 0x83, 0x05, 0x8b, 0xd5, 0x52, 0xd0,
	0xc9, 0x52, 0xa4, 0xa4, 0x51, 0xa4, 0x38, 0xca, 0xef, 0x4e, 0xe1, 0x4a, 0x8f, 0xc7, 0xc1, 0x45,
	0x00, 0xa5, 0x32, 0x16, 0x29, 0xee, 0x42, 0x23, 0xd2, 0xc1, 0xc8, 0x83, 0x7b, 0x22, 0x57, 0xe2,
	0x8b, 0x8f, 0x08, 0x0e, 0xff, 0xf9, 0x7c, 0x6c, 0x83, 0x15, 0x7a, 0xc1, 0xb5, 0x3f, 0xf0, 0x26,
	0xe1, 0xa8, 0x37, 0x1a, 0x87, 0x93, 0xf1, 0x65, 0x78, 0xe5, 0x0d, 0xfc, 0xd7, 0xbe, 0x37, 0x6c,
	0x1a, 0xd8, 0x82, 0xe3, 0x1d, 0x3e, 0x08, 0xbc, 0xde, 0xc8, 0x1b, 0x36, 0x11, 0x3e, 0x81, 0x47,
	0x3b, 0xac, 0x37, 0x18, 0xf9, 0xd7, 0x5e, 0xd3, 0xc4, 0x4f, 0xe0, 0xf1, 0x0e, 0xf2, 0x2f, 0x4b,
	0xb8, 0x67, 0xd5, 0x3e, 0x7c, 0xb6, 0x8d, 0xfe, 0xc5, 0xb7, 0xdc, 0x46, 0xb7, 0xb9, 0x8d, 0x7e,
	0xe6, 0x36, 0xfa, 0xb4, 0xb1, 0x8d, 0xdb, 0x8d, 0x6d, 0xfc, 0xd8, 0xd8, 0xc6, 0x9b, 0xee, 0x8c,
	0xa9, 0xb7, 0xcb, 0xa9, 0x13, 0xf3, 0xcc, 0xad, 0xfe, 0xe0, 0x59, 0x1a, 0x4d, 0xe5, 0xef, 0xce,
	0x7d, 0xff, 0xe7, 0xe0, 0xd4, 0x7a, 0x41, 0xe5, 0xb4, 0x5e, 0x9c, 0xc9, 0xcb, 0x5f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x1a, 0xcb, 0x5b, 0x2b, 0x92, 0x02, 0x00, 0x00,
}

func (m *Service) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Service) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Service) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintModels(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.PictureURL) > 0 {
		i -= len(m.PictureURL)
		copy(dAtA[i:], m.PictureURL)
		i = encodeVarintModels(dAtA, i, uint64(len(m.PictureURL)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Website) > 0 {
		i -= len(m.Website)
		copy(dAtA[i:], m.Website)
		i = encodeVarintModels(dAtA, i, uint64(len(m.Website)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintModels(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintModels(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Admin) > 0 {
		i -= len(m.Admin)
		copy(dAtA[i:], m.Admin)
		i = encodeVarintModels(dAtA, i, uint64(len(m.Admin)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Status != 0 {
		i = encodeVarintModels(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x10
	}
	if m.ID != 0 {
		i = encodeVarintModels(dAtA, i, uint64(m.ID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintModels(dAtA []byte, offset int, v uint64) int {
	offset -= sovModels(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Service) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ID != 0 {
		n += 1 + sovModels(uint64(m.ID))
	}
	if m.Status != 0 {
		n += 1 + sovModels(uint64(m.Status))
	}
	l = len(m.Admin)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.Website)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.PictureURL)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	return n
}

func sovModels(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozModels(x uint64) (n int) {
	return sovModels(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Service) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModels
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Service: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Service: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			m.ID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= ServiceStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Website", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Website = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PictureURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PictureURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModels(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipModels(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowModels
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowModels
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowModels
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthModels
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupModels
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthModels
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthModels        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowModels          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupModels = fmt.Errorf("proto: unexpected end of group")
)
