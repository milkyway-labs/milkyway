// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: milkyway/investors/v1/messages.proto

package types

import (
	context "context"
	cosmossdk_io_math "cosmossdk.io/math"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgUpdateInvestorsRewardRatio defines the message structure for the UpdateInvestorsRewardRatio gRPC
// service method. It allows the authority to update the investors reward ratio.
type MsgUpdateInvestorsRewardRatio struct {
	// Authority is the address that controls the module (defaults to x/gov unless
	// overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// InvestorsRewardRatio defines the proportion of staking rewards allocated to
	// investors relative to normal accounts.
	InvestorsRewardRatio cosmossdk_io_math.LegacyDec `protobuf:"bytes,2,opt,name=investors_reward_ratio,json=investorsRewardRatio,proto3,customtype=cosmossdk.io/math.LegacyDec" json:"investors_reward_ratio"`
}

func (m *MsgUpdateInvestorsRewardRatio) Reset()         { *m = MsgUpdateInvestorsRewardRatio{} }
func (m *MsgUpdateInvestorsRewardRatio) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateInvestorsRewardRatio) ProtoMessage()    {}
func (*MsgUpdateInvestorsRewardRatio) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ce26a7ad434627b, []int{0}
}
func (m *MsgUpdateInvestorsRewardRatio) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateInvestorsRewardRatio) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateInvestorsRewardRatio.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateInvestorsRewardRatio) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateInvestorsRewardRatio.Merge(m, src)
}
func (m *MsgUpdateInvestorsRewardRatio) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateInvestorsRewardRatio) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateInvestorsRewardRatio.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateInvestorsRewardRatio proto.InternalMessageInfo

func (m *MsgUpdateInvestorsRewardRatio) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

// MsgUpdateInvestorsRewardRatioResponse is the return value of MsgUpdateInvestorsRewardRatio.
type MsgUpdateInvestorsRewardRatioResponse struct {
}

func (m *MsgUpdateInvestorsRewardRatioResponse) Reset()         { *m = MsgUpdateInvestorsRewardRatioResponse{} }
func (m *MsgUpdateInvestorsRewardRatioResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateInvestorsRewardRatioResponse) ProtoMessage()    {}
func (*MsgUpdateInvestorsRewardRatioResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ce26a7ad434627b, []int{1}
}
func (m *MsgUpdateInvestorsRewardRatioResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateInvestorsRewardRatioResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateInvestorsRewardRatioResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateInvestorsRewardRatioResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateInvestorsRewardRatioResponse.Merge(m, src)
}
func (m *MsgUpdateInvestorsRewardRatioResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateInvestorsRewardRatioResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateInvestorsRewardRatioResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateInvestorsRewardRatioResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgUpdateInvestorsRewardRatio)(nil), "milkyway.investors.v1.MsgUpdateInvestorsRewardRatio")
	proto.RegisterType((*MsgUpdateInvestorsRewardRatioResponse)(nil), "milkyway.investors.v1.MsgUpdateInvestorsRewardRatioResponse")
}

func init() {
	proto.RegisterFile("milkyway/investors/v1/messages.proto", fileDescriptor_7ce26a7ad434627b)
}

var fileDescriptor_7ce26a7ad434627b = []byte{
	// 402 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0xc9, 0xcd, 0xcc, 0xc9,
	0xae, 0x2c, 0x4f, 0xac, 0xd4, 0xcf, 0xcc, 0x2b, 0x4b, 0x2d, 0x2e, 0xc9, 0x2f, 0x2a, 0xd6, 0x2f,
	0x33, 0xd4, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0x12, 0x85, 0xa9, 0xd2, 0x83, 0xab, 0xd2, 0x2b, 0x33, 0x94, 0x12, 0x4c, 0xcc, 0xcd, 0xcc,
	0xcb, 0xd7, 0x07, 0x93, 0x10, 0x95, 0x52, 0xe2, 0xc9, 0xf9, 0xc5, 0xb9, 0xf9, 0xc5, 0xfa, 0xb9,
	0xc5, 0xe9, 0x60, 0x73, 0x8a, 0xd3, 0xa1, 0x12, 0x92, 0x10, 0x89, 0x78, 0x30, 0x4f, 0x1f, 0xc2,
	0x81, 0x4a, 0x89, 0xa4, 0xe7, 0xa7, 0xe7, 0x43, 0xc4, 0x41, 0x2c, 0x88, 0xa8, 0x52, 0x03, 0x13,
	0x97, 0xac, 0x6f, 0x71, 0x7a, 0x68, 0x41, 0x4a, 0x62, 0x49, 0xaa, 0x27, 0xcc, 0xda, 0xa0, 0xd4,
	0xf2, 0xc4, 0xa2, 0x94, 0xa0, 0xc4, 0x92, 0xcc, 0x7c, 0x21, 0x33, 0x2e, 0xce, 0xc4, 0xd2, 0x92,
	0x8c, 0xfc, 0xa2, 0xcc, 0x92, 0x4a, 0x09, 0x46, 0x05, 0x46, 0x0d, 0x4e, 0x27, 0x89, 0x4b, 0x5b,
	0x74, 0x45, 0xa0, 0x86, 0x3b, 0xa6, 0xa4, 0x14, 0xa5, 0x16, 0x17, 0x07, 0x97, 0x14, 0x65, 0xe6,
	0xa5, 0x07, 0x21, 0x94, 0x0a, 0xe5, 0x70, 0x89, 0xc1, 0xbd, 0x11, 0x5f, 0x04, 0x36, 0x30, 0xbe,
	0x08, 0x64, 0xa2, 0x04, 0x13, 0xd8, 0x10, 0xb3, 0x13, 0xf7, 0xe4, 0x19, 0x6e, 0xdd, 0x93, 0x97,
	0x86, 0x18, 0x54, 0x9c, 0x92, 0xad, 0x97, 0x99, 0xaf, 0x9f, 0x9b, 0x58, 0x92, 0xa1, 0xe7, 0x93,
	0x9a, 0x9e, 0x98, 0x5c, 0xe9, 0x92, 0x9a, 0x7c, 0x69, 0x8b, 0x2e, 0x17, 0xd4, 0x1e, 0x97, 0xd4,
	0xe4, 0x15, 0xcf, 0x37, 0x68, 0x31, 0x06, 0x89, 0x64, 0x62, 0x71, 0xa5, 0x95, 0x65, 0xd3, 0xf3,
	0x0d, 0x5a, 0x08, 0xdb, 0xbb, 0x9e, 0x6f, 0xd0, 0x52, 0x83, 0x07, 0x3a, 0x5e, 0x0f, 0x2a, 0xa9,
	0x73, 0xa9, 0xe2, 0x55, 0x10, 0x94, 0x5a, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x6a, 0x34, 0x9f, 0x91,
	0x8b, 0xd9, 0xb7, 0x38, 0x5d, 0x68, 0x02, 0x23, 0x97, 0x14, 0x9e, 0x00, 0x33, 0xd1, 0xc3, 0x1a,
	0x8f, 0x7a, 0x78, 0x2d, 0x91, 0xb2, 0x21, 0x47, 0x17, 0xcc, 0x69, 0x52, 0xac, 0x0d, 0xa0, 0xb0,
	0x71, 0x0a, 0x38, 0xf1, 0x48, 0x8e, 0xf1, 0xc2, 0x23, 0x39, 0xc6, 0x07, 0x8f, 0xe4, 0x18, 0x27,
	0x3c, 0x96, 0x63, 0xb8, 0xf0, 0x58, 0x8e, 0xe1, 0xc6, 0x63, 0x39, 0x86, 0x28, 0xb3, 0xf4, 0xcc,
	0x92, 0x8c, 0xd2, 0x24, 0xbd, 0xe4, 0xfc, 0x5c, 0x7d, 0x98, 0x45, 0xba, 0x39, 0x89, 0x49, 0xc5,
	0x70, 0x9e, 0x7e, 0x99, 0xb9, 0x7e, 0x05, 0x52, 0xfa, 0x2c, 0xa9, 0x2c, 0x48, 0x2d, 0x4e, 0x62,
	0x03, 0x27, 0x13, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x80, 0xe2, 0x55, 0x8c, 0xc2, 0x02,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// UpdateInvestorsRewardRatio defines a (governance) operation for updating the investors reward ratio.
	// The authority defaults to the x/gov module account.
	UpdateInvestorsRewardRatio(ctx context.Context, in *MsgUpdateInvestorsRewardRatio, opts ...grpc.CallOption) (*MsgUpdateInvestorsRewardRatioResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) UpdateInvestorsRewardRatio(ctx context.Context, in *MsgUpdateInvestorsRewardRatio, opts ...grpc.CallOption) (*MsgUpdateInvestorsRewardRatioResponse, error) {
	out := new(MsgUpdateInvestorsRewardRatioResponse)
	err := c.cc.Invoke(ctx, "/milkyway.investors.v1.Msg/UpdateInvestorsRewardRatio", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// UpdateInvestorsRewardRatio defines a (governance) operation for updating the investors reward ratio.
	// The authority defaults to the x/gov module account.
	UpdateInvestorsRewardRatio(context.Context, *MsgUpdateInvestorsRewardRatio) (*MsgUpdateInvestorsRewardRatioResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) UpdateInvestorsRewardRatio(ctx context.Context, req *MsgUpdateInvestorsRewardRatio) (*MsgUpdateInvestorsRewardRatioResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateInvestorsRewardRatio not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_UpdateInvestorsRewardRatio_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateInvestorsRewardRatio)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateInvestorsRewardRatio(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milkyway.investors.v1.Msg/UpdateInvestorsRewardRatio",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateInvestorsRewardRatio(ctx, req.(*MsgUpdateInvestorsRewardRatio))
	}
	return interceptor(ctx, in, info, handler)
}

var Msg_serviceDesc = _Msg_serviceDesc
var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "milkyway.investors.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateInvestorsRewardRatio",
			Handler:    _Msg_UpdateInvestorsRewardRatio_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "milkyway/investors/v1/messages.proto",
}

func (m *MsgUpdateInvestorsRewardRatio) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateInvestorsRewardRatio) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateInvestorsRewardRatio) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.InvestorsRewardRatio.Size()
		i -= size
		if _, err := m.InvestorsRewardRatio.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMessages(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintMessages(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateInvestorsRewardRatioResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateInvestorsRewardRatioResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateInvestorsRewardRatioResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintMessages(dAtA []byte, offset int, v uint64) int {
	offset -= sovMessages(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgUpdateInvestorsRewardRatio) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovMessages(uint64(l))
	}
	l = m.InvestorsRewardRatio.Size()
	n += 1 + l + sovMessages(uint64(l))
	return n
}

func (m *MsgUpdateInvestorsRewardRatioResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovMessages(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMessages(x uint64) (n int) {
	return sovMessages(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgUpdateInvestorsRewardRatio) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateInvestorsRewardRatio: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateInvestorsRewardRatio: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InvestorsRewardRatio", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.InvestorsRewardRatio.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateInvestorsRewardRatioResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateInvestorsRewardRatioResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateInvestorsRewardRatioResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMessages(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMessages
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMessages
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMessages
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMessages        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMessages          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMessages = fmt.Errorf("proto: unexpected end of group")
)
