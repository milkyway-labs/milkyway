// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: milkyway/vestingreward/v1/messages.proto

package types

import (
	context "context"
	cosmossdk_io_math "cosmossdk.io/math"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgUpdateVestingAccountsRewardRatio defines the message structure for the UpdateVestingAccountsRewardRatio gRPC
// service method. It allows the authority to update the vesting accounts reward ratio.
type MsgUpdateVestingAccountsRewardRatio struct {
	// Authority is the address that controls the module (defaults to x/gov unless
	// overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// VestingAccountsRewardRatio defines the proportion of staking rewards allocated to
	// vesting accounts relative to normal accounts.
	VestingAccountsRewardRatio cosmossdk_io_math.LegacyDec `protobuf:"bytes,2,opt,name=vesting_accounts_reward_ratio,json=vestingAccountsRewardRatio,proto3,customtype=cosmossdk.io/math.LegacyDec" json:"vesting_accounts_reward_ratio"`
}

func (m *MsgUpdateVestingAccountsRewardRatio) Reset()         { *m = MsgUpdateVestingAccountsRewardRatio{} }
func (m *MsgUpdateVestingAccountsRewardRatio) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateVestingAccountsRewardRatio) ProtoMessage()    {}
func (*MsgUpdateVestingAccountsRewardRatio) Descriptor() ([]byte, []int) {
	return fileDescriptor_f6acab8079370e8b, []int{0}
}
func (m *MsgUpdateVestingAccountsRewardRatio) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateVestingAccountsRewardRatio) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateVestingAccountsRewardRatio.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateVestingAccountsRewardRatio) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateVestingAccountsRewardRatio.Merge(m, src)
}
func (m *MsgUpdateVestingAccountsRewardRatio) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateVestingAccountsRewardRatio) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateVestingAccountsRewardRatio.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateVestingAccountsRewardRatio proto.InternalMessageInfo

func (m *MsgUpdateVestingAccountsRewardRatio) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

// MsgUpdateVestingAccountsRewardRatioResponse is the return value of MsgUpdateVestingAccountsRewardRatio.
type MsgUpdateVestingAccountsRewardRatioResponse struct {
}

func (m *MsgUpdateVestingAccountsRewardRatioResponse) Reset() {
	*m = MsgUpdateVestingAccountsRewardRatioResponse{}
}
func (m *MsgUpdateVestingAccountsRewardRatioResponse) String() string {
	return proto.CompactTextString(m)
}
func (*MsgUpdateVestingAccountsRewardRatioResponse) ProtoMessage() {}
func (*MsgUpdateVestingAccountsRewardRatioResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f6acab8079370e8b, []int{1}
}
func (m *MsgUpdateVestingAccountsRewardRatioResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateVestingAccountsRewardRatioResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateVestingAccountsRewardRatioResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateVestingAccountsRewardRatioResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateVestingAccountsRewardRatioResponse.Merge(m, src)
}
func (m *MsgUpdateVestingAccountsRewardRatioResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateVestingAccountsRewardRatioResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateVestingAccountsRewardRatioResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateVestingAccountsRewardRatioResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgUpdateVestingAccountsRewardRatio)(nil), "milkyway.vestingreward.v1.MsgUpdateVestingAccountsRewardRatio")
	proto.RegisterType((*MsgUpdateVestingAccountsRewardRatioResponse)(nil), "milkyway.vestingreward.v1.MsgUpdateVestingAccountsRewardRatioResponse")
}

func init() {
	proto.RegisterFile("milkyway/vestingreward/v1/messages.proto", fileDescriptor_f6acab8079370e8b)
}

var fileDescriptor_f6acab8079370e8b = []byte{
	// 415 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0xc8, 0xcd, 0xcc, 0xc9,
	0xae, 0x2c, 0x4f, 0xac, 0xd4, 0x2f, 0x4b, 0x2d, 0x2e, 0xc9, 0xcc, 0x4b, 0x2f, 0x4a, 0x2d, 0x4f,
	0x2c, 0x4a, 0xd1, 0x2f, 0x33, 0xd4, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0x2d, 0xd6, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0x92, 0x84, 0xa9, 0xd4, 0x43, 0x51, 0xa9, 0x57, 0x66, 0x28, 0x25,
	0x98, 0x98, 0x9b, 0x99, 0x97, 0xaf, 0x0f, 0x26, 0x21, 0xaa, 0xa5, 0xc4, 0x93, 0xf3, 0x8b, 0x73,
	0xf3, 0x8b, 0xf5, 0x73, 0x8b, 0xd3, 0xc1, 0x66, 0x15, 0xa7, 0x43, 0x25, 0x24, 0x21, 0x12, 0xf1,
	0x60, 0x9e, 0x3e, 0x84, 0x03, 0x95, 0x12, 0x49, 0xcf, 0x4f, 0xcf, 0x87, 0x88, 0x83, 0x58, 0x10,
	0x51, 0xa5, 0x99, 0x4c, 0x5c, 0xca, 0xbe, 0xc5, 0xe9, 0xa1, 0x05, 0x29, 0x89, 0x25, 0xa9, 0x61,
	0x10, 0xab, 0x1d, 0x93, 0x93, 0xf3, 0x4b, 0xf3, 0x4a, 0x8a, 0x83, 0xc0, 0x4e, 0x08, 0x4a, 0x2c,
	0xc9, 0xcc, 0x17, 0x32, 0xe3, 0xe2, 0x4c, 0x2c, 0x2d, 0xc9, 0xc8, 0x2f, 0xca, 0x2c, 0xa9, 0x94,
	0x60, 0x54, 0x60, 0xd4, 0xe0, 0x74, 0x92, 0xb8, 0xb4, 0x45, 0x57, 0x04, 0x6a, 0x85, 0x63, 0x4a,
	0x4a, 0x51, 0x6a, 0x71, 0x71, 0x70, 0x49, 0x51, 0x66, 0x5e, 0x7a, 0x10, 0x42, 0xa9, 0x50, 0x25,
	0x97, 0x2c, 0xd4, 0x43, 0xf1, 0x89, 0x50, 0x63, 0xe3, 0x21, 0x5e, 0x8b, 0x2f, 0x02, 0x19, 0x2c,
	0xc1, 0x04, 0x36, 0xcb, 0xec, 0xc4, 0x3d, 0x79, 0x86, 0x5b, 0xf7, 0xe4, 0xa5, 0x21, 0xe6, 0x15,
	0xa7, 0x64, 0xeb, 0x65, 0xe6, 0xeb, 0xe7, 0x26, 0x96, 0x64, 0xe8, 0xf9, 0xa4, 0xa6, 0x27, 0x26,
	0x57, 0xba, 0xa4, 0x26, 0x5f, 0xda, 0xa2, 0xcb, 0x05, 0xb5, 0xce, 0x25, 0x35, 0x79, 0xc5, 0xf3,
	0x0d, 0x5a, 0x8c, 0x41, 0x52, 0x65, 0x38, 0x9d, 0x6c, 0x65, 0xdf, 0xf4, 0x7c, 0x83, 0x16, 0xc2,
	0x29, 0x5d, 0xcf, 0x37, 0x68, 0xe9, 0xc0, 0xe3, 0x83, 0x08, 0x3f, 0x2b, 0xe9, 0x72, 0x69, 0x13,
	0xa1, 0x2c, 0x28, 0xb5, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0xd5, 0x68, 0x27, 0x23, 0x17, 0xb3, 0x6f,
	0x71, 0xba, 0xd0, 0x2a, 0x46, 0x2e, 0x05, 0x82, 0xe1, 0x69, 0xa7, 0x87, 0x33, 0xc2, 0xf5, 0x88,
	0xb0, 0x54, 0xca, 0x8d, 0x32, 0xfd, 0x30, 0x47, 0x4b, 0xb1, 0x36, 0x80, 0xc2, 0xd1, 0x29, 0xe4,
	0xc4, 0x23, 0x39, 0xc6, 0x0b, 0x8f, 0xe4, 0x18, 0x1f, 0x3c, 0x92, 0x63, 0x9c, 0xf0, 0x58, 0x8e,
	0xe1, 0xc2, 0x63, 0x39, 0x86, 0x1b, 0x8f, 0xe5, 0x18, 0xa2, 0xac, 0xd2, 0x33, 0x4b, 0x32, 0x4a,
	0x93, 0xf4, 0x92, 0xf3, 0x73, 0xf5, 0x61, 0x56, 0xea, 0xe6, 0x24, 0x26, 0x15, 0xeb, 0x23, 0xd2,
	0xb6, 0xb9, 0x7e, 0x05, 0x5a, 0x02, 0x2f, 0xa9, 0x2c, 0x48, 0x2d, 0x4e, 0x62, 0x03, 0xa7, 0x31,
	0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfa, 0x22, 0x64, 0xa3, 0x07, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// UpdateVestingAccountsRewardRatio defines a (governance) operation for updating the vesting accounts reward ratio.
	// The authority defaults to the x/gov module account.
	UpdateVestingAccountsRewardRatio(ctx context.Context, in *MsgUpdateVestingAccountsRewardRatio, opts ...grpc.CallOption) (*MsgUpdateVestingAccountsRewardRatioResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) UpdateVestingAccountsRewardRatio(ctx context.Context, in *MsgUpdateVestingAccountsRewardRatio, opts ...grpc.CallOption) (*MsgUpdateVestingAccountsRewardRatioResponse, error) {
	out := new(MsgUpdateVestingAccountsRewardRatioResponse)
	err := c.cc.Invoke(ctx, "/milkyway.vestingreward.v1.Msg/UpdateVestingAccountsRewardRatio", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// UpdateVestingAccountsRewardRatio defines a (governance) operation for updating the vesting accounts reward ratio.
	// The authority defaults to the x/gov module account.
	UpdateVestingAccountsRewardRatio(context.Context, *MsgUpdateVestingAccountsRewardRatio) (*MsgUpdateVestingAccountsRewardRatioResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) UpdateVestingAccountsRewardRatio(ctx context.Context, req *MsgUpdateVestingAccountsRewardRatio) (*MsgUpdateVestingAccountsRewardRatioResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateVestingAccountsRewardRatio not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_UpdateVestingAccountsRewardRatio_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateVestingAccountsRewardRatio)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateVestingAccountsRewardRatio(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milkyway.vestingreward.v1.Msg/UpdateVestingAccountsRewardRatio",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateVestingAccountsRewardRatio(ctx, req.(*MsgUpdateVestingAccountsRewardRatio))
	}
	return interceptor(ctx, in, info, handler)
}

var Msg_serviceDesc = _Msg_serviceDesc
var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "milkyway.vestingreward.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateVestingAccountsRewardRatio",
			Handler:    _Msg_UpdateVestingAccountsRewardRatio_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "milkyway/vestingreward/v1/messages.proto",
}

func (m *MsgUpdateVestingAccountsRewardRatio) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateVestingAccountsRewardRatio) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateVestingAccountsRewardRatio) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.VestingAccountsRewardRatio.Size()
		i -= size
		if _, err := m.VestingAccountsRewardRatio.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMessages(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintMessages(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateVestingAccountsRewardRatioResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateVestingAccountsRewardRatioResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateVestingAccountsRewardRatioResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintMessages(dAtA []byte, offset int, v uint64) int {
	offset -= sovMessages(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgUpdateVestingAccountsRewardRatio) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovMessages(uint64(l))
	}
	l = m.VestingAccountsRewardRatio.Size()
	n += 1 + l + sovMessages(uint64(l))
	return n
}

func (m *MsgUpdateVestingAccountsRewardRatioResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovMessages(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMessages(x uint64) (n int) {
	return sovMessages(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgUpdateVestingAccountsRewardRatio) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateVestingAccountsRewardRatio: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateVestingAccountsRewardRatio: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VestingAccountsRewardRatio", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.VestingAccountsRewardRatio.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateVestingAccountsRewardRatioResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateVestingAccountsRewardRatioResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateVestingAccountsRewardRatioResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMessages(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMessages
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMessages
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMessages
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMessages        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMessages          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMessages = fmt.Errorf("proto: unexpected end of group")
)
