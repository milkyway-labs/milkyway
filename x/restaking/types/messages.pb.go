// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: milkyway/restaking/v1/messages.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgJoinService defines the message structure for the
// JoinService gRPC service method. It allows the opeator admin to
// start securing a AVS.
type MsgJoinService struct {
	Sender     string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	OperatorID uint32 `protobuf:"varint,2,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	ServiceID  uint32 `protobuf:"varint,3,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
}

func (m *MsgJoinService) Reset()         { *m = MsgJoinService{} }
func (m *MsgJoinService) String() string { return proto.CompactTextString(m) }
func (*MsgJoinService) ProtoMessage()    {}
func (*MsgJoinService) Descriptor() ([]byte, []int) {
	return fileDescriptor_9772be2b1a923bdb, []int{0}
}
func (m *MsgJoinService) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgJoinService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgJoinService.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgJoinService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgJoinService.Merge(m, src)
}
func (m *MsgJoinService) XXX_Size() int {
	return m.Size()
}
func (m *MsgJoinService) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgJoinService.DiscardUnknown(m)
}

var xxx_messageInfo_MsgJoinService proto.InternalMessageInfo

func (m *MsgJoinService) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgJoinService) GetOperatorID() uint32 {
	if m != nil {
		return m.OperatorID
	}
	return 0
}

func (m *MsgJoinService) GetServiceID() uint32 {
	if m != nil {
		return m.ServiceID
	}
	return 0
}

// MsgJoinServiceResponse is the return value of MsgJoinService.
type MsgJoinServiceResponse struct {
}

func (m *MsgJoinServiceResponse) Reset()         { *m = MsgJoinServiceResponse{} }
func (m *MsgJoinServiceResponse) String() string { return proto.CompactTextString(m) }
func (*MsgJoinServiceResponse) ProtoMessage()    {}
func (*MsgJoinServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9772be2b1a923bdb, []int{1}
}
func (m *MsgJoinServiceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgJoinServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgJoinServiceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgJoinServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgJoinServiceResponse.Merge(m, src)
}
func (m *MsgJoinServiceResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgJoinServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgJoinServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgJoinServiceResponse proto.InternalMessageInfo

// MsgUpdateServiceParams defines the message structure for the
// UpdateServiceParams gRPC service method. It allows the service admin to
// update the service's parameters.
type MsgUpdateServiceParams struct {
	Sender    string        `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	ServiceID uint32        `protobuf:"varint,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Params    ServiceParams `protobuf:"bytes,3,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateServiceParams) Reset()         { *m = MsgUpdateServiceParams{} }
func (m *MsgUpdateServiceParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateServiceParams) ProtoMessage()    {}
func (*MsgUpdateServiceParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_9772be2b1a923bdb, []int{2}
}
func (m *MsgUpdateServiceParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateServiceParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateServiceParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateServiceParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateServiceParams.Merge(m, src)
}
func (m *MsgUpdateServiceParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateServiceParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateServiceParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateServiceParams proto.InternalMessageInfo

func (m *MsgUpdateServiceParams) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgUpdateServiceParams) GetServiceID() uint32 {
	if m != nil {
		return m.ServiceID
	}
	return 0
}

func (m *MsgUpdateServiceParams) GetParams() ServiceParams {
	if m != nil {
		return m.Params
	}
	return ServiceParams{}
}

// MsgUpdateServiceParamsResponse is the return value of MsgUpdateServiceParams.
type MsgUpdateServiceParamsResponse struct {
}

func (m *MsgUpdateServiceParamsResponse) Reset()         { *m = MsgUpdateServiceParamsResponse{} }
func (m *MsgUpdateServiceParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateServiceParamsResponse) ProtoMessage()    {}
func (*MsgUpdateServiceParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9772be2b1a923bdb, []int{3}
}
func (m *MsgUpdateServiceParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateServiceParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateServiceParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateServiceParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateServiceParamsResponse.Merge(m, src)
}
func (m *MsgUpdateServiceParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateServiceParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateServiceParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateServiceParamsResponse proto.InternalMessageInfo

// MsgDelegatePool defines the message structure for the DelegatePool gRPC
// service method. It allows a user to put their assets into a restaking pool
// that will later be used to provide cryptoeconomic security to services that
// choose it.
type MsgDelegatePool struct {
	// Delegator is the address of the user joining the pool
	Delegator string `protobuf:"bytes,1,opt,name=delegator,proto3" json:"delegator,omitempty"`
	// Amount is the amount of coins to be staked
	Amount types.Coin `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount"`
}

func (m *MsgDelegatePool) Reset()         { *m = MsgDelegatePool{} }
func (m *MsgDelegatePool) String() string { return proto.CompactTextString(m) }
func (*MsgDelegatePool) ProtoMessage()    {}
func (*MsgDelegatePool) Descriptor() ([]byte, []int) {
	return fileDescriptor_9772be2b1a923bdb, []int{4}
}
func (m *MsgDelegatePool) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDelegatePool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDelegatePool.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDelegatePool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDelegatePool.Merge(m, src)
}
func (m *MsgDelegatePool) XXX_Size() int {
	return m.Size()
}
func (m *MsgDelegatePool) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDelegatePool.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDelegatePool proto.InternalMessageInfo

func (m *MsgDelegatePool) GetDelegator() string {
	if m != nil {
		return m.Delegator
	}
	return ""
}

func (m *MsgDelegatePool) GetAmount() types.Coin {
	if m != nil {
		return m.Amount
	}
	return types.Coin{}
}

// MsgDelegatePoolResponse defines the return value of MsgDelegatePool.
type MsgDelegatePoolResponse struct {
}

func (m *MsgDelegatePoolResponse) Reset()         { *m = MsgDelegatePoolResponse{} }
func (m *MsgDelegatePoolResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDelegatePoolResponse) ProtoMessage()    {}
func (*MsgDelegatePoolResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9772be2b1a923bdb, []int{5}
}
func (m *MsgDelegatePoolResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDelegatePoolResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDelegatePoolResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDelegatePoolResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDelegatePoolResponse.Merge(m, src)
}
func (m *MsgDelegatePoolResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDelegatePoolResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDelegatePoolResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDelegatePoolResponse proto.InternalMessageInfo

// MsgDelegateOperator defines the message structure for the DelegateOperator
// gRPC service method. It allows a user to delegate their assets to an
// operator.
type MsgDelegateOperator struct {
	// Delegator is the address of the user delegating to the operator
	Delegator string `protobuf:"bytes,1,opt,name=delegator,proto3" json:"delegator,omitempty"`
	// OperatorID is the ID of the operator to delegate to
	OperatorID uint32 `protobuf:"varint,2,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	// Amount is the amount of coins to be delegated
	Amount github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,3,rep,name=amount,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"amount"`
}

func (m *MsgDelegateOperator) Reset()         { *m = MsgDelegateOperator{} }
func (m *MsgDelegateOperator) String() string { return proto.CompactTextString(m) }
func (*MsgDelegateOperator) ProtoMessage()    {}
func (*MsgDelegateOperator) Descriptor() ([]byte, []int) {
	return fileDescriptor_9772be2b1a923bdb, []int{6}
}
func (m *MsgDelegateOperator) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDelegateOperator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDelegateOperator.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDelegateOperator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDelegateOperator.Merge(m, src)
}
func (m *MsgDelegateOperator) XXX_Size() int {
	return m.Size()
}
func (m *MsgDelegateOperator) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDelegateOperator.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDelegateOperator proto.InternalMessageInfo

func (m *MsgDelegateOperator) GetDelegator() string {
	if m != nil {
		return m.Delegator
	}
	return ""
}

func (m *MsgDelegateOperator) GetOperatorID() uint32 {
	if m != nil {
		return m.OperatorID
	}
	return 0
}

func (m *MsgDelegateOperator) GetAmount() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.Amount
	}
	return nil
}

// MsgDelegateOperatorResponse is the return value of MsgDelegateOperator.
type MsgDelegateOperatorResponse struct {
}

func (m *MsgDelegateOperatorResponse) Reset()         { *m = MsgDelegateOperatorResponse{} }
func (m *MsgDelegateOperatorResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDelegateOperatorResponse) ProtoMessage()    {}
func (*MsgDelegateOperatorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9772be2b1a923bdb, []int{7}
}
func (m *MsgDelegateOperatorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDelegateOperatorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDelegateOperatorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDelegateOperatorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDelegateOperatorResponse.Merge(m, src)
}
func (m *MsgDelegateOperatorResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDelegateOperatorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDelegateOperatorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDelegateOperatorResponse proto.InternalMessageInfo

// MsgDelegateService defines the message structure for the DelegateService gRPC
// service method. It allows a user to delegate their assets to a service.
type MsgDelegateService struct {
	// Delegator is the address of the user delegating to the service
	Delegator string `protobuf:"bytes,1,opt,name=delegator,proto3" json:"delegator,omitempty"`
	// ServiceID is the ID of the service to delegate to
	ServiceID uint32 `protobuf:"varint,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Amount is the amount of coins to be delegated
	Amount github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,3,rep,name=amount,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"amount"`
}

func (m *MsgDelegateService) Reset()         { *m = MsgDelegateService{} }
func (m *MsgDelegateService) String() string { return proto.CompactTextString(m) }
func (*MsgDelegateService) ProtoMessage()    {}
func (*MsgDelegateService) Descriptor() ([]byte, []int) {
	return fileDescriptor_9772be2b1a923bdb, []int{8}
}
func (m *MsgDelegateService) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDelegateService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDelegateService.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDelegateService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDelegateService.Merge(m, src)
}
func (m *MsgDelegateService) XXX_Size() int {
	return m.Size()
}
func (m *MsgDelegateService) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDelegateService.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDelegateService proto.InternalMessageInfo

func (m *MsgDelegateService) GetDelegator() string {
	if m != nil {
		return m.Delegator
	}
	return ""
}

func (m *MsgDelegateService) GetServiceID() uint32 {
	if m != nil {
		return m.ServiceID
	}
	return 0
}

func (m *MsgDelegateService) GetAmount() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.Amount
	}
	return nil
}

// MsgDelegateServiceResponse is the return value of MsgDelegateService.
type MsgDelegateServiceResponse struct {
}

func (m *MsgDelegateServiceResponse) Reset()         { *m = MsgDelegateServiceResponse{} }
func (m *MsgDelegateServiceResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDelegateServiceResponse) ProtoMessage()    {}
func (*MsgDelegateServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9772be2b1a923bdb, []int{9}
}
func (m *MsgDelegateServiceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDelegateServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDelegateServiceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDelegateServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDelegateServiceResponse.Merge(m, src)
}
func (m *MsgDelegateServiceResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDelegateServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDelegateServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDelegateServiceResponse proto.InternalMessageInfo

// MsgUpdateParams defines the message structure for the UpdateParams gRPC
// service method. It allows the authority to update the module parameters.
type MsgUpdateParams struct {
	// Authority is the address that controls the module (defaults to x/gov unless
	// overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty" yaml:"authority"`
	// Params define the parameters to update.
	//
	// NOTE: All parameters must be supplied.
	Params Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateParams) Reset()         { *m = MsgUpdateParams{} }
func (m *MsgUpdateParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParams) ProtoMessage()    {}
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_9772be2b1a923bdb, []int{10}
}
func (m *MsgUpdateParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParams.Merge(m, src)
}
func (m *MsgUpdateParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParams proto.InternalMessageInfo

func (m *MsgUpdateParams) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateParams) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

// MsgUpdateParamsResponse is the return value of MsgUpdateParams.
type MsgUpdateParamsResponse struct {
}

func (m *MsgUpdateParamsResponse) Reset()         { *m = MsgUpdateParamsResponse{} }
func (m *MsgUpdateParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParamsResponse) ProtoMessage()    {}
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9772be2b1a923bdb, []int{11}
}
func (m *MsgUpdateParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParamsResponse.Merge(m, src)
}
func (m *MsgUpdateParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParamsResponse proto.InternalMessageInfo

// MsgUndelegatePool the message structure for the UndelegatePool gRPC service
// method. It allows a user to undelegate their assets from a restaking pool.
type MsgUndelegatePool struct {
	// Delegator is the address of the user undelegating from the pool.
	Delegator string `protobuf:"bytes,1,opt,name=delegator,proto3" json:"delegator,omitempty"`
	// Amount is the amount of coins to be undelegated.
	Amount types.Coin `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount"`
}

func (m *MsgUndelegatePool) Reset()         { *m = MsgUndelegatePool{} }
func (m *MsgUndelegatePool) String() string { return proto.CompactTextString(m) }
func (*MsgUndelegatePool) ProtoMessage()    {}
func (*MsgUndelegatePool) Descriptor() ([]byte, []int) {
	return fileDescriptor_9772be2b1a923bdb, []int{12}
}
func (m *MsgUndelegatePool) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUndelegatePool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUndelegatePool.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUndelegatePool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUndelegatePool.Merge(m, src)
}
func (m *MsgUndelegatePool) XXX_Size() int {
	return m.Size()
}
func (m *MsgUndelegatePool) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUndelegatePool.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUndelegatePool proto.InternalMessageInfo

// MsgUndelegateOperator the message structure for the UndelegateOperator gRPC
// service method. It allows a user to undelegate their assets from a restaking
// operator.
type MsgUndelegateOperator struct {
	// Delegator is the address of the user undelegating from the operator.
	Delegator string `protobuf:"bytes,1,opt,name=delegator,proto3" json:"delegator,omitempty"`
	// OperatorID is the ID of the operator to undelegate from.
	OperatorID uint32 `protobuf:"varint,2,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	// Amount is the amount of coins to be undelegated.
	Amount github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,3,rep,name=amount,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"amount"`
}

func (m *MsgUndelegateOperator) Reset()         { *m = MsgUndelegateOperator{} }
func (m *MsgUndelegateOperator) String() string { return proto.CompactTextString(m) }
func (*MsgUndelegateOperator) ProtoMessage()    {}
func (*MsgUndelegateOperator) Descriptor() ([]byte, []int) {
	return fileDescriptor_9772be2b1a923bdb, []int{13}
}
func (m *MsgUndelegateOperator) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUndelegateOperator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUndelegateOperator.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUndelegateOperator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUndelegateOperator.Merge(m, src)
}
func (m *MsgUndelegateOperator) XXX_Size() int {
	return m.Size()
}
func (m *MsgUndelegateOperator) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUndelegateOperator.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUndelegateOperator proto.InternalMessageInfo

// MsgUndelegateService the message structure for the UndelegateService gRPC
// service method. It allows a user to undelegate their assets from a restaking
// service.
type MsgUndelegateService struct {
	// Delegator is the address of the user undelegating from the service.
	Delegator string `protobuf:"bytes,1,opt,name=delegator,proto3" json:"delegator,omitempty"`
	// ServiceID is the ID of the service to undelegate from.
	ServiceID uint32 `protobuf:"varint,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Amount is the amount of coins to be undelegated.
	Amount github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,3,rep,name=amount,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"amount"`
}

func (m *MsgUndelegateService) Reset()         { *m = MsgUndelegateService{} }
func (m *MsgUndelegateService) String() string { return proto.CompactTextString(m) }
func (*MsgUndelegateService) ProtoMessage()    {}
func (*MsgUndelegateService) Descriptor() ([]byte, []int) {
	return fileDescriptor_9772be2b1a923bdb, []int{14}
}
func (m *MsgUndelegateService) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUndelegateService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUndelegateService.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUndelegateService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUndelegateService.Merge(m, src)
}
func (m *MsgUndelegateService) XXX_Size() int {
	return m.Size()
}
func (m *MsgUndelegateService) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUndelegateService.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUndelegateService proto.InternalMessageInfo

// MsgUndelegateResponse defines the response type for the undelegation methods.
type MsgUndelegateResponse struct {
	// CompletionTime represents the time at which the undelegation will be
	// complete
	CompletionTime time.Time `protobuf:"bytes,1,opt,name=completion_time,json=completionTime,proto3,stdtime" json:"completion_time"`
}

func (m *MsgUndelegateResponse) Reset()         { *m = MsgUndelegateResponse{} }
func (m *MsgUndelegateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUndelegateResponse) ProtoMessage()    {}
func (*MsgUndelegateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9772be2b1a923bdb, []int{15}
}
func (m *MsgUndelegateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUndelegateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUndelegateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUndelegateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUndelegateResponse.Merge(m, src)
}
func (m *MsgUndelegateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUndelegateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUndelegateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUndelegateResponse proto.InternalMessageInfo

func (m *MsgUndelegateResponse) GetCompletionTime() time.Time {
	if m != nil {
		return m.CompletionTime
	}
	return time.Time{}
}

func init() {
	proto.RegisterType((*MsgJoinService)(nil), "milkyway.restaking.v1.MsgJoinService")
	proto.RegisterType((*MsgJoinServiceResponse)(nil), "milkyway.restaking.v1.MsgJoinServiceResponse")
	proto.RegisterType((*MsgUpdateServiceParams)(nil), "milkyway.restaking.v1.MsgUpdateServiceParams")
	proto.RegisterType((*MsgUpdateServiceParamsResponse)(nil), "milkyway.restaking.v1.MsgUpdateServiceParamsResponse")
	proto.RegisterType((*MsgDelegatePool)(nil), "milkyway.restaking.v1.MsgDelegatePool")
	proto.RegisterType((*MsgDelegatePoolResponse)(nil), "milkyway.restaking.v1.MsgDelegatePoolResponse")
	proto.RegisterType((*MsgDelegateOperator)(nil), "milkyway.restaking.v1.MsgDelegateOperator")
	proto.RegisterType((*MsgDelegateOperatorResponse)(nil), "milkyway.restaking.v1.MsgDelegateOperatorResponse")
	proto.RegisterType((*MsgDelegateService)(nil), "milkyway.restaking.v1.MsgDelegateService")
	proto.RegisterType((*MsgDelegateServiceResponse)(nil), "milkyway.restaking.v1.MsgDelegateServiceResponse")
	proto.RegisterType((*MsgUpdateParams)(nil), "milkyway.restaking.v1.MsgUpdateParams")
	proto.RegisterType((*MsgUpdateParamsResponse)(nil), "milkyway.restaking.v1.MsgUpdateParamsResponse")
	proto.RegisterType((*MsgUndelegatePool)(nil), "milkyway.restaking.v1.MsgUndelegatePool")
	proto.RegisterType((*MsgUndelegateOperator)(nil), "milkyway.restaking.v1.MsgUndelegateOperator")
	proto.RegisterType((*MsgUndelegateService)(nil), "milkyway.restaking.v1.MsgUndelegateService")
	proto.RegisterType((*MsgUndelegateResponse)(nil), "milkyway.restaking.v1.MsgUndelegateResponse")
}

func init() {
	proto.RegisterFile("milkyway/restaking/v1/messages.proto", fileDescriptor_9772be2b1a923bdb)
}

var fileDescriptor_9772be2b1a923bdb = []byte{
	// 1026 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0x41, 0x6f, 0xe3, 0x44,
	0x14, 0x8e, 0x53, 0x08, 0xca, 0x0b, 0x4d, 0xb7, 0xde, 0x2e, 0x4d, 0xbd, 0x5b, 0xbb, 0xb2, 0x96,
	0xa5, 0x74, 0x5b, 0x9b, 0x64, 0x55, 0x04, 0x81, 0x4b, 0x43, 0x2f, 0x5d, 0xa9, 0x62, 0x95, 0x85,
	0x0b, 0x97, 0xca, 0x89, 0x67, 0x5d, 0xab, 0xb6, 0xc7, 0xf2, 0xb8, 0x85, 0x88, 0x0b, 0xe2, 0x84,
	0x38, 0xed, 0x95, 0x0b, 0xea, 0x05, 0x09, 0x71, 0xea, 0x81, 0x0b, 0x37, 0x8e, 0x2b, 0x4e, 0x0b,
	0x27, 0x4e, 0x59, 0x94, 0x1e, 0xca, 0x05, 0x21, 0xf1, 0x0b, 0x90, 0xed, 0xf1, 0xd4, 0x4e, 0x9c,
	0xd4, 0xa9, 0x56, 0xb9, 0xb4, 0xf1, 0xbc, 0x6f, 0xde, 0xbc, 0xef, 0x9b, 0x99, 0x6f, 0x1e, 0xdc,
	0xb5, 0x4d, 0xeb, 0xa8, 0xf7, 0xb9, 0xd6, 0x53, 0x3d, 0x44, 0x7c, 0xed, 0xc8, 0x74, 0x0c, 0xf5,
	0xa4, 0xae, 0xda, 0x88, 0x10, 0xcd, 0x40, 0x44, 0x71, 0x3d, 0xec, 0x63, 0xfe, 0x56, 0x8c, 0x52,
	0x18, 0x4a, 0x39, 0xa9, 0x0b, 0x92, 0x81, 0xb1, 0x61, 0x21, 0x35, 0x04, 0x75, 0x8e, 0x9f, 0xa8,
	0xbe, 0x69, 0x07, 0x71, 0xdb, 0x8d, 0xe6, 0x09, 0x8b, 0x9a, 0x6d, 0x3a, 0x58, 0x0d, 0xff, 0xd2,
	0xa1, 0x95, 0x2e, 0x26, 0x36, 0x26, 0x07, 0xe1, 0x97, 0x1a, 0x7d, 0xd0, 0x90, 0x18, 0x7d, 0xa9,
	0x1d, 0x8d, 0x20, 0xf5, 0xa4, 0xde, 0x41, 0xbe, 0x56, 0x57, 0xbb, 0xd8, 0x74, 0x68, 0x7c, 0x99,
	0xc6, 0x6d, 0x12, 0xd5, 0x48, 0x0c, 0x1a, 0x58, 0x32, 0xb0, 0x81, 0xa3, 0x84, 0xc1, 0x2f, 0x3a,
	0x2a, 0x67, 0x53, 0x73, 0x35, 0x4f, 0xb3, 0xc9, 0x64, 0x8c, 0x8d, 0x75, 0x64, 0x51, 0x8c, 0xfc,
	0x1b, 0x07, 0xd5, 0x7d, 0x62, 0x3c, 0xc4, 0xa6, 0xf3, 0x18, 0x79, 0x27, 0x66, 0x17, 0xf1, 0xef,
	0x40, 0x89, 0x20, 0x47, 0x47, 0x5e, 0x8d, 0x5b, 0xe3, 0xd6, 0xcb, 0xad, 0xda, 0x1f, 0x3f, 0x6f,
	0x2d, 0x51, 0x2e, 0x3b, 0xba, 0xee, 0x21, 0x42, 0x1e, 0xfb, 0x9e, 0xe9, 0x18, 0x6d, 0x8a, 0xe3,
	0x55, 0xa8, 0x60, 0x17, 0x79, 0x9a, 0x8f, 0xbd, 0x03, 0x53, 0xaf, 0x15, 0xd7, 0xb8, 0xf5, 0xf9,
	0x56, 0x75, 0xd0, 0x97, 0xe0, 0x63, 0x3a, 0xbc, 0xb7, 0xdb, 0x86, 0x18, 0xb2, 0xa7, 0xf3, 0x9b,
	0x00, 0x24, 0x5a, 0x2d, 0xc0, 0xcf, 0x85, 0xf8, 0xf9, 0x41, 0x5f, 0x2a, 0xd3, 0x1a, 0xf6, 0x76,
	0xdb, 0x65, 0x0a, 0xd8, 0xd3, 0x9b, 0x6f, 0x7d, 0x7d, 0x71, 0xb6, 0x41, 0xd7, 0xfa, 0xf6, 0xe2,
	0x6c, 0x63, 0x99, 0xf1, 0x4a, 0x57, 0x2e, 0xd7, 0xe0, 0x8d, 0xf4, 0x48, 0x1b, 0x11, 0x17, 0x3b,
	0x04, 0xc9, 0xff, 0x70, 0x61, 0xe8, 0x53, 0x57, 0xd7, 0x7c, 0x44, 0x83, 0x8f, 0x42, 0xad, 0xae,
	0x41, 0x37, 0x5d, 0x7d, 0x71, 0x72, 0xf5, 0x7c, 0x0b, 0x4a, 0xd1, 0xae, 0x84, 0x3c, 0x2b, 0x8d,
	0xbb, 0x4a, 0xe6, 0x79, 0x53, 0x52, 0x55, 0xb5, 0x5e, 0x79, 0xd6, 0x97, 0x0a, 0x6d, 0x3a, 0xb3,
	0xa9, 0x0e, 0x29, 0x20, 0x25, 0x15, 0xc8, 0x20, 0x25, 0xaf, 0x81, 0x98, 0x1d, 0x61, 0x8a, 0xfc,
	0xc2, 0xc1, 0xc2, 0x3e, 0x31, 0x76, 0x91, 0x85, 0x0c, 0xcd, 0x47, 0x8f, 0x30, 0xb6, 0xf8, 0x77,
	0xa1, 0xac, 0x47, 0xdf, 0xf8, 0x6a, 0x35, 0x2e, 0xa1, 0xfc, 0x0e, 0x94, 0x34, 0x1b, 0x1f, 0x3b,
	0x7e, 0x28, 0x46, 0xa5, 0xb1, 0xa2, 0xd0, 0x19, 0xc1, 0x61, 0x57, 0xe8, 0x61, 0x57, 0x3e, 0xc2,
	0xa6, 0xd3, 0xaa, 0x06, 0xbc, 0x06, 0x7d, 0xa9, 0xb4, 0x13, 0x4e, 0x68, 0xd3, 0x89, 0xcd, 0xfb,
	0x01, 0xc3, 0xcb, 0x94, 0x01, 0xc9, 0x5a, 0x92, 0x64, 0xb2, 0x4e, 0x79, 0x05, 0x96, 0x87, 0x86,
	0x18, 0xad, 0xef, 0x8b, 0x70, 0x33, 0x11, 0x8b, 0xcf, 0xdf, 0xb5, 0xa9, 0x4d, 0x7d, 0xb4, 0x6d,
	0xa6, 0xc5, 0xdc, 0xda, 0xdc, 0x64, 0x2d, 0x9a, 0x69, 0x2d, 0x7e, 0x7a, 0x21, 0xad, 0x1b, 0xa6,
	0x7f, 0x78, 0xdc, 0x51, 0xba, 0xd8, 0xa6, 0xee, 0x41, 0xff, 0x6d, 0x11, 0xfd, 0x48, 0xf5, 0x7b,
	0x2e, 0x22, 0xe1, 0x54, 0xc2, 0x74, 0x53, 0x47, 0x75, 0xbb, 0x93, 0xa5, 0x5b, 0x5c, 0xad, 0xbc,
	0x0a, 0xb7, 0x33, 0x86, 0x99, 0x7e, 0xdf, 0x15, 0x81, 0x4f, 0xc4, 0x63, 0x4f, 0xb8, 0xae, 0x7c,
	0xd3, 0x5d, 0x95, 0x19, 0x6b, 0xa7, 0x8c, 0x6a, 0x77, 0x3b, 0x4b, 0xbb, 0xd8, 0x5e, 0xee, 0x80,
	0x30, 0x3a, 0xca, 0x94, 0xfb, 0x3d, 0xba, 0x50, 0xd1, 0x9d, 0xa3, 0xde, 0xf2, 0x10, 0xca, 0xda,
	0xb1, 0x7f, 0x88, 0x3d, 0xd3, 0xef, 0x51, 0xd9, 0x36, 0xff, 0xeb, 0x4b, 0x37, 0x7a, 0x9a, 0x6d,
	0x35, 0x65, 0x16, 0x92, 0xc7, 0x4b, 0xc9, 0x30, 0xfc, 0x07, 0xcc, 0x47, 0xa2, 0x4b, 0xb6, 0x3a,
	0xc6, 0x47, 0x32, 0x0d, 0x64, 0x3b, 0xa4, 0xca, 0x92, 0x05, 0x54, 0xb3, 0x5e, 0x87, 0xa1, 0xfa,
	0xe9, 0x45, 0x4b, 0x0e, 0x31, 0xba, 0xbf, 0x72, 0xb0, 0x18, 0xc4, 0x1c, 0xfd, 0x65, 0x38, 0xc8,
	0x87, 0xf9, 0x1d, 0xa4, 0x1c, 0x10, 0xfb, 0xf1, 0xe2, 0x6c, 0x83, 0x63, 0x1b, 0xb9, 0xfd, 0xcd,
	0xa9, 0x54, 0xf8, 0xfb, 0x54, 0x2a, 0x8c, 0x6e, 0xa8, 0x90, 0x72, 0xca, 0x54, 0xb1, 0xf2, 0x0f,
	0x45, 0xb8, 0x95, 0x1a, 0x9d, 0xbd, 0x5b, 0x1c, 0xe6, 0x3f, 0xf1, 0xdb, 0x01, 0xef, 0x69, 0xce,
	0x79, 0x5a, 0xa3, 0xf7, 0xc7, 0x6b, 0x24, 0x66, 0x6b, 0xc4, 0x2c, 0xe3, 0xb4, 0x08, 0x4b, 0xa9,
	0xc8, 0x6c, 0x5d, 0x61, 0x76, 0x1a, 0xbd, 0x37, 0x5e, 0xa3, 0xd5, 0x6c, 0x8d, 0x62, 0x6b, 0x38,
	0x1a, 0x3a, 0x49, 0xf1, 0x35, 0xe1, 0xdb, 0xb0, 0xd0, 0xc5, 0xb6, 0x6b, 0x21, 0xdf, 0xc4, 0xce,
	0x41, 0xd0, 0x42, 0x86, 0x42, 0x55, 0x1a, 0x82, 0x12, 0xf5, 0x97, 0x4a, 0xdc, 0x5f, 0x2a, 0x9f,
	0xc4, 0xfd, 0x65, 0x6b, 0x3e, 0xa0, 0xf1, 0xf4, 0x85, 0xc4, 0x45, 0xe5, 0x55, 0x2f, 0x33, 0x04,
	0x98, 0xc6, 0xbf, 0xaf, 0xc1, 0xdc, 0x3e, 0x31, 0xf8, 0x2e, 0x54, 0x92, 0x7d, 0xdb, 0x9b, 0x63,
	0x0c, 0x21, 0xdd, 0x12, 0x09, 0x5b, 0xb9, 0x60, 0x8c, 0xc0, 0x97, 0x70, 0x33, 0xab, 0x6b, 0x9a,
	0x90, 0x25, 0x03, 0x2e, 0x6c, 0x4f, 0x05, 0x67, 0x8b, 0x3f, 0x81, 0xd7, 0x53, 0x0d, 0xca, 0xbd,
	0xf1, 0x69, 0x92, 0x38, 0x41, 0xc9, 0x87, 0x63, 0xeb, 0x78, 0x70, 0x63, 0xa4, 0x63, 0xd8, 0xb8,
	0x3a, 0x47, 0x8c, 0x15, 0x1a, 0xf9, 0xb1, 0x6c, 0x4d, 0x0c, 0x0b, 0xc3, 0xaf, 0xec, 0xdb, 0x57,
	0xa7, 0x89, 0x77, 0xb1, 0x9e, 0x1b, 0x9a, 0x14, 0x33, 0xf5, 0x38, 0xdd, 0xbb, 0x6a, 0x4f, 0xe8,
	0xde, 0x29, 0xf9, 0x70, 0x6c, 0x9d, 0x43, 0xa8, 0x0e, 0xbd, 0x0a, 0xeb, 0x13, 0x32, 0xa4, 0x90,
	0xc2, 0x66, 0x1e, 0x24, 0x5b, 0xc9, 0x05, 0x3e, 0xc3, 0xbc, 0x73, 0xe5, 0x60, 0x5b, 0x37, 0xdd,
	0x8a, 0x0e, 0x2c, 0x8e, 0xda, 0xe0, 0xfd, 0x3c, 0x29, 0xe2, 0x8d, 0x9b, 0x6a, 0x3d, 0xe1, 0xd5,
	0xaf, 0x02, 0x07, 0x68, 0xed, 0x3f, 0x1b, 0x88, 0xdc, 0xf3, 0x81, 0xc8, 0xfd, 0x35, 0x10, 0xb9,
	0xa7, 0xe7, 0x62, 0xe1, 0xf9, 0xb9, 0x58, 0xf8, 0xf3, 0x5c, 0x2c, 0x7c, 0xf6, 0x20, 0xe1, 0x74,
	0x71, 0xe2, 0x2d, 0x4b, 0xeb, 0x10, 0xf6, 0xa5, 0x7e, 0x91, 0x78, 0xe0, 0x43, 0xeb, 0xeb, 0x94,
	0x42, 0xcf, 0x79, 0xf0, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa5, 0xd4, 0xde, 0x6a, 0x20, 0x0f,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// JoinService defines the operation that allows the operator admin
	// to start securing an AVS
	JoinService(ctx context.Context, in *MsgJoinService, opts ...grpc.CallOption) (*MsgJoinServiceResponse, error)
	// UpdateServiceParams defines the operation that allows the service admin to
	// update the service's parameters.
	UpdateServiceParams(ctx context.Context, in *MsgUpdateServiceParams, opts ...grpc.CallOption) (*MsgUpdateServiceParamsResponse, error)
	// DelegatePool defines the operation that allows users to delegate any amount
	// of an asset to a pool that can then be used to provide services with
	// cryptoeconomic security.
	DelegatePool(ctx context.Context, in *MsgDelegatePool, opts ...grpc.CallOption) (*MsgDelegatePoolResponse, error)
	// DelegateOperator defines the operation that allows users to delegate their
	// assets to a specific operator.
	DelegateOperator(ctx context.Context, in *MsgDelegateOperator, opts ...grpc.CallOption) (*MsgDelegateOperatorResponse, error)
	// DelegateService defines the operation that allows users to delegate their
	// assets to a specific service.
	DelegateService(ctx context.Context, in *MsgDelegateService, opts ...grpc.CallOption) (*MsgDelegateServiceResponse, error)
	// UpdateParams defines a (governance) operation for updating the module
	// parameters.
	// The authority defaults to the x/gov module account.
	UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error)
	// UndelegatePool defines the operation that allows users to undelegate their
	// assets from a pool.
	UndelegatePool(ctx context.Context, in *MsgUndelegatePool, opts ...grpc.CallOption) (*MsgUndelegateResponse, error)
	// UndelegateOperator defines the operation that allows users to undelegate
	// their assets from a specific operator.
	UndelegateOperator(ctx context.Context, in *MsgUndelegateOperator, opts ...grpc.CallOption) (*MsgUndelegateResponse, error)
	// UndelegateService defines the operation that allows users to undelegate
	// their assets from a specific service.
	UndelegateService(ctx context.Context, in *MsgUndelegateService, opts ...grpc.CallOption) (*MsgUndelegateResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) JoinService(ctx context.Context, in *MsgJoinService, opts ...grpc.CallOption) (*MsgJoinServiceResponse, error) {
	out := new(MsgJoinServiceResponse)
	err := c.cc.Invoke(ctx, "/milkyway.restaking.v1.Msg/JoinService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateServiceParams(ctx context.Context, in *MsgUpdateServiceParams, opts ...grpc.CallOption) (*MsgUpdateServiceParamsResponse, error) {
	out := new(MsgUpdateServiceParamsResponse)
	err := c.cc.Invoke(ctx, "/milkyway.restaking.v1.Msg/UpdateServiceParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DelegatePool(ctx context.Context, in *MsgDelegatePool, opts ...grpc.CallOption) (*MsgDelegatePoolResponse, error) {
	out := new(MsgDelegatePoolResponse)
	err := c.cc.Invoke(ctx, "/milkyway.restaking.v1.Msg/DelegatePool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DelegateOperator(ctx context.Context, in *MsgDelegateOperator, opts ...grpc.CallOption) (*MsgDelegateOperatorResponse, error) {
	out := new(MsgDelegateOperatorResponse)
	err := c.cc.Invoke(ctx, "/milkyway.restaking.v1.Msg/DelegateOperator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DelegateService(ctx context.Context, in *MsgDelegateService, opts ...grpc.CallOption) (*MsgDelegateServiceResponse, error) {
	out := new(MsgDelegateServiceResponse)
	err := c.cc.Invoke(ctx, "/milkyway.restaking.v1.Msg/DelegateService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error) {
	out := new(MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/milkyway.restaking.v1.Msg/UpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UndelegatePool(ctx context.Context, in *MsgUndelegatePool, opts ...grpc.CallOption) (*MsgUndelegateResponse, error) {
	out := new(MsgUndelegateResponse)
	err := c.cc.Invoke(ctx, "/milkyway.restaking.v1.Msg/UndelegatePool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UndelegateOperator(ctx context.Context, in *MsgUndelegateOperator, opts ...grpc.CallOption) (*MsgUndelegateResponse, error) {
	out := new(MsgUndelegateResponse)
	err := c.cc.Invoke(ctx, "/milkyway.restaking.v1.Msg/UndelegateOperator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UndelegateService(ctx context.Context, in *MsgUndelegateService, opts ...grpc.CallOption) (*MsgUndelegateResponse, error) {
	out := new(MsgUndelegateResponse)
	err := c.cc.Invoke(ctx, "/milkyway.restaking.v1.Msg/UndelegateService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// JoinService defines the operation that allows the operator admin
	// to start securing an AVS
	JoinService(context.Context, *MsgJoinService) (*MsgJoinServiceResponse, error)
	// UpdateServiceParams defines the operation that allows the service admin to
	// update the service's parameters.
	UpdateServiceParams(context.Context, *MsgUpdateServiceParams) (*MsgUpdateServiceParamsResponse, error)
	// DelegatePool defines the operation that allows users to delegate any amount
	// of an asset to a pool that can then be used to provide services with
	// cryptoeconomic security.
	DelegatePool(context.Context, *MsgDelegatePool) (*MsgDelegatePoolResponse, error)
	// DelegateOperator defines the operation that allows users to delegate their
	// assets to a specific operator.
	DelegateOperator(context.Context, *MsgDelegateOperator) (*MsgDelegateOperatorResponse, error)
	// DelegateService defines the operation that allows users to delegate their
	// assets to a specific service.
	DelegateService(context.Context, *MsgDelegateService) (*MsgDelegateServiceResponse, error)
	// UpdateParams defines a (governance) operation for updating the module
	// parameters.
	// The authority defaults to the x/gov module account.
	UpdateParams(context.Context, *MsgUpdateParams) (*MsgUpdateParamsResponse, error)
	// UndelegatePool defines the operation that allows users to undelegate their
	// assets from a pool.
	UndelegatePool(context.Context, *MsgUndelegatePool) (*MsgUndelegateResponse, error)
	// UndelegateOperator defines the operation that allows users to undelegate
	// their assets from a specific operator.
	UndelegateOperator(context.Context, *MsgUndelegateOperator) (*MsgUndelegateResponse, error)
	// UndelegateService defines the operation that allows users to undelegate
	// their assets from a specific service.
	UndelegateService(context.Context, *MsgUndelegateService) (*MsgUndelegateResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) JoinService(ctx context.Context, req *MsgJoinService) (*MsgJoinServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinService not implemented")
}
func (*UnimplementedMsgServer) UpdateServiceParams(ctx context.Context, req *MsgUpdateServiceParams) (*MsgUpdateServiceParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateServiceParams not implemented")
}
func (*UnimplementedMsgServer) DelegatePool(ctx context.Context, req *MsgDelegatePool) (*MsgDelegatePoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelegatePool not implemented")
}
func (*UnimplementedMsgServer) DelegateOperator(ctx context.Context, req *MsgDelegateOperator) (*MsgDelegateOperatorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelegateOperator not implemented")
}
func (*UnimplementedMsgServer) DelegateService(ctx context.Context, req *MsgDelegateService) (*MsgDelegateServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelegateService not implemented")
}
func (*UnimplementedMsgServer) UpdateParams(ctx context.Context, req *MsgUpdateParams) (*MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}
func (*UnimplementedMsgServer) UndelegatePool(ctx context.Context, req *MsgUndelegatePool) (*MsgUndelegateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UndelegatePool not implemented")
}
func (*UnimplementedMsgServer) UndelegateOperator(ctx context.Context, req *MsgUndelegateOperator) (*MsgUndelegateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UndelegateOperator not implemented")
}
func (*UnimplementedMsgServer) UndelegateService(ctx context.Context, req *MsgUndelegateService) (*MsgUndelegateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UndelegateService not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_JoinService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgJoinService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).JoinService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milkyway.restaking.v1.Msg/JoinService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).JoinService(ctx, req.(*MsgJoinService))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateServiceParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateServiceParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateServiceParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milkyway.restaking.v1.Msg/UpdateServiceParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateServiceParams(ctx, req.(*MsgUpdateServiceParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DelegatePool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDelegatePool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DelegatePool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milkyway.restaking.v1.Msg/DelegatePool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DelegatePool(ctx, req.(*MsgDelegatePool))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DelegateOperator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDelegateOperator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DelegateOperator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milkyway.restaking.v1.Msg/DelegateOperator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DelegateOperator(ctx, req.(*MsgDelegateOperator))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DelegateService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDelegateService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DelegateService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milkyway.restaking.v1.Msg/DelegateService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DelegateService(ctx, req.(*MsgDelegateService))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milkyway.restaking.v1.Msg/UpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateParams(ctx, req.(*MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UndelegatePool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUndelegatePool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UndelegatePool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milkyway.restaking.v1.Msg/UndelegatePool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UndelegatePool(ctx, req.(*MsgUndelegatePool))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UndelegateOperator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUndelegateOperator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UndelegateOperator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milkyway.restaking.v1.Msg/UndelegateOperator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UndelegateOperator(ctx, req.(*MsgUndelegateOperator))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UndelegateService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUndelegateService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UndelegateService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milkyway.restaking.v1.Msg/UndelegateService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UndelegateService(ctx, req.(*MsgUndelegateService))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "milkyway.restaking.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "JoinService",
			Handler:    _Msg_JoinService_Handler,
		},
		{
			MethodName: "UpdateServiceParams",
			Handler:    _Msg_UpdateServiceParams_Handler,
		},
		{
			MethodName: "DelegatePool",
			Handler:    _Msg_DelegatePool_Handler,
		},
		{
			MethodName: "DelegateOperator",
			Handler:    _Msg_DelegateOperator_Handler,
		},
		{
			MethodName: "DelegateService",
			Handler:    _Msg_DelegateService_Handler,
		},
		{
			MethodName: "UpdateParams",
			Handler:    _Msg_UpdateParams_Handler,
		},
		{
			MethodName: "UndelegatePool",
			Handler:    _Msg_UndelegatePool_Handler,
		},
		{
			MethodName: "UndelegateOperator",
			Handler:    _Msg_UndelegateOperator_Handler,
		},
		{
			MethodName: "UndelegateService",
			Handler:    _Msg_UndelegateService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "milkyway/restaking/v1/messages.proto",
}

func (m *MsgJoinService) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgJoinService) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgJoinService) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ServiceID != 0 {
		i = encodeVarintMessages(dAtA, i, uint64(m.ServiceID))
		i--
		dAtA[i] = 0x18
	}
	if m.OperatorID != 0 {
		i = encodeVarintMessages(dAtA, i, uint64(m.OperatorID))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintMessages(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgJoinServiceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgJoinServiceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgJoinServiceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateServiceParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateServiceParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateServiceParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintMessages(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if m.ServiceID != 0 {
		i = encodeVarintMessages(dAtA, i, uint64(m.ServiceID))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintMessages(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateServiceParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateServiceParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateServiceParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDelegatePool) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDelegatePool) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDelegatePool) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Amount.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintMessages(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Delegator) > 0 {
		i -= len(m.Delegator)
		copy(dAtA[i:], m.Delegator)
		i = encodeVarintMessages(dAtA, i, uint64(len(m.Delegator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDelegatePoolResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDelegatePoolResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDelegatePoolResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDelegateOperator) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDelegateOperator) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDelegateOperator) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Amount) > 0 {
		for iNdEx := len(m.Amount) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Amount[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMessages(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.OperatorID != 0 {
		i = encodeVarintMessages(dAtA, i, uint64(m.OperatorID))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Delegator) > 0 {
		i -= len(m.Delegator)
		copy(dAtA[i:], m.Delegator)
		i = encodeVarintMessages(dAtA, i, uint64(len(m.Delegator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDelegateOperatorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDelegateOperatorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDelegateOperatorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDelegateService) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDelegateService) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDelegateService) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Amount) > 0 {
		for iNdEx := len(m.Amount) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Amount[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMessages(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.ServiceID != 0 {
		i = encodeVarintMessages(dAtA, i, uint64(m.ServiceID))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Delegator) > 0 {
		i -= len(m.Delegator)
		copy(dAtA[i:], m.Delegator)
		i = encodeVarintMessages(dAtA, i, uint64(len(m.Delegator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDelegateServiceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDelegateServiceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDelegateServiceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintMessages(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintMessages(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUndelegatePool) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUndelegatePool) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUndelegatePool) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Amount.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintMessages(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Delegator) > 0 {
		i -= len(m.Delegator)
		copy(dAtA[i:], m.Delegator)
		i = encodeVarintMessages(dAtA, i, uint64(len(m.Delegator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUndelegateOperator) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUndelegateOperator) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUndelegateOperator) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Amount) > 0 {
		for iNdEx := len(m.Amount) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Amount[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMessages(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.OperatorID != 0 {
		i = encodeVarintMessages(dAtA, i, uint64(m.OperatorID))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Delegator) > 0 {
		i -= len(m.Delegator)
		copy(dAtA[i:], m.Delegator)
		i = encodeVarintMessages(dAtA, i, uint64(len(m.Delegator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUndelegateService) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUndelegateService) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUndelegateService) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Amount) > 0 {
		for iNdEx := len(m.Amount) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Amount[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMessages(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.ServiceID != 0 {
		i = encodeVarintMessages(dAtA, i, uint64(m.ServiceID))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Delegator) > 0 {
		i -= len(m.Delegator)
		copy(dAtA[i:], m.Delegator)
		i = encodeVarintMessages(dAtA, i, uint64(len(m.Delegator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUndelegateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUndelegateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUndelegateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	n5, err5 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.CompletionTime, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.CompletionTime):])
	if err5 != nil {
		return 0, err5
	}
	i -= n5
	i = encodeVarintMessages(dAtA, i, uint64(n5))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintMessages(dAtA []byte, offset int, v uint64) int {
	offset -= sovMessages(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgJoinService) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovMessages(uint64(l))
	}
	if m.OperatorID != 0 {
		n += 1 + sovMessages(uint64(m.OperatorID))
	}
	if m.ServiceID != 0 {
		n += 1 + sovMessages(uint64(m.ServiceID))
	}
	return n
}

func (m *MsgJoinServiceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateServiceParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovMessages(uint64(l))
	}
	if m.ServiceID != 0 {
		n += 1 + sovMessages(uint64(m.ServiceID))
	}
	l = m.Params.Size()
	n += 1 + l + sovMessages(uint64(l))
	return n
}

func (m *MsgUpdateServiceParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDelegatePool) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Delegator)
	if l > 0 {
		n += 1 + l + sovMessages(uint64(l))
	}
	l = m.Amount.Size()
	n += 1 + l + sovMessages(uint64(l))
	return n
}

func (m *MsgDelegatePoolResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDelegateOperator) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Delegator)
	if l > 0 {
		n += 1 + l + sovMessages(uint64(l))
	}
	if m.OperatorID != 0 {
		n += 1 + sovMessages(uint64(m.OperatorID))
	}
	if len(m.Amount) > 0 {
		for _, e := range m.Amount {
			l = e.Size()
			n += 1 + l + sovMessages(uint64(l))
		}
	}
	return n
}

func (m *MsgDelegateOperatorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDelegateService) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Delegator)
	if l > 0 {
		n += 1 + l + sovMessages(uint64(l))
	}
	if m.ServiceID != 0 {
		n += 1 + sovMessages(uint64(m.ServiceID))
	}
	if len(m.Amount) > 0 {
		for _, e := range m.Amount {
			l = e.Size()
			n += 1 + l + sovMessages(uint64(l))
		}
	}
	return n
}

func (m *MsgDelegateServiceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovMessages(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovMessages(uint64(l))
	return n
}

func (m *MsgUpdateParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUndelegatePool) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Delegator)
	if l > 0 {
		n += 1 + l + sovMessages(uint64(l))
	}
	l = m.Amount.Size()
	n += 1 + l + sovMessages(uint64(l))
	return n
}

func (m *MsgUndelegateOperator) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Delegator)
	if l > 0 {
		n += 1 + l + sovMessages(uint64(l))
	}
	if m.OperatorID != 0 {
		n += 1 + sovMessages(uint64(m.OperatorID))
	}
	if len(m.Amount) > 0 {
		for _, e := range m.Amount {
			l = e.Size()
			n += 1 + l + sovMessages(uint64(l))
		}
	}
	return n
}

func (m *MsgUndelegateService) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Delegator)
	if l > 0 {
		n += 1 + l + sovMessages(uint64(l))
	}
	if m.ServiceID != 0 {
		n += 1 + sovMessages(uint64(m.ServiceID))
	}
	if len(m.Amount) > 0 {
		for _, e := range m.Amount {
			l = e.Size()
			n += 1 + l + sovMessages(uint64(l))
		}
	}
	return n
}

func (m *MsgUndelegateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.CompletionTime)
	n += 1 + l + sovMessages(uint64(l))
	return n
}

func sovMessages(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMessages(x uint64) (n int) {
	return sovMessages(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgJoinService) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgJoinService: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgJoinService: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OperatorID", wireType)
			}
			m.OperatorID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OperatorID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceID", wireType)
			}
			m.ServiceID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ServiceID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgJoinServiceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgJoinServiceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgJoinServiceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateServiceParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateServiceParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateServiceParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceID", wireType)
			}
			m.ServiceID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ServiceID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateServiceParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateServiceParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateServiceParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDelegatePool) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDelegatePool: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDelegatePool: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Delegator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Delegator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Amount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDelegatePoolResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDelegatePoolResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDelegatePoolResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDelegateOperator) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDelegateOperator: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDelegateOperator: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Delegator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Delegator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OperatorID", wireType)
			}
			m.OperatorID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OperatorID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = append(m.Amount, types.Coin{})
			if err := m.Amount[len(m.Amount)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDelegateOperatorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDelegateOperatorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDelegateOperatorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDelegateService) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDelegateService: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDelegateService: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Delegator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Delegator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceID", wireType)
			}
			m.ServiceID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ServiceID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = append(m.Amount, types.Coin{})
			if err := m.Amount[len(m.Amount)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDelegateServiceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDelegateServiceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDelegateServiceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUndelegatePool) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUndelegatePool: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUndelegatePool: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Delegator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Delegator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Amount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUndelegateOperator) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUndelegateOperator: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUndelegateOperator: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Delegator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Delegator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OperatorID", wireType)
			}
			m.OperatorID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OperatorID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = append(m.Amount, types.Coin{})
			if err := m.Amount[len(m.Amount)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUndelegateService) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUndelegateService: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUndelegateService: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Delegator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Delegator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceID", wireType)
			}
			m.ServiceID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ServiceID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = append(m.Amount, types.Coin{})
			if err := m.Amount[len(m.Amount)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUndelegateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUndelegateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUndelegateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CompletionTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.CompletionTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMessages(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMessages
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMessages
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMessages
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMessages        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMessages          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMessages = fmt.Errorf("proto: unexpected end of group")
)
