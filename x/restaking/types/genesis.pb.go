// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: milkyway/restaking/v1/genesis.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// OperatorJoinedServicesRecord represents the services joined by a
// individual operator.
type OperatorJoinedServicesRecord struct {
	// OperatorID is the ID of the operator.
	OperatorID uint32 `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	// JoinedServices represents the services joined by the operator.
	JoinedServices OperatorJoinedServices `protobuf:"bytes,2,opt,name=joined_services,json=joinedServices,proto3" json:"joined_services"`
}

func (m *OperatorJoinedServicesRecord) Reset()         { *m = OperatorJoinedServicesRecord{} }
func (m *OperatorJoinedServicesRecord) String() string { return proto.CompactTextString(m) }
func (*OperatorJoinedServicesRecord) ProtoMessage()    {}
func (*OperatorJoinedServicesRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_0378bd63cae7d256, []int{0}
}
func (m *OperatorJoinedServicesRecord) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OperatorJoinedServicesRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OperatorJoinedServicesRecord.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OperatorJoinedServicesRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperatorJoinedServicesRecord.Merge(m, src)
}
func (m *OperatorJoinedServicesRecord) XXX_Size() int {
	return m.Size()
}
func (m *OperatorJoinedServicesRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_OperatorJoinedServicesRecord.DiscardUnknown(m)
}

var xxx_messageInfo_OperatorJoinedServicesRecord proto.InternalMessageInfo

func (m *OperatorJoinedServicesRecord) GetOperatorID() uint32 {
	if m != nil {
		return m.OperatorID
	}
	return 0
}

func (m *OperatorJoinedServicesRecord) GetJoinedServices() OperatorJoinedServices {
	if m != nil {
		return m.JoinedServices
	}
	return OperatorJoinedServices{}
}

// ServiceParamsRecord represents the params that have been set for an
// individual service.
type ServiceParamsRecord struct {
	// ServiceID is the ID of the service.
	ServiceID uint32 `protobuf:"varint,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Params defines the parameters for the operators module.
	Params ServiceParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *ServiceParamsRecord) Reset()         { *m = ServiceParamsRecord{} }
func (m *ServiceParamsRecord) String() string { return proto.CompactTextString(m) }
func (*ServiceParamsRecord) ProtoMessage()    {}
func (*ServiceParamsRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_0378bd63cae7d256, []int{1}
}
func (m *ServiceParamsRecord) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ServiceParamsRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ServiceParamsRecord.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ServiceParamsRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceParamsRecord.Merge(m, src)
}
func (m *ServiceParamsRecord) XXX_Size() int {
	return m.Size()
}
func (m *ServiceParamsRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceParamsRecord.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceParamsRecord proto.InternalMessageInfo

func (m *ServiceParamsRecord) GetServiceID() uint32 {
	if m != nil {
		return m.ServiceID
	}
	return 0
}

func (m *ServiceParamsRecord) GetParams() ServiceParams {
	if m != nil {
		return m.Params
	}
	return ServiceParams{}
}

// GenesisState defines the restaking module's genesis state.
type GenesisState struct {
	// Params defines the parameters of the module.
	Params Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
	// OperatorsJoinedServices defines the list of the services that each operator
	// has joined.
	OperatorsJoinedServices []OperatorJoinedServicesRecord `protobuf:"bytes,2,rep,name=operators_joined_services,json=operatorsJoinedServices,proto3" json:"operators_joined_services"`
	// ServicesParams defines the list of services parameters.
	ServicesParams []ServiceParamsRecord `protobuf:"bytes,3,rep,name=services_params,json=servicesParams,proto3" json:"services_params"`
	// Delegations represents the delegations.
	Delegations []Delegation `protobuf:"bytes,4,rep,name=delegations,proto3" json:"delegations"`
	// UnbondingDelegations represents the unbonding delegations.
	UnbondingDelegations []UnbondingDelegation `protobuf:"bytes,5,rep,name=unbonding_delegations,json=unbondingDelegations,proto3" json:"unbonding_delegations"`
}

func (m *GenesisState) Reset()         { *m = GenesisState{} }
func (m *GenesisState) String() string { return proto.CompactTextString(m) }
func (*GenesisState) ProtoMessage()    {}
func (*GenesisState) Descriptor() ([]byte, []int) {
	return fileDescriptor_0378bd63cae7d256, []int{2}
}
func (m *GenesisState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GenesisState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GenesisState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GenesisState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisState.Merge(m, src)
}
func (m *GenesisState) XXX_Size() int {
	return m.Size()
}
func (m *GenesisState) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisState.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisState proto.InternalMessageInfo

func (m *GenesisState) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

func (m *GenesisState) GetOperatorsJoinedServices() []OperatorJoinedServicesRecord {
	if m != nil {
		return m.OperatorsJoinedServices
	}
	return nil
}

func (m *GenesisState) GetServicesParams() []ServiceParamsRecord {
	if m != nil {
		return m.ServicesParams
	}
	return nil
}

func (m *GenesisState) GetDelegations() []Delegation {
	if m != nil {
		return m.Delegations
	}
	return nil
}

func (m *GenesisState) GetUnbondingDelegations() []UnbondingDelegation {
	if m != nil {
		return m.UnbondingDelegations
	}
	return nil
}

func init() {
	proto.RegisterType((*OperatorJoinedServicesRecord)(nil), "milkyway.restaking.v1.OperatorJoinedServicesRecord")
	proto.RegisterType((*ServiceParamsRecord)(nil), "milkyway.restaking.v1.ServiceParamsRecord")
	proto.RegisterType((*GenesisState)(nil), "milkyway.restaking.v1.GenesisState")
}

func init() {
	proto.RegisterFile("milkyway/restaking/v1/genesis.proto", fileDescriptor_0378bd63cae7d256)
}

var fileDescriptor_0378bd63cae7d256 = []byte{
	// 453 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xc1, 0x6e, 0xd3, 0x30,
	0x1c, 0xc6, 0x6b, 0x3a, 0x26, 0xcd, 0x65, 0x9d, 0x64, 0x36, 0x51, 0x26, 0x48, 0x47, 0xe0, 0x50,
	0x21, 0x96, 0x68, 0xeb, 0x91, 0x5b, 0x54, 0x09, 0x05, 0x09, 0x81, 0x32, 0x71, 0x00, 0x21, 0x45,
	0x4e, 0x6d, 0x05, 0x6f, 0x49, 0x1c, 0xc5, 0x4e, 0xa1, 0x4f, 0xc0, 0x95, 0x17, 0xe1, 0x3d, 0x76,
	0x63, 0x47, 0x4e, 0x15, 0x4a, 0x5f, 0x04, 0x91, 0xd8, 0xa1, 0x51, 0xd3, 0x8a, 0xdd, 0xea, 0xfe,
	0xbf, 0xff, 0xef, 0xfb, 0xfc, 0x45, 0x86, 0x4f, 0x63, 0x16, 0x5d, 0xcd, 0xbf, 0xe0, 0xb9, 0x9d,
	0x51, 0x21, 0xf1, 0x15, 0x4b, 0x42, 0x7b, 0x76, 0x66, 0x87, 0x34, 0xa1, 0x82, 0x09, 0x2b, 0xcd,
	0xb8, 0xe4, 0xe8, 0x48, 0x8b, 0xac, 0x5a, 0x64, 0xcd, 0xce, 0x8e, 0x0f, 0x43, 0x1e, 0xf2, 0x52,
	0x61, 0xff, 0xfd, 0x55, 0x89, 0x8f, 0xcd, 0x76, 0x62, 0xcc, 0x09, 0x8d, 0xc4, 0x76, 0x4d, 0x8a,
	0x33, 0x1c, 0x2b, 0x8d, 0xf9, 0x03, 0xc0, 0x47, 0x6f, 0x53, 0x9a, 0x61, 0xc9, 0xb3, 0xd7, 0x9c,
	0x25, 0x94, 0x5c, 0xd0, 0x6c, 0xc6, 0xa6, 0x54, 0x78, 0x74, 0xca, 0x33, 0x82, 0x6c, 0xd8, 0xe3,
	0x6a, 0xee, 0x33, 0x32, 0x00, 0x27, 0x60, 0xb4, 0xef, 0xf4, 0x8b, 0xc5, 0x10, 0xea, 0x35, 0x77,
	0xe2, 0x41, 0x2d, 0x71, 0x09, 0xfa, 0x04, 0x0f, 0x2e, 0x4b, 0x90, 0x2f, 0x14, 0x69, 0x70, 0xe7,
	0x04, 0x8c, 0x7a, 0xe7, 0xa7, 0x56, 0xeb, 0x05, 0xad, 0x76, 0x7b, 0x67, 0xe7, 0x7a, 0x31, 0xec,
	0x78, 0xfd, 0xcb, 0xc6, 0xbf, 0xe6, 0x37, 0x00, 0xef, 0xab, 0xc3, 0xbb, 0xf2, 0x1e, 0x2a, 0xe6,
	0x0b, 0x08, 0x95, 0xdd, 0xbf, 0x94, 0xfb, 0xc5, 0x62, 0xb8, 0xa7, 0xc4, 0xee, 0xc4, 0xdb, 0x53,
	0x02, 0x97, 0x20, 0x07, 0xee, 0x56, 0x2d, 0xa8, 0x68, 0xcf, 0x36, 0x44, 0x6b, 0x38, 0xa9, 0x44,
	0x6a, 0xd3, 0xfc, 0xd9, 0x85, 0xf7, 0x5e, 0x55, 0x1f, 0xf0, 0x42, 0x62, 0x49, 0xd1, 0xcb, 0x1a,
	0x0a, 0x4a, 0xe8, 0xe3, 0x0d, 0xd0, 0x36, 0x1a, 0xca, 0xe1, 0x43, 0xdd, 0xa1, 0xf0, 0xd7, 0xfb,
	0xeb, 0x8e, 0x7a, 0xe7, 0xe3, 0x5b, 0xf5, 0x57, 0xf5, 0xa2, 0x5c, 0x1e, 0xd4, 0xec, 0xa6, 0x08,
	0x7d, 0x80, 0x07, 0xda, 0xc5, 0x57, 0xe1, 0xbb, 0xa5, 0xd9, 0xf3, 0xff, 0x69, 0xa4, 0xe1, 0xd1,
	0xd7, 0xa0, 0x6a, 0x86, 0x5c, 0xd8, 0x23, 0x34, 0xa2, 0x21, 0x96, 0x8c, 0x27, 0x62, 0xb0, 0x53,
	0x62, 0x9f, 0x6c, 0xc0, 0x4e, 0x6a, 0xa5, 0xa2, 0xad, 0xee, 0x22, 0x0a, 0x8f, 0xf2, 0x24, 0xe0,
	0x09, 0x61, 0x49, 0xe8, 0xaf, 0x42, 0xef, 0x6e, 0xcd, 0xfa, 0x5e, 0xef, 0xac, 0xd1, 0x0f, 0xf3,
	0xf5, 0x91, 0x70, 0xde, 0x5c, 0x17, 0x06, 0xb8, 0x29, 0x0c, 0xf0, 0xbb, 0x30, 0xc0, 0xf7, 0xa5,
	0xd1, 0xb9, 0x59, 0x1a, 0x9d, 0x5f, 0x4b, 0xa3, 0xf3, 0x71, 0x1c, 0x32, 0xf9, 0x39, 0x0f, 0xac,
	0x29, 0x8f, 0x6d, 0xed, 0x75, 0x1a, 0xe1, 0x40, 0xd4, 0x27, 0xfb, 0xeb, 0xca, 0x23, 0x93, 0xf3,
	0x94, 0x8a, 0x60, 0xb7, 0x7c, 0x61, 0xe3, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x36, 0xc5, 0x13,
	0xf0, 0xfd, 0x03, 0x00, 0x00,
}

func (m *OperatorJoinedServicesRecord) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OperatorJoinedServicesRecord) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OperatorJoinedServicesRecord) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.JoinedServices.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if m.OperatorID != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.OperatorID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ServiceParamsRecord) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ServiceParamsRecord) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceParamsRecord) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if m.ServiceID != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.ServiceID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GenesisState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GenesisState) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GenesisState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.UnbondingDelegations) > 0 {
		for iNdEx := len(m.UnbondingDelegations) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.UnbondingDelegations[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.Delegations) > 0 {
		for iNdEx := len(m.Delegations) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Delegations[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.ServicesParams) > 0 {
		for iNdEx := len(m.ServicesParams) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ServicesParams[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.OperatorsJoinedServices) > 0 {
		for iNdEx := len(m.OperatorsJoinedServices) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.OperatorsJoinedServices[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintGenesis(dAtA []byte, offset int, v uint64) int {
	offset -= sovGenesis(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *OperatorJoinedServicesRecord) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OperatorID != 0 {
		n += 1 + sovGenesis(uint64(m.OperatorID))
	}
	l = m.JoinedServices.Size()
	n += 1 + l + sovGenesis(uint64(l))
	return n
}

func (m *ServiceParamsRecord) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ServiceID != 0 {
		n += 1 + sovGenesis(uint64(m.ServiceID))
	}
	l = m.Params.Size()
	n += 1 + l + sovGenesis(uint64(l))
	return n
}

func (m *GenesisState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Params.Size()
	n += 1 + l + sovGenesis(uint64(l))
	if len(m.OperatorsJoinedServices) > 0 {
		for _, e := range m.OperatorsJoinedServices {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if len(m.ServicesParams) > 0 {
		for _, e := range m.ServicesParams {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if len(m.Delegations) > 0 {
		for _, e := range m.Delegations {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if len(m.UnbondingDelegations) > 0 {
		for _, e := range m.UnbondingDelegations {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	return n
}

func sovGenesis(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGenesis(x uint64) (n int) {
	return sovGenesis(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *OperatorJoinedServicesRecord) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OperatorJoinedServicesRecord: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OperatorJoinedServicesRecord: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OperatorID", wireType)
			}
			m.OperatorID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OperatorID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JoinedServices", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.JoinedServices.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ServiceParamsRecord) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ServiceParamsRecord: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ServiceParamsRecord: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceID", wireType)
			}
			m.ServiceID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ServiceID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GenesisState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GenesisState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GenesisState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OperatorsJoinedServices", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OperatorsJoinedServices = append(m.OperatorsJoinedServices, OperatorJoinedServicesRecord{})
			if err := m.OperatorsJoinedServices[len(m.OperatorsJoinedServices)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServicesParams", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServicesParams = append(m.ServicesParams, ServiceParamsRecord{})
			if err := m.ServicesParams[len(m.ServicesParams)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Delegations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Delegations = append(m.Delegations, Delegation{})
			if err := m.Delegations[len(m.Delegations)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnbondingDelegations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UnbondingDelegations = append(m.UnbondingDelegations, UnbondingDelegation{})
			if err := m.UnbondingDelegations[len(m.UnbondingDelegations)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGenesis(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGenesis
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGenesis
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGenesis
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGenesis        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGenesis          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGenesis = fmt.Errorf("proto: unexpected end of group")
)
