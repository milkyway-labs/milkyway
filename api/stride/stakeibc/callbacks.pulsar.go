// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package stakeibc

import (
	v1beta1 "cosmossdk.io/api/cosmos/base/v1beta1"
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	records "github.com/milkyway-labs/milkyway/api/stride/records"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_SplitDelegation           protoreflect.MessageDescriptor
	fd_SplitDelegation_validator protoreflect.FieldDescriptor
	fd_SplitDelegation_amount    protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_callbacks_proto_init()
	md_SplitDelegation = File_stride_stakeibc_callbacks_proto.Messages().ByName("SplitDelegation")
	fd_SplitDelegation_validator = md_SplitDelegation.Fields().ByName("validator")
	fd_SplitDelegation_amount = md_SplitDelegation.Fields().ByName("amount")
}

var _ protoreflect.Message = (*fastReflection_SplitDelegation)(nil)

type fastReflection_SplitDelegation SplitDelegation

func (x *SplitDelegation) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SplitDelegation)(x)
}

func (x *SplitDelegation) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_callbacks_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SplitDelegation_messageType fastReflection_SplitDelegation_messageType
var _ protoreflect.MessageType = fastReflection_SplitDelegation_messageType{}

type fastReflection_SplitDelegation_messageType struct{}

func (x fastReflection_SplitDelegation_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SplitDelegation)(nil)
}
func (x fastReflection_SplitDelegation_messageType) New() protoreflect.Message {
	return new(fastReflection_SplitDelegation)
}
func (x fastReflection_SplitDelegation_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SplitDelegation
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SplitDelegation) Descriptor() protoreflect.MessageDescriptor {
	return md_SplitDelegation
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SplitDelegation) Type() protoreflect.MessageType {
	return _fastReflection_SplitDelegation_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SplitDelegation) New() protoreflect.Message {
	return new(fastReflection_SplitDelegation)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SplitDelegation) Interface() protoreflect.ProtoMessage {
	return (*SplitDelegation)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SplitDelegation) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Validator != "" {
		value := protoreflect.ValueOfString(x.Validator)
		if !f(fd_SplitDelegation_validator, value) {
			return
		}
	}
	if x.Amount != "" {
		value := protoreflect.ValueOfString(x.Amount)
		if !f(fd_SplitDelegation_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SplitDelegation) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.SplitDelegation.validator":
		return x.Validator != ""
	case "stride.stakeibc.SplitDelegation.amount":
		return x.Amount != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.SplitDelegation"))
		}
		panic(fmt.Errorf("message stride.stakeibc.SplitDelegation does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SplitDelegation) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.SplitDelegation.validator":
		x.Validator = ""
	case "stride.stakeibc.SplitDelegation.amount":
		x.Amount = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.SplitDelegation"))
		}
		panic(fmt.Errorf("message stride.stakeibc.SplitDelegation does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SplitDelegation) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.SplitDelegation.validator":
		value := x.Validator
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.SplitDelegation.amount":
		value := x.Amount
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.SplitDelegation"))
		}
		panic(fmt.Errorf("message stride.stakeibc.SplitDelegation does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SplitDelegation) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.SplitDelegation.validator":
		x.Validator = value.Interface().(string)
	case "stride.stakeibc.SplitDelegation.amount":
		x.Amount = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.SplitDelegation"))
		}
		panic(fmt.Errorf("message stride.stakeibc.SplitDelegation does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SplitDelegation) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.SplitDelegation.validator":
		panic(fmt.Errorf("field validator of message stride.stakeibc.SplitDelegation is not mutable"))
	case "stride.stakeibc.SplitDelegation.amount":
		panic(fmt.Errorf("field amount of message stride.stakeibc.SplitDelegation is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.SplitDelegation"))
		}
		panic(fmt.Errorf("message stride.stakeibc.SplitDelegation does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SplitDelegation) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.SplitDelegation.validator":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.SplitDelegation.amount":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.SplitDelegation"))
		}
		panic(fmt.Errorf("message stride.stakeibc.SplitDelegation does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SplitDelegation) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.SplitDelegation", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SplitDelegation) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SplitDelegation) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SplitDelegation) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SplitDelegation) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SplitDelegation)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Validator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Amount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SplitDelegation)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Amount) > 0 {
			i -= len(x.Amount)
			copy(dAtA[i:], x.Amount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Amount)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Validator) > 0 {
			i -= len(x.Validator)
			copy(dAtA[i:], x.Validator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Validator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SplitDelegation)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SplitDelegation: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SplitDelegation: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Validator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Validator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Amount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_DelegateCallback_3_list)(nil)

type _DelegateCallback_3_list struct {
	list *[]*SplitDelegation
}

func (x *_DelegateCallback_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_DelegateCallback_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_DelegateCallback_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*SplitDelegation)
	(*x.list)[i] = concreteValue
}

func (x *_DelegateCallback_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*SplitDelegation)
	*x.list = append(*x.list, concreteValue)
}

func (x *_DelegateCallback_3_list) AppendMutable() protoreflect.Value {
	v := new(SplitDelegation)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_DelegateCallback_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_DelegateCallback_3_list) NewElement() protoreflect.Value {
	v := new(SplitDelegation)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_DelegateCallback_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_DelegateCallback                   protoreflect.MessageDescriptor
	fd_DelegateCallback_host_zone_id      protoreflect.FieldDescriptor
	fd_DelegateCallback_deposit_record_id protoreflect.FieldDescriptor
	fd_DelegateCallback_split_delegations protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_callbacks_proto_init()
	md_DelegateCallback = File_stride_stakeibc_callbacks_proto.Messages().ByName("DelegateCallback")
	fd_DelegateCallback_host_zone_id = md_DelegateCallback.Fields().ByName("host_zone_id")
	fd_DelegateCallback_deposit_record_id = md_DelegateCallback.Fields().ByName("deposit_record_id")
	fd_DelegateCallback_split_delegations = md_DelegateCallback.Fields().ByName("split_delegations")
}

var _ protoreflect.Message = (*fastReflection_DelegateCallback)(nil)

type fastReflection_DelegateCallback DelegateCallback

func (x *DelegateCallback) ProtoReflect() protoreflect.Message {
	return (*fastReflection_DelegateCallback)(x)
}

func (x *DelegateCallback) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_callbacks_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_DelegateCallback_messageType fastReflection_DelegateCallback_messageType
var _ protoreflect.MessageType = fastReflection_DelegateCallback_messageType{}

type fastReflection_DelegateCallback_messageType struct{}

func (x fastReflection_DelegateCallback_messageType) Zero() protoreflect.Message {
	return (*fastReflection_DelegateCallback)(nil)
}
func (x fastReflection_DelegateCallback_messageType) New() protoreflect.Message {
	return new(fastReflection_DelegateCallback)
}
func (x fastReflection_DelegateCallback_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_DelegateCallback
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_DelegateCallback) Descriptor() protoreflect.MessageDescriptor {
	return md_DelegateCallback
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_DelegateCallback) Type() protoreflect.MessageType {
	return _fastReflection_DelegateCallback_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_DelegateCallback) New() protoreflect.Message {
	return new(fastReflection_DelegateCallback)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_DelegateCallback) Interface() protoreflect.ProtoMessage {
	return (*DelegateCallback)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_DelegateCallback) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.HostZoneId != "" {
		value := protoreflect.ValueOfString(x.HostZoneId)
		if !f(fd_DelegateCallback_host_zone_id, value) {
			return
		}
	}
	if x.DepositRecordId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.DepositRecordId)
		if !f(fd_DelegateCallback_deposit_record_id, value) {
			return
		}
	}
	if len(x.SplitDelegations) != 0 {
		value := protoreflect.ValueOfList(&_DelegateCallback_3_list{list: &x.SplitDelegations})
		if !f(fd_DelegateCallback_split_delegations, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_DelegateCallback) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.DelegateCallback.host_zone_id":
		return x.HostZoneId != ""
	case "stride.stakeibc.DelegateCallback.deposit_record_id":
		return x.DepositRecordId != uint64(0)
	case "stride.stakeibc.DelegateCallback.split_delegations":
		return len(x.SplitDelegations) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.DelegateCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.DelegateCallback does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegateCallback) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.DelegateCallback.host_zone_id":
		x.HostZoneId = ""
	case "stride.stakeibc.DelegateCallback.deposit_record_id":
		x.DepositRecordId = uint64(0)
	case "stride.stakeibc.DelegateCallback.split_delegations":
		x.SplitDelegations = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.DelegateCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.DelegateCallback does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_DelegateCallback) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.DelegateCallback.host_zone_id":
		value := x.HostZoneId
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.DelegateCallback.deposit_record_id":
		value := x.DepositRecordId
		return protoreflect.ValueOfUint64(value)
	case "stride.stakeibc.DelegateCallback.split_delegations":
		if len(x.SplitDelegations) == 0 {
			return protoreflect.ValueOfList(&_DelegateCallback_3_list{})
		}
		listValue := &_DelegateCallback_3_list{list: &x.SplitDelegations}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.DelegateCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.DelegateCallback does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegateCallback) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.DelegateCallback.host_zone_id":
		x.HostZoneId = value.Interface().(string)
	case "stride.stakeibc.DelegateCallback.deposit_record_id":
		x.DepositRecordId = value.Uint()
	case "stride.stakeibc.DelegateCallback.split_delegations":
		lv := value.List()
		clv := lv.(*_DelegateCallback_3_list)
		x.SplitDelegations = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.DelegateCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.DelegateCallback does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegateCallback) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.DelegateCallback.split_delegations":
		if x.SplitDelegations == nil {
			x.SplitDelegations = []*SplitDelegation{}
		}
		value := &_DelegateCallback_3_list{list: &x.SplitDelegations}
		return protoreflect.ValueOfList(value)
	case "stride.stakeibc.DelegateCallback.host_zone_id":
		panic(fmt.Errorf("field host_zone_id of message stride.stakeibc.DelegateCallback is not mutable"))
	case "stride.stakeibc.DelegateCallback.deposit_record_id":
		panic(fmt.Errorf("field deposit_record_id of message stride.stakeibc.DelegateCallback is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.DelegateCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.DelegateCallback does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_DelegateCallback) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.DelegateCallback.host_zone_id":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.DelegateCallback.deposit_record_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "stride.stakeibc.DelegateCallback.split_delegations":
		list := []*SplitDelegation{}
		return protoreflect.ValueOfList(&_DelegateCallback_3_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.DelegateCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.DelegateCallback does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_DelegateCallback) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.DelegateCallback", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_DelegateCallback) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegateCallback) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_DelegateCallback) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_DelegateCallback) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*DelegateCallback)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.HostZoneId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.DepositRecordId != 0 {
			n += 1 + runtime.Sov(uint64(x.DepositRecordId))
		}
		if len(x.SplitDelegations) > 0 {
			for _, e := range x.SplitDelegations {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*DelegateCallback)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.SplitDelegations) > 0 {
			for iNdEx := len(x.SplitDelegations) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.SplitDelegations[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if x.DepositRecordId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.DepositRecordId))
			i--
			dAtA[i] = 0x10
		}
		if len(x.HostZoneId) > 0 {
			i -= len(x.HostZoneId)
			copy(dAtA[i:], x.HostZoneId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HostZoneId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*DelegateCallback)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DelegateCallback: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DelegateCallback: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HostZoneId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HostZoneId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DepositRecordId", wireType)
				}
				x.DepositRecordId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.DepositRecordId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SplitDelegations", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SplitDelegations = append(x.SplitDelegations, &SplitDelegation{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.SplitDelegations[len(x.SplitDelegations)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ClaimCallback                           protoreflect.MessageDescriptor
	fd_ClaimCallback_user_redemption_record_id protoreflect.FieldDescriptor
	fd_ClaimCallback_chain_id                  protoreflect.FieldDescriptor
	fd_ClaimCallback_epoch_number              protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_callbacks_proto_init()
	md_ClaimCallback = File_stride_stakeibc_callbacks_proto.Messages().ByName("ClaimCallback")
	fd_ClaimCallback_user_redemption_record_id = md_ClaimCallback.Fields().ByName("user_redemption_record_id")
	fd_ClaimCallback_chain_id = md_ClaimCallback.Fields().ByName("chain_id")
	fd_ClaimCallback_epoch_number = md_ClaimCallback.Fields().ByName("epoch_number")
}

var _ protoreflect.Message = (*fastReflection_ClaimCallback)(nil)

type fastReflection_ClaimCallback ClaimCallback

func (x *ClaimCallback) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ClaimCallback)(x)
}

func (x *ClaimCallback) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_callbacks_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ClaimCallback_messageType fastReflection_ClaimCallback_messageType
var _ protoreflect.MessageType = fastReflection_ClaimCallback_messageType{}

type fastReflection_ClaimCallback_messageType struct{}

func (x fastReflection_ClaimCallback_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ClaimCallback)(nil)
}
func (x fastReflection_ClaimCallback_messageType) New() protoreflect.Message {
	return new(fastReflection_ClaimCallback)
}
func (x fastReflection_ClaimCallback_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ClaimCallback
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ClaimCallback) Descriptor() protoreflect.MessageDescriptor {
	return md_ClaimCallback
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ClaimCallback) Type() protoreflect.MessageType {
	return _fastReflection_ClaimCallback_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ClaimCallback) New() protoreflect.Message {
	return new(fastReflection_ClaimCallback)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ClaimCallback) Interface() protoreflect.ProtoMessage {
	return (*ClaimCallback)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ClaimCallback) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.UserRedemptionRecordId != "" {
		value := protoreflect.ValueOfString(x.UserRedemptionRecordId)
		if !f(fd_ClaimCallback_user_redemption_record_id, value) {
			return
		}
	}
	if x.ChainId != "" {
		value := protoreflect.ValueOfString(x.ChainId)
		if !f(fd_ClaimCallback_chain_id, value) {
			return
		}
	}
	if x.EpochNumber != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EpochNumber)
		if !f(fd_ClaimCallback_epoch_number, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ClaimCallback) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.ClaimCallback.user_redemption_record_id":
		return x.UserRedemptionRecordId != ""
	case "stride.stakeibc.ClaimCallback.chain_id":
		return x.ChainId != ""
	case "stride.stakeibc.ClaimCallback.epoch_number":
		return x.EpochNumber != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.ClaimCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.ClaimCallback does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ClaimCallback) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.ClaimCallback.user_redemption_record_id":
		x.UserRedemptionRecordId = ""
	case "stride.stakeibc.ClaimCallback.chain_id":
		x.ChainId = ""
	case "stride.stakeibc.ClaimCallback.epoch_number":
		x.EpochNumber = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.ClaimCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.ClaimCallback does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ClaimCallback) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.ClaimCallback.user_redemption_record_id":
		value := x.UserRedemptionRecordId
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.ClaimCallback.chain_id":
		value := x.ChainId
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.ClaimCallback.epoch_number":
		value := x.EpochNumber
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.ClaimCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.ClaimCallback does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ClaimCallback) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.ClaimCallback.user_redemption_record_id":
		x.UserRedemptionRecordId = value.Interface().(string)
	case "stride.stakeibc.ClaimCallback.chain_id":
		x.ChainId = value.Interface().(string)
	case "stride.stakeibc.ClaimCallback.epoch_number":
		x.EpochNumber = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.ClaimCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.ClaimCallback does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ClaimCallback) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.ClaimCallback.user_redemption_record_id":
		panic(fmt.Errorf("field user_redemption_record_id of message stride.stakeibc.ClaimCallback is not mutable"))
	case "stride.stakeibc.ClaimCallback.chain_id":
		panic(fmt.Errorf("field chain_id of message stride.stakeibc.ClaimCallback is not mutable"))
	case "stride.stakeibc.ClaimCallback.epoch_number":
		panic(fmt.Errorf("field epoch_number of message stride.stakeibc.ClaimCallback is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.ClaimCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.ClaimCallback does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ClaimCallback) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.ClaimCallback.user_redemption_record_id":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.ClaimCallback.chain_id":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.ClaimCallback.epoch_number":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.ClaimCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.ClaimCallback does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ClaimCallback) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.ClaimCallback", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ClaimCallback) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ClaimCallback) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ClaimCallback) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ClaimCallback) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ClaimCallback)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.UserRedemptionRecordId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChainId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.EpochNumber != 0 {
			n += 1 + runtime.Sov(uint64(x.EpochNumber))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ClaimCallback)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.EpochNumber != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EpochNumber))
			i--
			dAtA[i] = 0x18
		}
		if len(x.ChainId) > 0 {
			i -= len(x.ChainId)
			copy(dAtA[i:], x.ChainId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.UserRedemptionRecordId) > 0 {
			i -= len(x.UserRedemptionRecordId)
			copy(dAtA[i:], x.UserRedemptionRecordId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.UserRedemptionRecordId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ClaimCallback)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ClaimCallback: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ClaimCallback: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UserRedemptionRecordId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.UserRedemptionRecordId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EpochNumber", wireType)
				}
				x.EpochNumber = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EpochNumber |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ReinvestCallback                 protoreflect.MessageDescriptor
	fd_ReinvestCallback_reinvest_amount protoreflect.FieldDescriptor
	fd_ReinvestCallback_host_zone_id    protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_callbacks_proto_init()
	md_ReinvestCallback = File_stride_stakeibc_callbacks_proto.Messages().ByName("ReinvestCallback")
	fd_ReinvestCallback_reinvest_amount = md_ReinvestCallback.Fields().ByName("reinvest_amount")
	fd_ReinvestCallback_host_zone_id = md_ReinvestCallback.Fields().ByName("host_zone_id")
}

var _ protoreflect.Message = (*fastReflection_ReinvestCallback)(nil)

type fastReflection_ReinvestCallback ReinvestCallback

func (x *ReinvestCallback) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ReinvestCallback)(x)
}

func (x *ReinvestCallback) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_callbacks_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ReinvestCallback_messageType fastReflection_ReinvestCallback_messageType
var _ protoreflect.MessageType = fastReflection_ReinvestCallback_messageType{}

type fastReflection_ReinvestCallback_messageType struct{}

func (x fastReflection_ReinvestCallback_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ReinvestCallback)(nil)
}
func (x fastReflection_ReinvestCallback_messageType) New() protoreflect.Message {
	return new(fastReflection_ReinvestCallback)
}
func (x fastReflection_ReinvestCallback_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ReinvestCallback
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ReinvestCallback) Descriptor() protoreflect.MessageDescriptor {
	return md_ReinvestCallback
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ReinvestCallback) Type() protoreflect.MessageType {
	return _fastReflection_ReinvestCallback_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ReinvestCallback) New() protoreflect.Message {
	return new(fastReflection_ReinvestCallback)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ReinvestCallback) Interface() protoreflect.ProtoMessage {
	return (*ReinvestCallback)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ReinvestCallback) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ReinvestAmount != nil {
		value := protoreflect.ValueOfMessage(x.ReinvestAmount.ProtoReflect())
		if !f(fd_ReinvestCallback_reinvest_amount, value) {
			return
		}
	}
	if x.HostZoneId != "" {
		value := protoreflect.ValueOfString(x.HostZoneId)
		if !f(fd_ReinvestCallback_host_zone_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ReinvestCallback) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.ReinvestCallback.reinvest_amount":
		return x.ReinvestAmount != nil
	case "stride.stakeibc.ReinvestCallback.host_zone_id":
		return x.HostZoneId != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.ReinvestCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.ReinvestCallback does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReinvestCallback) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.ReinvestCallback.reinvest_amount":
		x.ReinvestAmount = nil
	case "stride.stakeibc.ReinvestCallback.host_zone_id":
		x.HostZoneId = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.ReinvestCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.ReinvestCallback does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ReinvestCallback) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.ReinvestCallback.reinvest_amount":
		value := x.ReinvestAmount
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "stride.stakeibc.ReinvestCallback.host_zone_id":
		value := x.HostZoneId
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.ReinvestCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.ReinvestCallback does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReinvestCallback) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.ReinvestCallback.reinvest_amount":
		x.ReinvestAmount = value.Message().Interface().(*v1beta1.Coin)
	case "stride.stakeibc.ReinvestCallback.host_zone_id":
		x.HostZoneId = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.ReinvestCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.ReinvestCallback does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReinvestCallback) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.ReinvestCallback.reinvest_amount":
		if x.ReinvestAmount == nil {
			x.ReinvestAmount = new(v1beta1.Coin)
		}
		return protoreflect.ValueOfMessage(x.ReinvestAmount.ProtoReflect())
	case "stride.stakeibc.ReinvestCallback.host_zone_id":
		panic(fmt.Errorf("field host_zone_id of message stride.stakeibc.ReinvestCallback is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.ReinvestCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.ReinvestCallback does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ReinvestCallback) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.ReinvestCallback.reinvest_amount":
		m := new(v1beta1.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "stride.stakeibc.ReinvestCallback.host_zone_id":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.ReinvestCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.ReinvestCallback does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ReinvestCallback) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.ReinvestCallback", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ReinvestCallback) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReinvestCallback) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ReinvestCallback) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ReinvestCallback) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ReinvestCallback)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.ReinvestAmount != nil {
			l = options.Size(x.ReinvestAmount)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.HostZoneId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ReinvestCallback)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.HostZoneId) > 0 {
			i -= len(x.HostZoneId)
			copy(dAtA[i:], x.HostZoneId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HostZoneId)))
			i--
			dAtA[i] = 0x1a
		}
		if x.ReinvestAmount != nil {
			encoded, err := options.Marshal(x.ReinvestAmount)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ReinvestCallback)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ReinvestCallback: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ReinvestCallback: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ReinvestAmount", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ReinvestAmount == nil {
					x.ReinvestAmount = &v1beta1.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ReinvestAmount); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HostZoneId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HostZoneId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_UndelegateCallback_2_list)(nil)

type _UndelegateCallback_2_list struct {
	list *[]*SplitDelegation
}

func (x *_UndelegateCallback_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_UndelegateCallback_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_UndelegateCallback_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*SplitDelegation)
	(*x.list)[i] = concreteValue
}

func (x *_UndelegateCallback_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*SplitDelegation)
	*x.list = append(*x.list, concreteValue)
}

func (x *_UndelegateCallback_2_list) AppendMutable() protoreflect.Value {
	v := new(SplitDelegation)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_UndelegateCallback_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_UndelegateCallback_2_list) NewElement() protoreflect.Value {
	v := new(SplitDelegation)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_UndelegateCallback_2_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_UndelegateCallback_3_list)(nil)

type _UndelegateCallback_3_list struct {
	list *[]uint64
}

func (x *_UndelegateCallback_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_UndelegateCallback_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfUint64((*x.list)[i])
}

func (x *_UndelegateCallback_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_UndelegateCallback_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_UndelegateCallback_3_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message UndelegateCallback at list field EpochUnbondingRecordIds as it is not of Message kind"))
}

func (x *_UndelegateCallback_3_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_UndelegateCallback_3_list) NewElement() protoreflect.Value {
	v := uint64(0)
	return protoreflect.ValueOfUint64(v)
}

func (x *_UndelegateCallback_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_UndelegateCallback                            protoreflect.MessageDescriptor
	fd_UndelegateCallback_host_zone_id               protoreflect.FieldDescriptor
	fd_UndelegateCallback_split_delegations          protoreflect.FieldDescriptor
	fd_UndelegateCallback_epoch_unbonding_record_ids protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_callbacks_proto_init()
	md_UndelegateCallback = File_stride_stakeibc_callbacks_proto.Messages().ByName("UndelegateCallback")
	fd_UndelegateCallback_host_zone_id = md_UndelegateCallback.Fields().ByName("host_zone_id")
	fd_UndelegateCallback_split_delegations = md_UndelegateCallback.Fields().ByName("split_delegations")
	fd_UndelegateCallback_epoch_unbonding_record_ids = md_UndelegateCallback.Fields().ByName("epoch_unbonding_record_ids")
}

var _ protoreflect.Message = (*fastReflection_UndelegateCallback)(nil)

type fastReflection_UndelegateCallback UndelegateCallback

func (x *UndelegateCallback) ProtoReflect() protoreflect.Message {
	return (*fastReflection_UndelegateCallback)(x)
}

func (x *UndelegateCallback) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_callbacks_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_UndelegateCallback_messageType fastReflection_UndelegateCallback_messageType
var _ protoreflect.MessageType = fastReflection_UndelegateCallback_messageType{}

type fastReflection_UndelegateCallback_messageType struct{}

func (x fastReflection_UndelegateCallback_messageType) Zero() protoreflect.Message {
	return (*fastReflection_UndelegateCallback)(nil)
}
func (x fastReflection_UndelegateCallback_messageType) New() protoreflect.Message {
	return new(fastReflection_UndelegateCallback)
}
func (x fastReflection_UndelegateCallback_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_UndelegateCallback
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_UndelegateCallback) Descriptor() protoreflect.MessageDescriptor {
	return md_UndelegateCallback
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_UndelegateCallback) Type() protoreflect.MessageType {
	return _fastReflection_UndelegateCallback_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_UndelegateCallback) New() protoreflect.Message {
	return new(fastReflection_UndelegateCallback)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_UndelegateCallback) Interface() protoreflect.ProtoMessage {
	return (*UndelegateCallback)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_UndelegateCallback) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.HostZoneId != "" {
		value := protoreflect.ValueOfString(x.HostZoneId)
		if !f(fd_UndelegateCallback_host_zone_id, value) {
			return
		}
	}
	if len(x.SplitDelegations) != 0 {
		value := protoreflect.ValueOfList(&_UndelegateCallback_2_list{list: &x.SplitDelegations})
		if !f(fd_UndelegateCallback_split_delegations, value) {
			return
		}
	}
	if len(x.EpochUnbondingRecordIds) != 0 {
		value := protoreflect.ValueOfList(&_UndelegateCallback_3_list{list: &x.EpochUnbondingRecordIds})
		if !f(fd_UndelegateCallback_epoch_unbonding_record_ids, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_UndelegateCallback) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.UndelegateCallback.host_zone_id":
		return x.HostZoneId != ""
	case "stride.stakeibc.UndelegateCallback.split_delegations":
		return len(x.SplitDelegations) != 0
	case "stride.stakeibc.UndelegateCallback.epoch_unbonding_record_ids":
		return len(x.EpochUnbondingRecordIds) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.UndelegateCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.UndelegateCallback does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UndelegateCallback) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.UndelegateCallback.host_zone_id":
		x.HostZoneId = ""
	case "stride.stakeibc.UndelegateCallback.split_delegations":
		x.SplitDelegations = nil
	case "stride.stakeibc.UndelegateCallback.epoch_unbonding_record_ids":
		x.EpochUnbondingRecordIds = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.UndelegateCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.UndelegateCallback does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_UndelegateCallback) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.UndelegateCallback.host_zone_id":
		value := x.HostZoneId
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.UndelegateCallback.split_delegations":
		if len(x.SplitDelegations) == 0 {
			return protoreflect.ValueOfList(&_UndelegateCallback_2_list{})
		}
		listValue := &_UndelegateCallback_2_list{list: &x.SplitDelegations}
		return protoreflect.ValueOfList(listValue)
	case "stride.stakeibc.UndelegateCallback.epoch_unbonding_record_ids":
		if len(x.EpochUnbondingRecordIds) == 0 {
			return protoreflect.ValueOfList(&_UndelegateCallback_3_list{})
		}
		listValue := &_UndelegateCallback_3_list{list: &x.EpochUnbondingRecordIds}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.UndelegateCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.UndelegateCallback does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UndelegateCallback) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.UndelegateCallback.host_zone_id":
		x.HostZoneId = value.Interface().(string)
	case "stride.stakeibc.UndelegateCallback.split_delegations":
		lv := value.List()
		clv := lv.(*_UndelegateCallback_2_list)
		x.SplitDelegations = *clv.list
	case "stride.stakeibc.UndelegateCallback.epoch_unbonding_record_ids":
		lv := value.List()
		clv := lv.(*_UndelegateCallback_3_list)
		x.EpochUnbondingRecordIds = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.UndelegateCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.UndelegateCallback does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UndelegateCallback) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.UndelegateCallback.split_delegations":
		if x.SplitDelegations == nil {
			x.SplitDelegations = []*SplitDelegation{}
		}
		value := &_UndelegateCallback_2_list{list: &x.SplitDelegations}
		return protoreflect.ValueOfList(value)
	case "stride.stakeibc.UndelegateCallback.epoch_unbonding_record_ids":
		if x.EpochUnbondingRecordIds == nil {
			x.EpochUnbondingRecordIds = []uint64{}
		}
		value := &_UndelegateCallback_3_list{list: &x.EpochUnbondingRecordIds}
		return protoreflect.ValueOfList(value)
	case "stride.stakeibc.UndelegateCallback.host_zone_id":
		panic(fmt.Errorf("field host_zone_id of message stride.stakeibc.UndelegateCallback is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.UndelegateCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.UndelegateCallback does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_UndelegateCallback) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.UndelegateCallback.host_zone_id":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.UndelegateCallback.split_delegations":
		list := []*SplitDelegation{}
		return protoreflect.ValueOfList(&_UndelegateCallback_2_list{list: &list})
	case "stride.stakeibc.UndelegateCallback.epoch_unbonding_record_ids":
		list := []uint64{}
		return protoreflect.ValueOfList(&_UndelegateCallback_3_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.UndelegateCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.UndelegateCallback does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_UndelegateCallback) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.UndelegateCallback", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_UndelegateCallback) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UndelegateCallback) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_UndelegateCallback) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_UndelegateCallback) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*UndelegateCallback)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.HostZoneId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.SplitDelegations) > 0 {
			for _, e := range x.SplitDelegations {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.EpochUnbondingRecordIds) > 0 {
			l = 0
			for _, e := range x.EpochUnbondingRecordIds {
				l += runtime.Sov(uint64(e))
			}
			n += 1 + runtime.Sov(uint64(l)) + l
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*UndelegateCallback)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.EpochUnbondingRecordIds) > 0 {
			var pksize2 int
			for _, num := range x.EpochUnbondingRecordIds {
				pksize2 += runtime.Sov(uint64(num))
			}
			i -= pksize2
			j1 := i
			for _, num := range x.EpochUnbondingRecordIds {
				for num >= 1<<7 {
					dAtA[j1] = uint8(uint64(num)&0x7f | 0x80)
					num >>= 7
					j1++
				}
				dAtA[j1] = uint8(num)
				j1++
			}
			i = runtime.EncodeVarint(dAtA, i, uint64(pksize2))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.SplitDelegations) > 0 {
			for iNdEx := len(x.SplitDelegations) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.SplitDelegations[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.HostZoneId) > 0 {
			i -= len(x.HostZoneId)
			copy(dAtA[i:], x.HostZoneId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HostZoneId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*UndelegateCallback)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UndelegateCallback: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UndelegateCallback: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HostZoneId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HostZoneId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SplitDelegations", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SplitDelegations = append(x.SplitDelegations, &SplitDelegation{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.SplitDelegations[len(x.SplitDelegations)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType == 0 {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					x.EpochUnbondingRecordIds = append(x.EpochUnbondingRecordIds, v)
				} else if wireType == 2 {
					var packedLen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						packedLen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if packedLen < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					postIndex := iNdEx + packedLen
					if postIndex < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					if postIndex > l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					var elementCount int
					var count int
					for _, integer := range dAtA[iNdEx:postIndex] {
						if integer < 128 {
							count++
						}
					}
					elementCount = count
					if elementCount != 0 && len(x.EpochUnbondingRecordIds) == 0 {
						x.EpochUnbondingRecordIds = make([]uint64, 0, elementCount)
					}
					for iNdEx < postIndex {
						var v uint64
						for shift := uint(0); ; shift += 7 {
							if shift >= 64 {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
							}
							if iNdEx >= l {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
							}
							b := dAtA[iNdEx]
							iNdEx++
							v |= uint64(b&0x7F) << shift
							if b < 0x80 {
								break
							}
						}
						x.EpochUnbondingRecordIds = append(x.EpochUnbondingRecordIds, v)
					}
				} else {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EpochUnbondingRecordIds", wireType)
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_RedemptionCallback_2_list)(nil)

type _RedemptionCallback_2_list struct {
	list *[]uint64
}

func (x *_RedemptionCallback_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_RedemptionCallback_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfUint64((*x.list)[i])
}

func (x *_RedemptionCallback_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_RedemptionCallback_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_RedemptionCallback_2_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message RedemptionCallback at list field EpochUnbondingRecordIds as it is not of Message kind"))
}

func (x *_RedemptionCallback_2_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_RedemptionCallback_2_list) NewElement() protoreflect.Value {
	v := uint64(0)
	return protoreflect.ValueOfUint64(v)
}

func (x *_RedemptionCallback_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_RedemptionCallback                            protoreflect.MessageDescriptor
	fd_RedemptionCallback_host_zone_id               protoreflect.FieldDescriptor
	fd_RedemptionCallback_epoch_unbonding_record_ids protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_callbacks_proto_init()
	md_RedemptionCallback = File_stride_stakeibc_callbacks_proto.Messages().ByName("RedemptionCallback")
	fd_RedemptionCallback_host_zone_id = md_RedemptionCallback.Fields().ByName("host_zone_id")
	fd_RedemptionCallback_epoch_unbonding_record_ids = md_RedemptionCallback.Fields().ByName("epoch_unbonding_record_ids")
}

var _ protoreflect.Message = (*fastReflection_RedemptionCallback)(nil)

type fastReflection_RedemptionCallback RedemptionCallback

func (x *RedemptionCallback) ProtoReflect() protoreflect.Message {
	return (*fastReflection_RedemptionCallback)(x)
}

func (x *RedemptionCallback) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_callbacks_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_RedemptionCallback_messageType fastReflection_RedemptionCallback_messageType
var _ protoreflect.MessageType = fastReflection_RedemptionCallback_messageType{}

type fastReflection_RedemptionCallback_messageType struct{}

func (x fastReflection_RedemptionCallback_messageType) Zero() protoreflect.Message {
	return (*fastReflection_RedemptionCallback)(nil)
}
func (x fastReflection_RedemptionCallback_messageType) New() protoreflect.Message {
	return new(fastReflection_RedemptionCallback)
}
func (x fastReflection_RedemptionCallback_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_RedemptionCallback
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_RedemptionCallback) Descriptor() protoreflect.MessageDescriptor {
	return md_RedemptionCallback
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_RedemptionCallback) Type() protoreflect.MessageType {
	return _fastReflection_RedemptionCallback_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_RedemptionCallback) New() protoreflect.Message {
	return new(fastReflection_RedemptionCallback)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_RedemptionCallback) Interface() protoreflect.ProtoMessage {
	return (*RedemptionCallback)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_RedemptionCallback) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.HostZoneId != "" {
		value := protoreflect.ValueOfString(x.HostZoneId)
		if !f(fd_RedemptionCallback_host_zone_id, value) {
			return
		}
	}
	if len(x.EpochUnbondingRecordIds) != 0 {
		value := protoreflect.ValueOfList(&_RedemptionCallback_2_list{list: &x.EpochUnbondingRecordIds})
		if !f(fd_RedemptionCallback_epoch_unbonding_record_ids, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_RedemptionCallback) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.RedemptionCallback.host_zone_id":
		return x.HostZoneId != ""
	case "stride.stakeibc.RedemptionCallback.epoch_unbonding_record_ids":
		return len(x.EpochUnbondingRecordIds) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.RedemptionCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.RedemptionCallback does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RedemptionCallback) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.RedemptionCallback.host_zone_id":
		x.HostZoneId = ""
	case "stride.stakeibc.RedemptionCallback.epoch_unbonding_record_ids":
		x.EpochUnbondingRecordIds = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.RedemptionCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.RedemptionCallback does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_RedemptionCallback) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.RedemptionCallback.host_zone_id":
		value := x.HostZoneId
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.RedemptionCallback.epoch_unbonding_record_ids":
		if len(x.EpochUnbondingRecordIds) == 0 {
			return protoreflect.ValueOfList(&_RedemptionCallback_2_list{})
		}
		listValue := &_RedemptionCallback_2_list{list: &x.EpochUnbondingRecordIds}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.RedemptionCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.RedemptionCallback does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RedemptionCallback) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.RedemptionCallback.host_zone_id":
		x.HostZoneId = value.Interface().(string)
	case "stride.stakeibc.RedemptionCallback.epoch_unbonding_record_ids":
		lv := value.List()
		clv := lv.(*_RedemptionCallback_2_list)
		x.EpochUnbondingRecordIds = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.RedemptionCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.RedemptionCallback does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RedemptionCallback) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.RedemptionCallback.epoch_unbonding_record_ids":
		if x.EpochUnbondingRecordIds == nil {
			x.EpochUnbondingRecordIds = []uint64{}
		}
		value := &_RedemptionCallback_2_list{list: &x.EpochUnbondingRecordIds}
		return protoreflect.ValueOfList(value)
	case "stride.stakeibc.RedemptionCallback.host_zone_id":
		panic(fmt.Errorf("field host_zone_id of message stride.stakeibc.RedemptionCallback is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.RedemptionCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.RedemptionCallback does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_RedemptionCallback) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.RedemptionCallback.host_zone_id":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.RedemptionCallback.epoch_unbonding_record_ids":
		list := []uint64{}
		return protoreflect.ValueOfList(&_RedemptionCallback_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.RedemptionCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.RedemptionCallback does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_RedemptionCallback) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.RedemptionCallback", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_RedemptionCallback) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RedemptionCallback) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_RedemptionCallback) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_RedemptionCallback) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*RedemptionCallback)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.HostZoneId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.EpochUnbondingRecordIds) > 0 {
			l = 0
			for _, e := range x.EpochUnbondingRecordIds {
				l += runtime.Sov(uint64(e))
			}
			n += 1 + runtime.Sov(uint64(l)) + l
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*RedemptionCallback)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.EpochUnbondingRecordIds) > 0 {
			var pksize2 int
			for _, num := range x.EpochUnbondingRecordIds {
				pksize2 += runtime.Sov(uint64(num))
			}
			i -= pksize2
			j1 := i
			for _, num := range x.EpochUnbondingRecordIds {
				for num >= 1<<7 {
					dAtA[j1] = uint8(uint64(num)&0x7f | 0x80)
					num >>= 7
					j1++
				}
				dAtA[j1] = uint8(num)
				j1++
			}
			i = runtime.EncodeVarint(dAtA, i, uint64(pksize2))
			i--
			dAtA[i] = 0x12
		}
		if len(x.HostZoneId) > 0 {
			i -= len(x.HostZoneId)
			copy(dAtA[i:], x.HostZoneId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HostZoneId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*RedemptionCallback)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RedemptionCallback: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RedemptionCallback: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HostZoneId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HostZoneId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType == 0 {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					x.EpochUnbondingRecordIds = append(x.EpochUnbondingRecordIds, v)
				} else if wireType == 2 {
					var packedLen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						packedLen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if packedLen < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					postIndex := iNdEx + packedLen
					if postIndex < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					if postIndex > l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					var elementCount int
					var count int
					for _, integer := range dAtA[iNdEx:postIndex] {
						if integer < 128 {
							count++
						}
					}
					elementCount = count
					if elementCount != 0 && len(x.EpochUnbondingRecordIds) == 0 {
						x.EpochUnbondingRecordIds = make([]uint64, 0, elementCount)
					}
					for iNdEx < postIndex {
						var v uint64
						for shift := uint(0); ; shift += 7 {
							if shift >= 64 {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
							}
							if iNdEx >= l {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
							}
							b := dAtA[iNdEx]
							iNdEx++
							v |= uint64(b&0x7F) << shift
							if b < 0x80 {
								break
							}
						}
						x.EpochUnbondingRecordIds = append(x.EpochUnbondingRecordIds, v)
					}
				} else {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EpochUnbondingRecordIds", wireType)
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_Rebalancing               protoreflect.MessageDescriptor
	fd_Rebalancing_src_validator protoreflect.FieldDescriptor
	fd_Rebalancing_dst_validator protoreflect.FieldDescriptor
	fd_Rebalancing_amt           protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_callbacks_proto_init()
	md_Rebalancing = File_stride_stakeibc_callbacks_proto.Messages().ByName("Rebalancing")
	fd_Rebalancing_src_validator = md_Rebalancing.Fields().ByName("src_validator")
	fd_Rebalancing_dst_validator = md_Rebalancing.Fields().ByName("dst_validator")
	fd_Rebalancing_amt = md_Rebalancing.Fields().ByName("amt")
}

var _ protoreflect.Message = (*fastReflection_Rebalancing)(nil)

type fastReflection_Rebalancing Rebalancing

func (x *Rebalancing) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Rebalancing)(x)
}

func (x *Rebalancing) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_callbacks_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Rebalancing_messageType fastReflection_Rebalancing_messageType
var _ protoreflect.MessageType = fastReflection_Rebalancing_messageType{}

type fastReflection_Rebalancing_messageType struct{}

func (x fastReflection_Rebalancing_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Rebalancing)(nil)
}
func (x fastReflection_Rebalancing_messageType) New() protoreflect.Message {
	return new(fastReflection_Rebalancing)
}
func (x fastReflection_Rebalancing_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Rebalancing
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Rebalancing) Descriptor() protoreflect.MessageDescriptor {
	return md_Rebalancing
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Rebalancing) Type() protoreflect.MessageType {
	return _fastReflection_Rebalancing_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Rebalancing) New() protoreflect.Message {
	return new(fastReflection_Rebalancing)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Rebalancing) Interface() protoreflect.ProtoMessage {
	return (*Rebalancing)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Rebalancing) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.SrcValidator != "" {
		value := protoreflect.ValueOfString(x.SrcValidator)
		if !f(fd_Rebalancing_src_validator, value) {
			return
		}
	}
	if x.DstValidator != "" {
		value := protoreflect.ValueOfString(x.DstValidator)
		if !f(fd_Rebalancing_dst_validator, value) {
			return
		}
	}
	if x.Amt != "" {
		value := protoreflect.ValueOfString(x.Amt)
		if !f(fd_Rebalancing_amt, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Rebalancing) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.Rebalancing.src_validator":
		return x.SrcValidator != ""
	case "stride.stakeibc.Rebalancing.dst_validator":
		return x.DstValidator != ""
	case "stride.stakeibc.Rebalancing.amt":
		return x.Amt != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.Rebalancing"))
		}
		panic(fmt.Errorf("message stride.stakeibc.Rebalancing does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Rebalancing) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.Rebalancing.src_validator":
		x.SrcValidator = ""
	case "stride.stakeibc.Rebalancing.dst_validator":
		x.DstValidator = ""
	case "stride.stakeibc.Rebalancing.amt":
		x.Amt = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.Rebalancing"))
		}
		panic(fmt.Errorf("message stride.stakeibc.Rebalancing does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Rebalancing) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.Rebalancing.src_validator":
		value := x.SrcValidator
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.Rebalancing.dst_validator":
		value := x.DstValidator
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.Rebalancing.amt":
		value := x.Amt
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.Rebalancing"))
		}
		panic(fmt.Errorf("message stride.stakeibc.Rebalancing does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Rebalancing) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.Rebalancing.src_validator":
		x.SrcValidator = value.Interface().(string)
	case "stride.stakeibc.Rebalancing.dst_validator":
		x.DstValidator = value.Interface().(string)
	case "stride.stakeibc.Rebalancing.amt":
		x.Amt = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.Rebalancing"))
		}
		panic(fmt.Errorf("message stride.stakeibc.Rebalancing does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Rebalancing) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.Rebalancing.src_validator":
		panic(fmt.Errorf("field src_validator of message stride.stakeibc.Rebalancing is not mutable"))
	case "stride.stakeibc.Rebalancing.dst_validator":
		panic(fmt.Errorf("field dst_validator of message stride.stakeibc.Rebalancing is not mutable"))
	case "stride.stakeibc.Rebalancing.amt":
		panic(fmt.Errorf("field amt of message stride.stakeibc.Rebalancing is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.Rebalancing"))
		}
		panic(fmt.Errorf("message stride.stakeibc.Rebalancing does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Rebalancing) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.Rebalancing.src_validator":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.Rebalancing.dst_validator":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.Rebalancing.amt":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.Rebalancing"))
		}
		panic(fmt.Errorf("message stride.stakeibc.Rebalancing does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Rebalancing) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.Rebalancing", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Rebalancing) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Rebalancing) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Rebalancing) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Rebalancing) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Rebalancing)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.SrcValidator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.DstValidator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Amt)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Rebalancing)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Amt) > 0 {
			i -= len(x.Amt)
			copy(dAtA[i:], x.Amt)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Amt)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.DstValidator) > 0 {
			i -= len(x.DstValidator)
			copy(dAtA[i:], x.DstValidator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DstValidator)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.SrcValidator) > 0 {
			i -= len(x.SrcValidator)
			copy(dAtA[i:], x.SrcValidator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SrcValidator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Rebalancing)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Rebalancing: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Rebalancing: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SrcValidator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SrcValidator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DstValidator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DstValidator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amt", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Amt = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_RebalanceCallback_2_list)(nil)

type _RebalanceCallback_2_list struct {
	list *[]*Rebalancing
}

func (x *_RebalanceCallback_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_RebalanceCallback_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_RebalanceCallback_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Rebalancing)
	(*x.list)[i] = concreteValue
}

func (x *_RebalanceCallback_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Rebalancing)
	*x.list = append(*x.list, concreteValue)
}

func (x *_RebalanceCallback_2_list) AppendMutable() protoreflect.Value {
	v := new(Rebalancing)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_RebalanceCallback_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_RebalanceCallback_2_list) NewElement() protoreflect.Value {
	v := new(Rebalancing)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_RebalanceCallback_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_RebalanceCallback              protoreflect.MessageDescriptor
	fd_RebalanceCallback_host_zone_id protoreflect.FieldDescriptor
	fd_RebalanceCallback_rebalancings protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_callbacks_proto_init()
	md_RebalanceCallback = File_stride_stakeibc_callbacks_proto.Messages().ByName("RebalanceCallback")
	fd_RebalanceCallback_host_zone_id = md_RebalanceCallback.Fields().ByName("host_zone_id")
	fd_RebalanceCallback_rebalancings = md_RebalanceCallback.Fields().ByName("rebalancings")
}

var _ protoreflect.Message = (*fastReflection_RebalanceCallback)(nil)

type fastReflection_RebalanceCallback RebalanceCallback

func (x *RebalanceCallback) ProtoReflect() protoreflect.Message {
	return (*fastReflection_RebalanceCallback)(x)
}

func (x *RebalanceCallback) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_callbacks_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_RebalanceCallback_messageType fastReflection_RebalanceCallback_messageType
var _ protoreflect.MessageType = fastReflection_RebalanceCallback_messageType{}

type fastReflection_RebalanceCallback_messageType struct{}

func (x fastReflection_RebalanceCallback_messageType) Zero() protoreflect.Message {
	return (*fastReflection_RebalanceCallback)(nil)
}
func (x fastReflection_RebalanceCallback_messageType) New() protoreflect.Message {
	return new(fastReflection_RebalanceCallback)
}
func (x fastReflection_RebalanceCallback_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_RebalanceCallback
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_RebalanceCallback) Descriptor() protoreflect.MessageDescriptor {
	return md_RebalanceCallback
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_RebalanceCallback) Type() protoreflect.MessageType {
	return _fastReflection_RebalanceCallback_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_RebalanceCallback) New() protoreflect.Message {
	return new(fastReflection_RebalanceCallback)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_RebalanceCallback) Interface() protoreflect.ProtoMessage {
	return (*RebalanceCallback)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_RebalanceCallback) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.HostZoneId != "" {
		value := protoreflect.ValueOfString(x.HostZoneId)
		if !f(fd_RebalanceCallback_host_zone_id, value) {
			return
		}
	}
	if len(x.Rebalancings) != 0 {
		value := protoreflect.ValueOfList(&_RebalanceCallback_2_list{list: &x.Rebalancings})
		if !f(fd_RebalanceCallback_rebalancings, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_RebalanceCallback) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.RebalanceCallback.host_zone_id":
		return x.HostZoneId != ""
	case "stride.stakeibc.RebalanceCallback.rebalancings":
		return len(x.Rebalancings) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.RebalanceCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.RebalanceCallback does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RebalanceCallback) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.RebalanceCallback.host_zone_id":
		x.HostZoneId = ""
	case "stride.stakeibc.RebalanceCallback.rebalancings":
		x.Rebalancings = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.RebalanceCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.RebalanceCallback does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_RebalanceCallback) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.RebalanceCallback.host_zone_id":
		value := x.HostZoneId
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.RebalanceCallback.rebalancings":
		if len(x.Rebalancings) == 0 {
			return protoreflect.ValueOfList(&_RebalanceCallback_2_list{})
		}
		listValue := &_RebalanceCallback_2_list{list: &x.Rebalancings}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.RebalanceCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.RebalanceCallback does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RebalanceCallback) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.RebalanceCallback.host_zone_id":
		x.HostZoneId = value.Interface().(string)
	case "stride.stakeibc.RebalanceCallback.rebalancings":
		lv := value.List()
		clv := lv.(*_RebalanceCallback_2_list)
		x.Rebalancings = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.RebalanceCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.RebalanceCallback does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RebalanceCallback) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.RebalanceCallback.rebalancings":
		if x.Rebalancings == nil {
			x.Rebalancings = []*Rebalancing{}
		}
		value := &_RebalanceCallback_2_list{list: &x.Rebalancings}
		return protoreflect.ValueOfList(value)
	case "stride.stakeibc.RebalanceCallback.host_zone_id":
		panic(fmt.Errorf("field host_zone_id of message stride.stakeibc.RebalanceCallback is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.RebalanceCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.RebalanceCallback does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_RebalanceCallback) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.RebalanceCallback.host_zone_id":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.RebalanceCallback.rebalancings":
		list := []*Rebalancing{}
		return protoreflect.ValueOfList(&_RebalanceCallback_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.RebalanceCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.RebalanceCallback does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_RebalanceCallback) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.RebalanceCallback", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_RebalanceCallback) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RebalanceCallback) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_RebalanceCallback) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_RebalanceCallback) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*RebalanceCallback)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.HostZoneId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Rebalancings) > 0 {
			for _, e := range x.Rebalancings {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*RebalanceCallback)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Rebalancings) > 0 {
			for iNdEx := len(x.Rebalancings) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Rebalancings[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.HostZoneId) > 0 {
			i -= len(x.HostZoneId)
			copy(dAtA[i:], x.HostZoneId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HostZoneId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*RebalanceCallback)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RebalanceCallback: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RebalanceCallback: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HostZoneId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HostZoneId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Rebalancings", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Rebalancings = append(x.Rebalancings, &Rebalancing{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Rebalancings[len(x.Rebalancings)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_DetokenizeSharesCallback         protoreflect.MessageDescriptor
	fd_DetokenizeSharesCallback_deposit protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_callbacks_proto_init()
	md_DetokenizeSharesCallback = File_stride_stakeibc_callbacks_proto.Messages().ByName("DetokenizeSharesCallback")
	fd_DetokenizeSharesCallback_deposit = md_DetokenizeSharesCallback.Fields().ByName("deposit")
}

var _ protoreflect.Message = (*fastReflection_DetokenizeSharesCallback)(nil)

type fastReflection_DetokenizeSharesCallback DetokenizeSharesCallback

func (x *DetokenizeSharesCallback) ProtoReflect() protoreflect.Message {
	return (*fastReflection_DetokenizeSharesCallback)(x)
}

func (x *DetokenizeSharesCallback) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_callbacks_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_DetokenizeSharesCallback_messageType fastReflection_DetokenizeSharesCallback_messageType
var _ protoreflect.MessageType = fastReflection_DetokenizeSharesCallback_messageType{}

type fastReflection_DetokenizeSharesCallback_messageType struct{}

func (x fastReflection_DetokenizeSharesCallback_messageType) Zero() protoreflect.Message {
	return (*fastReflection_DetokenizeSharesCallback)(nil)
}
func (x fastReflection_DetokenizeSharesCallback_messageType) New() protoreflect.Message {
	return new(fastReflection_DetokenizeSharesCallback)
}
func (x fastReflection_DetokenizeSharesCallback_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_DetokenizeSharesCallback
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_DetokenizeSharesCallback) Descriptor() protoreflect.MessageDescriptor {
	return md_DetokenizeSharesCallback
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_DetokenizeSharesCallback) Type() protoreflect.MessageType {
	return _fastReflection_DetokenizeSharesCallback_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_DetokenizeSharesCallback) New() protoreflect.Message {
	return new(fastReflection_DetokenizeSharesCallback)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_DetokenizeSharesCallback) Interface() protoreflect.ProtoMessage {
	return (*DetokenizeSharesCallback)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_DetokenizeSharesCallback) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Deposit != nil {
		value := protoreflect.ValueOfMessage(x.Deposit.ProtoReflect())
		if !f(fd_DetokenizeSharesCallback_deposit, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_DetokenizeSharesCallback) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.DetokenizeSharesCallback.deposit":
		return x.Deposit != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.DetokenizeSharesCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.DetokenizeSharesCallback does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DetokenizeSharesCallback) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.DetokenizeSharesCallback.deposit":
		x.Deposit = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.DetokenizeSharesCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.DetokenizeSharesCallback does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_DetokenizeSharesCallback) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.DetokenizeSharesCallback.deposit":
		value := x.Deposit
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.DetokenizeSharesCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.DetokenizeSharesCallback does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DetokenizeSharesCallback) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.DetokenizeSharesCallback.deposit":
		x.Deposit = value.Message().Interface().(*records.LSMTokenDeposit)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.DetokenizeSharesCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.DetokenizeSharesCallback does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DetokenizeSharesCallback) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.DetokenizeSharesCallback.deposit":
		if x.Deposit == nil {
			x.Deposit = new(records.LSMTokenDeposit)
		}
		return protoreflect.ValueOfMessage(x.Deposit.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.DetokenizeSharesCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.DetokenizeSharesCallback does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_DetokenizeSharesCallback) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.DetokenizeSharesCallback.deposit":
		m := new(records.LSMTokenDeposit)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.DetokenizeSharesCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.DetokenizeSharesCallback does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_DetokenizeSharesCallback) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.DetokenizeSharesCallback", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_DetokenizeSharesCallback) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DetokenizeSharesCallback) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_DetokenizeSharesCallback) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_DetokenizeSharesCallback) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*DetokenizeSharesCallback)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Deposit != nil {
			l = options.Size(x.Deposit)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*DetokenizeSharesCallback)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Deposit != nil {
			encoded, err := options.Marshal(x.Deposit)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*DetokenizeSharesCallback)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DetokenizeSharesCallback: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DetokenizeSharesCallback: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Deposit", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Deposit == nil {
					x.Deposit = &records.LSMTokenDeposit{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Deposit); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_LSMLiquidStake           protoreflect.MessageDescriptor
	fd_LSMLiquidStake_deposit   protoreflect.FieldDescriptor
	fd_LSMLiquidStake_host_zone protoreflect.FieldDescriptor
	fd_LSMLiquidStake_validator protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_callbacks_proto_init()
	md_LSMLiquidStake = File_stride_stakeibc_callbacks_proto.Messages().ByName("LSMLiquidStake")
	fd_LSMLiquidStake_deposit = md_LSMLiquidStake.Fields().ByName("deposit")
	fd_LSMLiquidStake_host_zone = md_LSMLiquidStake.Fields().ByName("host_zone")
	fd_LSMLiquidStake_validator = md_LSMLiquidStake.Fields().ByName("validator")
}

var _ protoreflect.Message = (*fastReflection_LSMLiquidStake)(nil)

type fastReflection_LSMLiquidStake LSMLiquidStake

func (x *LSMLiquidStake) ProtoReflect() protoreflect.Message {
	return (*fastReflection_LSMLiquidStake)(x)
}

func (x *LSMLiquidStake) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_callbacks_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_LSMLiquidStake_messageType fastReflection_LSMLiquidStake_messageType
var _ protoreflect.MessageType = fastReflection_LSMLiquidStake_messageType{}

type fastReflection_LSMLiquidStake_messageType struct{}

func (x fastReflection_LSMLiquidStake_messageType) Zero() protoreflect.Message {
	return (*fastReflection_LSMLiquidStake)(nil)
}
func (x fastReflection_LSMLiquidStake_messageType) New() protoreflect.Message {
	return new(fastReflection_LSMLiquidStake)
}
func (x fastReflection_LSMLiquidStake_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_LSMLiquidStake
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_LSMLiquidStake) Descriptor() protoreflect.MessageDescriptor {
	return md_LSMLiquidStake
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_LSMLiquidStake) Type() protoreflect.MessageType {
	return _fastReflection_LSMLiquidStake_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_LSMLiquidStake) New() protoreflect.Message {
	return new(fastReflection_LSMLiquidStake)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_LSMLiquidStake) Interface() protoreflect.ProtoMessage {
	return (*LSMLiquidStake)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_LSMLiquidStake) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Deposit != nil {
		value := protoreflect.ValueOfMessage(x.Deposit.ProtoReflect())
		if !f(fd_LSMLiquidStake_deposit, value) {
			return
		}
	}
	if x.HostZone != nil {
		value := protoreflect.ValueOfMessage(x.HostZone.ProtoReflect())
		if !f(fd_LSMLiquidStake_host_zone, value) {
			return
		}
	}
	if x.Validator != nil {
		value := protoreflect.ValueOfMessage(x.Validator.ProtoReflect())
		if !f(fd_LSMLiquidStake_validator, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_LSMLiquidStake) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.LSMLiquidStake.deposit":
		return x.Deposit != nil
	case "stride.stakeibc.LSMLiquidStake.host_zone":
		return x.HostZone != nil
	case "stride.stakeibc.LSMLiquidStake.validator":
		return x.Validator != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.LSMLiquidStake"))
		}
		panic(fmt.Errorf("message stride.stakeibc.LSMLiquidStake does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LSMLiquidStake) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.LSMLiquidStake.deposit":
		x.Deposit = nil
	case "stride.stakeibc.LSMLiquidStake.host_zone":
		x.HostZone = nil
	case "stride.stakeibc.LSMLiquidStake.validator":
		x.Validator = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.LSMLiquidStake"))
		}
		panic(fmt.Errorf("message stride.stakeibc.LSMLiquidStake does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_LSMLiquidStake) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.LSMLiquidStake.deposit":
		value := x.Deposit
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "stride.stakeibc.LSMLiquidStake.host_zone":
		value := x.HostZone
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "stride.stakeibc.LSMLiquidStake.validator":
		value := x.Validator
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.LSMLiquidStake"))
		}
		panic(fmt.Errorf("message stride.stakeibc.LSMLiquidStake does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LSMLiquidStake) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.LSMLiquidStake.deposit":
		x.Deposit = value.Message().Interface().(*records.LSMTokenDeposit)
	case "stride.stakeibc.LSMLiquidStake.host_zone":
		x.HostZone = value.Message().Interface().(*HostZone)
	case "stride.stakeibc.LSMLiquidStake.validator":
		x.Validator = value.Message().Interface().(*Validator)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.LSMLiquidStake"))
		}
		panic(fmt.Errorf("message stride.stakeibc.LSMLiquidStake does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LSMLiquidStake) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.LSMLiquidStake.deposit":
		if x.Deposit == nil {
			x.Deposit = new(records.LSMTokenDeposit)
		}
		return protoreflect.ValueOfMessage(x.Deposit.ProtoReflect())
	case "stride.stakeibc.LSMLiquidStake.host_zone":
		if x.HostZone == nil {
			x.HostZone = new(HostZone)
		}
		return protoreflect.ValueOfMessage(x.HostZone.ProtoReflect())
	case "stride.stakeibc.LSMLiquidStake.validator":
		if x.Validator == nil {
			x.Validator = new(Validator)
		}
		return protoreflect.ValueOfMessage(x.Validator.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.LSMLiquidStake"))
		}
		panic(fmt.Errorf("message stride.stakeibc.LSMLiquidStake does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_LSMLiquidStake) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.LSMLiquidStake.deposit":
		m := new(records.LSMTokenDeposit)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "stride.stakeibc.LSMLiquidStake.host_zone":
		m := new(HostZone)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "stride.stakeibc.LSMLiquidStake.validator":
		m := new(Validator)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.LSMLiquidStake"))
		}
		panic(fmt.Errorf("message stride.stakeibc.LSMLiquidStake does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_LSMLiquidStake) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.LSMLiquidStake", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_LSMLiquidStake) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LSMLiquidStake) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_LSMLiquidStake) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_LSMLiquidStake) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*LSMLiquidStake)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Deposit != nil {
			l = options.Size(x.Deposit)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.HostZone != nil {
			l = options.Size(x.HostZone)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Validator != nil {
			l = options.Size(x.Validator)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*LSMLiquidStake)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Validator != nil {
			encoded, err := options.Marshal(x.Validator)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.HostZone != nil {
			encoded, err := options.Marshal(x.HostZone)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.Deposit != nil {
			encoded, err := options.Marshal(x.Deposit)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*LSMLiquidStake)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: LSMLiquidStake: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: LSMLiquidStake: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Deposit", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Deposit == nil {
					x.Deposit = &records.LSMTokenDeposit{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Deposit); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HostZone", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.HostZone == nil {
					x.HostZone = &HostZone{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.HostZone); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Validator", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Validator == nil {
					x.Validator = &Validator{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Validator); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ValidatorSharesToTokensQueryCallback                  protoreflect.MessageDescriptor
	fd_ValidatorSharesToTokensQueryCallback_lsm_liquid_stake protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_callbacks_proto_init()
	md_ValidatorSharesToTokensQueryCallback = File_stride_stakeibc_callbacks_proto.Messages().ByName("ValidatorSharesToTokensQueryCallback")
	fd_ValidatorSharesToTokensQueryCallback_lsm_liquid_stake = md_ValidatorSharesToTokensQueryCallback.Fields().ByName("lsm_liquid_stake")
}

var _ protoreflect.Message = (*fastReflection_ValidatorSharesToTokensQueryCallback)(nil)

type fastReflection_ValidatorSharesToTokensQueryCallback ValidatorSharesToTokensQueryCallback

func (x *ValidatorSharesToTokensQueryCallback) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ValidatorSharesToTokensQueryCallback)(x)
}

func (x *ValidatorSharesToTokensQueryCallback) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_callbacks_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ValidatorSharesToTokensQueryCallback_messageType fastReflection_ValidatorSharesToTokensQueryCallback_messageType
var _ protoreflect.MessageType = fastReflection_ValidatorSharesToTokensQueryCallback_messageType{}

type fastReflection_ValidatorSharesToTokensQueryCallback_messageType struct{}

func (x fastReflection_ValidatorSharesToTokensQueryCallback_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ValidatorSharesToTokensQueryCallback)(nil)
}
func (x fastReflection_ValidatorSharesToTokensQueryCallback_messageType) New() protoreflect.Message {
	return new(fastReflection_ValidatorSharesToTokensQueryCallback)
}
func (x fastReflection_ValidatorSharesToTokensQueryCallback_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ValidatorSharesToTokensQueryCallback
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ValidatorSharesToTokensQueryCallback) Descriptor() protoreflect.MessageDescriptor {
	return md_ValidatorSharesToTokensQueryCallback
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ValidatorSharesToTokensQueryCallback) Type() protoreflect.MessageType {
	return _fastReflection_ValidatorSharesToTokensQueryCallback_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ValidatorSharesToTokensQueryCallback) New() protoreflect.Message {
	return new(fastReflection_ValidatorSharesToTokensQueryCallback)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ValidatorSharesToTokensQueryCallback) Interface() protoreflect.ProtoMessage {
	return (*ValidatorSharesToTokensQueryCallback)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ValidatorSharesToTokensQueryCallback) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.LsmLiquidStake != nil {
		value := protoreflect.ValueOfMessage(x.LsmLiquidStake.ProtoReflect())
		if !f(fd_ValidatorSharesToTokensQueryCallback_lsm_liquid_stake, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ValidatorSharesToTokensQueryCallback) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.ValidatorSharesToTokensQueryCallback.lsm_liquid_stake":
		return x.LsmLiquidStake != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.ValidatorSharesToTokensQueryCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.ValidatorSharesToTokensQueryCallback does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidatorSharesToTokensQueryCallback) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.ValidatorSharesToTokensQueryCallback.lsm_liquid_stake":
		x.LsmLiquidStake = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.ValidatorSharesToTokensQueryCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.ValidatorSharesToTokensQueryCallback does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ValidatorSharesToTokensQueryCallback) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.ValidatorSharesToTokensQueryCallback.lsm_liquid_stake":
		value := x.LsmLiquidStake
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.ValidatorSharesToTokensQueryCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.ValidatorSharesToTokensQueryCallback does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidatorSharesToTokensQueryCallback) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.ValidatorSharesToTokensQueryCallback.lsm_liquid_stake":
		x.LsmLiquidStake = value.Message().Interface().(*LSMLiquidStake)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.ValidatorSharesToTokensQueryCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.ValidatorSharesToTokensQueryCallback does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidatorSharesToTokensQueryCallback) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.ValidatorSharesToTokensQueryCallback.lsm_liquid_stake":
		if x.LsmLiquidStake == nil {
			x.LsmLiquidStake = new(LSMLiquidStake)
		}
		return protoreflect.ValueOfMessage(x.LsmLiquidStake.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.ValidatorSharesToTokensQueryCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.ValidatorSharesToTokensQueryCallback does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ValidatorSharesToTokensQueryCallback) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.ValidatorSharesToTokensQueryCallback.lsm_liquid_stake":
		m := new(LSMLiquidStake)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.ValidatorSharesToTokensQueryCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.ValidatorSharesToTokensQueryCallback does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ValidatorSharesToTokensQueryCallback) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.ValidatorSharesToTokensQueryCallback", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ValidatorSharesToTokensQueryCallback) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidatorSharesToTokensQueryCallback) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ValidatorSharesToTokensQueryCallback) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ValidatorSharesToTokensQueryCallback) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ValidatorSharesToTokensQueryCallback)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.LsmLiquidStake != nil {
			l = options.Size(x.LsmLiquidStake)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ValidatorSharesToTokensQueryCallback)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.LsmLiquidStake != nil {
			encoded, err := options.Marshal(x.LsmLiquidStake)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ValidatorSharesToTokensQueryCallback)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValidatorSharesToTokensQueryCallback: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValidatorSharesToTokensQueryCallback: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LsmLiquidStake", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.LsmLiquidStake == nil {
					x.LsmLiquidStake = &LSMLiquidStake{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.LsmLiquidStake); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_DelegatorSharesQueryCallback                              protoreflect.MessageDescriptor
	fd_DelegatorSharesQueryCallback_initial_validator_delegation protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_callbacks_proto_init()
	md_DelegatorSharesQueryCallback = File_stride_stakeibc_callbacks_proto.Messages().ByName("DelegatorSharesQueryCallback")
	fd_DelegatorSharesQueryCallback_initial_validator_delegation = md_DelegatorSharesQueryCallback.Fields().ByName("initial_validator_delegation")
}

var _ protoreflect.Message = (*fastReflection_DelegatorSharesQueryCallback)(nil)

type fastReflection_DelegatorSharesQueryCallback DelegatorSharesQueryCallback

func (x *DelegatorSharesQueryCallback) ProtoReflect() protoreflect.Message {
	return (*fastReflection_DelegatorSharesQueryCallback)(x)
}

func (x *DelegatorSharesQueryCallback) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_callbacks_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_DelegatorSharesQueryCallback_messageType fastReflection_DelegatorSharesQueryCallback_messageType
var _ protoreflect.MessageType = fastReflection_DelegatorSharesQueryCallback_messageType{}

type fastReflection_DelegatorSharesQueryCallback_messageType struct{}

func (x fastReflection_DelegatorSharesQueryCallback_messageType) Zero() protoreflect.Message {
	return (*fastReflection_DelegatorSharesQueryCallback)(nil)
}
func (x fastReflection_DelegatorSharesQueryCallback_messageType) New() protoreflect.Message {
	return new(fastReflection_DelegatorSharesQueryCallback)
}
func (x fastReflection_DelegatorSharesQueryCallback_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_DelegatorSharesQueryCallback
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_DelegatorSharesQueryCallback) Descriptor() protoreflect.MessageDescriptor {
	return md_DelegatorSharesQueryCallback
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_DelegatorSharesQueryCallback) Type() protoreflect.MessageType {
	return _fastReflection_DelegatorSharesQueryCallback_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_DelegatorSharesQueryCallback) New() protoreflect.Message {
	return new(fastReflection_DelegatorSharesQueryCallback)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_DelegatorSharesQueryCallback) Interface() protoreflect.ProtoMessage {
	return (*DelegatorSharesQueryCallback)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_DelegatorSharesQueryCallback) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.InitialValidatorDelegation != "" {
		value := protoreflect.ValueOfString(x.InitialValidatorDelegation)
		if !f(fd_DelegatorSharesQueryCallback_initial_validator_delegation, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_DelegatorSharesQueryCallback) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.DelegatorSharesQueryCallback.initial_validator_delegation":
		return x.InitialValidatorDelegation != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.DelegatorSharesQueryCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.DelegatorSharesQueryCallback does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegatorSharesQueryCallback) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.DelegatorSharesQueryCallback.initial_validator_delegation":
		x.InitialValidatorDelegation = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.DelegatorSharesQueryCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.DelegatorSharesQueryCallback does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_DelegatorSharesQueryCallback) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.DelegatorSharesQueryCallback.initial_validator_delegation":
		value := x.InitialValidatorDelegation
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.DelegatorSharesQueryCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.DelegatorSharesQueryCallback does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegatorSharesQueryCallback) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.DelegatorSharesQueryCallback.initial_validator_delegation":
		x.InitialValidatorDelegation = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.DelegatorSharesQueryCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.DelegatorSharesQueryCallback does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegatorSharesQueryCallback) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.DelegatorSharesQueryCallback.initial_validator_delegation":
		panic(fmt.Errorf("field initial_validator_delegation of message stride.stakeibc.DelegatorSharesQueryCallback is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.DelegatorSharesQueryCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.DelegatorSharesQueryCallback does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_DelegatorSharesQueryCallback) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.DelegatorSharesQueryCallback.initial_validator_delegation":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.DelegatorSharesQueryCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.DelegatorSharesQueryCallback does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_DelegatorSharesQueryCallback) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.DelegatorSharesQueryCallback", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_DelegatorSharesQueryCallback) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegatorSharesQueryCallback) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_DelegatorSharesQueryCallback) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_DelegatorSharesQueryCallback) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*DelegatorSharesQueryCallback)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.InitialValidatorDelegation)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*DelegatorSharesQueryCallback)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.InitialValidatorDelegation) > 0 {
			i -= len(x.InitialValidatorDelegation)
			copy(dAtA[i:], x.InitialValidatorDelegation)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.InitialValidatorDelegation)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*DelegatorSharesQueryCallback)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DelegatorSharesQueryCallback: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DelegatorSharesQueryCallback: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InitialValidatorDelegation", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.InitialValidatorDelegation = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_CommunityPoolBalanceQueryCallback          protoreflect.MessageDescriptor
	fd_CommunityPoolBalanceQueryCallback_ica_type protoreflect.FieldDescriptor
	fd_CommunityPoolBalanceQueryCallback_denom    protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_callbacks_proto_init()
	md_CommunityPoolBalanceQueryCallback = File_stride_stakeibc_callbacks_proto.Messages().ByName("CommunityPoolBalanceQueryCallback")
	fd_CommunityPoolBalanceQueryCallback_ica_type = md_CommunityPoolBalanceQueryCallback.Fields().ByName("ica_type")
	fd_CommunityPoolBalanceQueryCallback_denom = md_CommunityPoolBalanceQueryCallback.Fields().ByName("denom")
}

var _ protoreflect.Message = (*fastReflection_CommunityPoolBalanceQueryCallback)(nil)

type fastReflection_CommunityPoolBalanceQueryCallback CommunityPoolBalanceQueryCallback

func (x *CommunityPoolBalanceQueryCallback) ProtoReflect() protoreflect.Message {
	return (*fastReflection_CommunityPoolBalanceQueryCallback)(x)
}

func (x *CommunityPoolBalanceQueryCallback) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_callbacks_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_CommunityPoolBalanceQueryCallback_messageType fastReflection_CommunityPoolBalanceQueryCallback_messageType
var _ protoreflect.MessageType = fastReflection_CommunityPoolBalanceQueryCallback_messageType{}

type fastReflection_CommunityPoolBalanceQueryCallback_messageType struct{}

func (x fastReflection_CommunityPoolBalanceQueryCallback_messageType) Zero() protoreflect.Message {
	return (*fastReflection_CommunityPoolBalanceQueryCallback)(nil)
}
func (x fastReflection_CommunityPoolBalanceQueryCallback_messageType) New() protoreflect.Message {
	return new(fastReflection_CommunityPoolBalanceQueryCallback)
}
func (x fastReflection_CommunityPoolBalanceQueryCallback_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_CommunityPoolBalanceQueryCallback
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_CommunityPoolBalanceQueryCallback) Descriptor() protoreflect.MessageDescriptor {
	return md_CommunityPoolBalanceQueryCallback
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_CommunityPoolBalanceQueryCallback) Type() protoreflect.MessageType {
	return _fastReflection_CommunityPoolBalanceQueryCallback_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_CommunityPoolBalanceQueryCallback) New() protoreflect.Message {
	return new(fastReflection_CommunityPoolBalanceQueryCallback)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_CommunityPoolBalanceQueryCallback) Interface() protoreflect.ProtoMessage {
	return (*CommunityPoolBalanceQueryCallback)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_CommunityPoolBalanceQueryCallback) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.IcaType != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.IcaType))
		if !f(fd_CommunityPoolBalanceQueryCallback_ica_type, value) {
			return
		}
	}
	if x.Denom != "" {
		value := protoreflect.ValueOfString(x.Denom)
		if !f(fd_CommunityPoolBalanceQueryCallback_denom, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_CommunityPoolBalanceQueryCallback) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.CommunityPoolBalanceQueryCallback.ica_type":
		return x.IcaType != 0
	case "stride.stakeibc.CommunityPoolBalanceQueryCallback.denom":
		return x.Denom != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.CommunityPoolBalanceQueryCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.CommunityPoolBalanceQueryCallback does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CommunityPoolBalanceQueryCallback) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.CommunityPoolBalanceQueryCallback.ica_type":
		x.IcaType = 0
	case "stride.stakeibc.CommunityPoolBalanceQueryCallback.denom":
		x.Denom = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.CommunityPoolBalanceQueryCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.CommunityPoolBalanceQueryCallback does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_CommunityPoolBalanceQueryCallback) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.CommunityPoolBalanceQueryCallback.ica_type":
		value := x.IcaType
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "stride.stakeibc.CommunityPoolBalanceQueryCallback.denom":
		value := x.Denom
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.CommunityPoolBalanceQueryCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.CommunityPoolBalanceQueryCallback does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CommunityPoolBalanceQueryCallback) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.CommunityPoolBalanceQueryCallback.ica_type":
		x.IcaType = (ICAAccountType)(value.Enum())
	case "stride.stakeibc.CommunityPoolBalanceQueryCallback.denom":
		x.Denom = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.CommunityPoolBalanceQueryCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.CommunityPoolBalanceQueryCallback does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CommunityPoolBalanceQueryCallback) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.CommunityPoolBalanceQueryCallback.ica_type":
		panic(fmt.Errorf("field ica_type of message stride.stakeibc.CommunityPoolBalanceQueryCallback is not mutable"))
	case "stride.stakeibc.CommunityPoolBalanceQueryCallback.denom":
		panic(fmt.Errorf("field denom of message stride.stakeibc.CommunityPoolBalanceQueryCallback is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.CommunityPoolBalanceQueryCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.CommunityPoolBalanceQueryCallback does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_CommunityPoolBalanceQueryCallback) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.CommunityPoolBalanceQueryCallback.ica_type":
		return protoreflect.ValueOfEnum(0)
	case "stride.stakeibc.CommunityPoolBalanceQueryCallback.denom":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.CommunityPoolBalanceQueryCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.CommunityPoolBalanceQueryCallback does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_CommunityPoolBalanceQueryCallback) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.CommunityPoolBalanceQueryCallback", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_CommunityPoolBalanceQueryCallback) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CommunityPoolBalanceQueryCallback) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_CommunityPoolBalanceQueryCallback) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_CommunityPoolBalanceQueryCallback) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*CommunityPoolBalanceQueryCallback)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.IcaType != 0 {
			n += 1 + runtime.Sov(uint64(x.IcaType))
		}
		l = len(x.Denom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*CommunityPoolBalanceQueryCallback)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Denom) > 0 {
			i -= len(x.Denom)
			copy(dAtA[i:], x.Denom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Denom)))
			i--
			dAtA[i] = 0x12
		}
		if x.IcaType != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.IcaType))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*CommunityPoolBalanceQueryCallback)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: CommunityPoolBalanceQueryCallback: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: CommunityPoolBalanceQueryCallback: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IcaType", wireType)
				}
				x.IcaType = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.IcaType |= ICAAccountType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Denom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TradeRouteCallback              protoreflect.MessageDescriptor
	fd_TradeRouteCallback_reward_denom protoreflect.FieldDescriptor
	fd_TradeRouteCallback_host_denom   protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_callbacks_proto_init()
	md_TradeRouteCallback = File_stride_stakeibc_callbacks_proto.Messages().ByName("TradeRouteCallback")
	fd_TradeRouteCallback_reward_denom = md_TradeRouteCallback.Fields().ByName("reward_denom")
	fd_TradeRouteCallback_host_denom = md_TradeRouteCallback.Fields().ByName("host_denom")
}

var _ protoreflect.Message = (*fastReflection_TradeRouteCallback)(nil)

type fastReflection_TradeRouteCallback TradeRouteCallback

func (x *TradeRouteCallback) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TradeRouteCallback)(x)
}

func (x *TradeRouteCallback) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_callbacks_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TradeRouteCallback_messageType fastReflection_TradeRouteCallback_messageType
var _ protoreflect.MessageType = fastReflection_TradeRouteCallback_messageType{}

type fastReflection_TradeRouteCallback_messageType struct{}

func (x fastReflection_TradeRouteCallback_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TradeRouteCallback)(nil)
}
func (x fastReflection_TradeRouteCallback_messageType) New() protoreflect.Message {
	return new(fastReflection_TradeRouteCallback)
}
func (x fastReflection_TradeRouteCallback_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TradeRouteCallback
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TradeRouteCallback) Descriptor() protoreflect.MessageDescriptor {
	return md_TradeRouteCallback
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TradeRouteCallback) Type() protoreflect.MessageType {
	return _fastReflection_TradeRouteCallback_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TradeRouteCallback) New() protoreflect.Message {
	return new(fastReflection_TradeRouteCallback)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TradeRouteCallback) Interface() protoreflect.ProtoMessage {
	return (*TradeRouteCallback)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TradeRouteCallback) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.RewardDenom != "" {
		value := protoreflect.ValueOfString(x.RewardDenom)
		if !f(fd_TradeRouteCallback_reward_denom, value) {
			return
		}
	}
	if x.HostDenom != "" {
		value := protoreflect.ValueOfString(x.HostDenom)
		if !f(fd_TradeRouteCallback_host_denom, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TradeRouteCallback) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.TradeRouteCallback.reward_denom":
		return x.RewardDenom != ""
	case "stride.stakeibc.TradeRouteCallback.host_denom":
		return x.HostDenom != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.TradeRouteCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.TradeRouteCallback does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TradeRouteCallback) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.TradeRouteCallback.reward_denom":
		x.RewardDenom = ""
	case "stride.stakeibc.TradeRouteCallback.host_denom":
		x.HostDenom = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.TradeRouteCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.TradeRouteCallback does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TradeRouteCallback) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.TradeRouteCallback.reward_denom":
		value := x.RewardDenom
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.TradeRouteCallback.host_denom":
		value := x.HostDenom
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.TradeRouteCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.TradeRouteCallback does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TradeRouteCallback) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.TradeRouteCallback.reward_denom":
		x.RewardDenom = value.Interface().(string)
	case "stride.stakeibc.TradeRouteCallback.host_denom":
		x.HostDenom = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.TradeRouteCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.TradeRouteCallback does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TradeRouteCallback) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.TradeRouteCallback.reward_denom":
		panic(fmt.Errorf("field reward_denom of message stride.stakeibc.TradeRouteCallback is not mutable"))
	case "stride.stakeibc.TradeRouteCallback.host_denom":
		panic(fmt.Errorf("field host_denom of message stride.stakeibc.TradeRouteCallback is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.TradeRouteCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.TradeRouteCallback does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TradeRouteCallback) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.TradeRouteCallback.reward_denom":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.TradeRouteCallback.host_denom":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.TradeRouteCallback"))
		}
		panic(fmt.Errorf("message stride.stakeibc.TradeRouteCallback does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TradeRouteCallback) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.TradeRouteCallback", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TradeRouteCallback) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TradeRouteCallback) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TradeRouteCallback) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TradeRouteCallback) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TradeRouteCallback)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.RewardDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.HostDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TradeRouteCallback)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.HostDenom) > 0 {
			i -= len(x.HostDenom)
			copy(dAtA[i:], x.HostDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HostDenom)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.RewardDenom) > 0 {
			i -= len(x.RewardDenom)
			copy(dAtA[i:], x.RewardDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RewardDenom)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TradeRouteCallback)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TradeRouteCallback: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TradeRouteCallback: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RewardDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HostDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HostDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: stride/stakeibc/callbacks.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SplitDelegation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Validator string `protobuf:"bytes,1,opt,name=validator,proto3" json:"validator,omitempty"`
	Amount    string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *SplitDelegation) Reset() {
	*x = SplitDelegation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_callbacks_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitDelegation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitDelegation) ProtoMessage() {}

// Deprecated: Use SplitDelegation.ProtoReflect.Descriptor instead.
func (*SplitDelegation) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_callbacks_proto_rawDescGZIP(), []int{0}
}

func (x *SplitDelegation) GetValidator() string {
	if x != nil {
		return x.Validator
	}
	return ""
}

func (x *SplitDelegation) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type DelegateCallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostZoneId       string             `protobuf:"bytes,1,opt,name=host_zone_id,json=hostZoneId,proto3" json:"host_zone_id,omitempty"`
	DepositRecordId  uint64             `protobuf:"varint,2,opt,name=deposit_record_id,json=depositRecordId,proto3" json:"deposit_record_id,omitempty"`
	SplitDelegations []*SplitDelegation `protobuf:"bytes,3,rep,name=split_delegations,json=splitDelegations,proto3" json:"split_delegations,omitempty"`
}

func (x *DelegateCallback) Reset() {
	*x = DelegateCallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_callbacks_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelegateCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegateCallback) ProtoMessage() {}

// Deprecated: Use DelegateCallback.ProtoReflect.Descriptor instead.
func (*DelegateCallback) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_callbacks_proto_rawDescGZIP(), []int{1}
}

func (x *DelegateCallback) GetHostZoneId() string {
	if x != nil {
		return x.HostZoneId
	}
	return ""
}

func (x *DelegateCallback) GetDepositRecordId() uint64 {
	if x != nil {
		return x.DepositRecordId
	}
	return 0
}

func (x *DelegateCallback) GetSplitDelegations() []*SplitDelegation {
	if x != nil {
		return x.SplitDelegations
	}
	return nil
}

type ClaimCallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserRedemptionRecordId string `protobuf:"bytes,1,opt,name=user_redemption_record_id,json=userRedemptionRecordId,proto3" json:"user_redemption_record_id,omitempty"`
	ChainId                string `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	EpochNumber            uint64 `protobuf:"varint,3,opt,name=epoch_number,json=epochNumber,proto3" json:"epoch_number,omitempty"`
}

func (x *ClaimCallback) Reset() {
	*x = ClaimCallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_callbacks_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimCallback) ProtoMessage() {}

// Deprecated: Use ClaimCallback.ProtoReflect.Descriptor instead.
func (*ClaimCallback) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_callbacks_proto_rawDescGZIP(), []int{2}
}

func (x *ClaimCallback) GetUserRedemptionRecordId() string {
	if x != nil {
		return x.UserRedemptionRecordId
	}
	return ""
}

func (x *ClaimCallback) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *ClaimCallback) GetEpochNumber() uint64 {
	if x != nil {
		return x.EpochNumber
	}
	return 0
}

type ReinvestCallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReinvestAmount *v1beta1.Coin `protobuf:"bytes,1,opt,name=reinvest_amount,json=reinvestAmount,proto3" json:"reinvest_amount,omitempty"`
	HostZoneId     string        `protobuf:"bytes,3,opt,name=host_zone_id,json=hostZoneId,proto3" json:"host_zone_id,omitempty"`
}

func (x *ReinvestCallback) Reset() {
	*x = ReinvestCallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_callbacks_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReinvestCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReinvestCallback) ProtoMessage() {}

// Deprecated: Use ReinvestCallback.ProtoReflect.Descriptor instead.
func (*ReinvestCallback) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_callbacks_proto_rawDescGZIP(), []int{3}
}

func (x *ReinvestCallback) GetReinvestAmount() *v1beta1.Coin {
	if x != nil {
		return x.ReinvestAmount
	}
	return nil
}

func (x *ReinvestCallback) GetHostZoneId() string {
	if x != nil {
		return x.HostZoneId
	}
	return ""
}

type UndelegateCallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostZoneId              string             `protobuf:"bytes,1,opt,name=host_zone_id,json=hostZoneId,proto3" json:"host_zone_id,omitempty"`
	SplitDelegations        []*SplitDelegation `protobuf:"bytes,2,rep,name=split_delegations,json=splitDelegations,proto3" json:"split_delegations,omitempty"`
	EpochUnbondingRecordIds []uint64           `protobuf:"varint,3,rep,packed,name=epoch_unbonding_record_ids,json=epochUnbondingRecordIds,proto3" json:"epoch_unbonding_record_ids,omitempty"`
}

func (x *UndelegateCallback) Reset() {
	*x = UndelegateCallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_callbacks_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UndelegateCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UndelegateCallback) ProtoMessage() {}

// Deprecated: Use UndelegateCallback.ProtoReflect.Descriptor instead.
func (*UndelegateCallback) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_callbacks_proto_rawDescGZIP(), []int{4}
}

func (x *UndelegateCallback) GetHostZoneId() string {
	if x != nil {
		return x.HostZoneId
	}
	return ""
}

func (x *UndelegateCallback) GetSplitDelegations() []*SplitDelegation {
	if x != nil {
		return x.SplitDelegations
	}
	return nil
}

func (x *UndelegateCallback) GetEpochUnbondingRecordIds() []uint64 {
	if x != nil {
		return x.EpochUnbondingRecordIds
	}
	return nil
}

type RedemptionCallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostZoneId              string   `protobuf:"bytes,1,opt,name=host_zone_id,json=hostZoneId,proto3" json:"host_zone_id,omitempty"`
	EpochUnbondingRecordIds []uint64 `protobuf:"varint,2,rep,packed,name=epoch_unbonding_record_ids,json=epochUnbondingRecordIds,proto3" json:"epoch_unbonding_record_ids,omitempty"`
}

func (x *RedemptionCallback) Reset() {
	*x = RedemptionCallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_callbacks_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedemptionCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedemptionCallback) ProtoMessage() {}

// Deprecated: Use RedemptionCallback.ProtoReflect.Descriptor instead.
func (*RedemptionCallback) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_callbacks_proto_rawDescGZIP(), []int{5}
}

func (x *RedemptionCallback) GetHostZoneId() string {
	if x != nil {
		return x.HostZoneId
	}
	return ""
}

func (x *RedemptionCallback) GetEpochUnbondingRecordIds() []uint64 {
	if x != nil {
		return x.EpochUnbondingRecordIds
	}
	return nil
}

type Rebalancing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcValidator string `protobuf:"bytes,1,opt,name=src_validator,json=srcValidator,proto3" json:"src_validator,omitempty"`
	DstValidator string `protobuf:"bytes,2,opt,name=dst_validator,json=dstValidator,proto3" json:"dst_validator,omitempty"`
	Amt          string `protobuf:"bytes,3,opt,name=amt,proto3" json:"amt,omitempty"`
}

func (x *Rebalancing) Reset() {
	*x = Rebalancing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_callbacks_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rebalancing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rebalancing) ProtoMessage() {}

// Deprecated: Use Rebalancing.ProtoReflect.Descriptor instead.
func (*Rebalancing) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_callbacks_proto_rawDescGZIP(), []int{6}
}

func (x *Rebalancing) GetSrcValidator() string {
	if x != nil {
		return x.SrcValidator
	}
	return ""
}

func (x *Rebalancing) GetDstValidator() string {
	if x != nil {
		return x.DstValidator
	}
	return ""
}

func (x *Rebalancing) GetAmt() string {
	if x != nil {
		return x.Amt
	}
	return ""
}

type RebalanceCallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostZoneId   string         `protobuf:"bytes,1,opt,name=host_zone_id,json=hostZoneId,proto3" json:"host_zone_id,omitempty"`
	Rebalancings []*Rebalancing `protobuf:"bytes,2,rep,name=rebalancings,proto3" json:"rebalancings,omitempty"`
}

func (x *RebalanceCallback) Reset() {
	*x = RebalanceCallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_callbacks_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebalanceCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebalanceCallback) ProtoMessage() {}

// Deprecated: Use RebalanceCallback.ProtoReflect.Descriptor instead.
func (*RebalanceCallback) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_callbacks_proto_rawDescGZIP(), []int{7}
}

func (x *RebalanceCallback) GetHostZoneId() string {
	if x != nil {
		return x.HostZoneId
	}
	return ""
}

func (x *RebalanceCallback) GetRebalancings() []*Rebalancing {
	if x != nil {
		return x.Rebalancings
	}
	return nil
}

type DetokenizeSharesCallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deposit *records.LSMTokenDeposit `protobuf:"bytes,1,opt,name=deposit,proto3" json:"deposit,omitempty"`
}

func (x *DetokenizeSharesCallback) Reset() {
	*x = DetokenizeSharesCallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_callbacks_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetokenizeSharesCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetokenizeSharesCallback) ProtoMessage() {}

// Deprecated: Use DetokenizeSharesCallback.ProtoReflect.Descriptor instead.
func (*DetokenizeSharesCallback) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_callbacks_proto_rawDescGZIP(), []int{8}
}

func (x *DetokenizeSharesCallback) GetDeposit() *records.LSMTokenDeposit {
	if x != nil {
		return x.Deposit
	}
	return nil
}

type LSMLiquidStake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deposit   *records.LSMTokenDeposit `protobuf:"bytes,1,opt,name=deposit,proto3" json:"deposit,omitempty"`
	HostZone  *HostZone                `protobuf:"bytes,2,opt,name=host_zone,json=hostZone,proto3" json:"host_zone,omitempty"`
	Validator *Validator               `protobuf:"bytes,3,opt,name=validator,proto3" json:"validator,omitempty"`
}

func (x *LSMLiquidStake) Reset() {
	*x = LSMLiquidStake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_callbacks_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LSMLiquidStake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LSMLiquidStake) ProtoMessage() {}

// Deprecated: Use LSMLiquidStake.ProtoReflect.Descriptor instead.
func (*LSMLiquidStake) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_callbacks_proto_rawDescGZIP(), []int{9}
}

func (x *LSMLiquidStake) GetDeposit() *records.LSMTokenDeposit {
	if x != nil {
		return x.Deposit
	}
	return nil
}

func (x *LSMLiquidStake) GetHostZone() *HostZone {
	if x != nil {
		return x.HostZone
	}
	return nil
}

func (x *LSMLiquidStake) GetValidator() *Validator {
	if x != nil {
		return x.Validator
	}
	return nil
}

type ValidatorSharesToTokensQueryCallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LsmLiquidStake *LSMLiquidStake `protobuf:"bytes,1,opt,name=lsm_liquid_stake,json=lsmLiquidStake,proto3" json:"lsm_liquid_stake,omitempty"`
}

func (x *ValidatorSharesToTokensQueryCallback) Reset() {
	*x = ValidatorSharesToTokensQueryCallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_callbacks_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatorSharesToTokensQueryCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorSharesToTokensQueryCallback) ProtoMessage() {}

// Deprecated: Use ValidatorSharesToTokensQueryCallback.ProtoReflect.Descriptor instead.
func (*ValidatorSharesToTokensQueryCallback) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_callbacks_proto_rawDescGZIP(), []int{10}
}

func (x *ValidatorSharesToTokensQueryCallback) GetLsmLiquidStake() *LSMLiquidStake {
	if x != nil {
		return x.LsmLiquidStake
	}
	return nil
}

type DelegatorSharesQueryCallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Validator delegation at the time the query is submitted
	InitialValidatorDelegation string `protobuf:"bytes,1,opt,name=initial_validator_delegation,json=initialValidatorDelegation,proto3" json:"initial_validator_delegation,omitempty"`
}

func (x *DelegatorSharesQueryCallback) Reset() {
	*x = DelegatorSharesQueryCallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_callbacks_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelegatorSharesQueryCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegatorSharesQueryCallback) ProtoMessage() {}

// Deprecated: Use DelegatorSharesQueryCallback.ProtoReflect.Descriptor instead.
func (*DelegatorSharesQueryCallback) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_callbacks_proto_rawDescGZIP(), []int{11}
}

func (x *DelegatorSharesQueryCallback) GetInitialValidatorDelegation() string {
	if x != nil {
		return x.InitialValidatorDelegation
	}
	return ""
}

type CommunityPoolBalanceQueryCallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IcaType ICAAccountType `protobuf:"varint,1,opt,name=ica_type,json=icaType,proto3,enum=stride.stakeibc.ICAAccountType" json:"ica_type,omitempty"`
	Denom   string         `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
}

func (x *CommunityPoolBalanceQueryCallback) Reset() {
	*x = CommunityPoolBalanceQueryCallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_callbacks_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommunityPoolBalanceQueryCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommunityPoolBalanceQueryCallback) ProtoMessage() {}

// Deprecated: Use CommunityPoolBalanceQueryCallback.ProtoReflect.Descriptor instead.
func (*CommunityPoolBalanceQueryCallback) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_callbacks_proto_rawDescGZIP(), []int{12}
}

func (x *CommunityPoolBalanceQueryCallback) GetIcaType() ICAAccountType {
	if x != nil {
		return x.IcaType
	}
	return ICAAccountType_DELEGATION
}

func (x *CommunityPoolBalanceQueryCallback) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

type TradeRouteCallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardDenom string `protobuf:"bytes,1,opt,name=reward_denom,json=rewardDenom,proto3" json:"reward_denom,omitempty"`
	HostDenom   string `protobuf:"bytes,2,opt,name=host_denom,json=hostDenom,proto3" json:"host_denom,omitempty"`
}

func (x *TradeRouteCallback) Reset() {
	*x = TradeRouteCallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_callbacks_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeRouteCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeRouteCallback) ProtoMessage() {}

// Deprecated: Use TradeRouteCallback.ProtoReflect.Descriptor instead.
func (*TradeRouteCallback) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_callbacks_proto_rawDescGZIP(), []int{13}
}

func (x *TradeRouteCallback) GetRewardDenom() string {
	if x != nil {
		return x.RewardDenom
	}
	return ""
}

func (x *TradeRouteCallback) GetHostDenom() string {
	if x != nil {
		return x.HostDenom
	}
	return ""
}

var File_stride_stakeibc_callbacks_proto protoreflect.FileDescriptor

var file_stride_stakeibc_callbacks_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62,
	0x63, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0f, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69,
	0x62, 0x63, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x63, 0x6f,
	0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65,
	0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2f, 0x73,
	0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2f,
	0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65,
	0x2f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2f, 0x69, 0x63, 0x61, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x66, 0x0a, 0x0f, 0x53,
	0x70, 0x6c, 0x69, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xc8, 0xde,
	0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e,
	0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0xaf, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x20, 0x0a, 0x0c, 0x68, 0x6f, 0x73, 0x74,
	0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x68, 0x6f, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x11, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x5f,
	0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65,
	0x69, 0x62, 0x63, 0x2e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x10, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x0d, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x43,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x39, 0x0a, 0x19, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x72, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x75, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x98, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x43, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x62, 0x0a, 0x0f, 0x72, 0x65, 0x69, 0x6e, 0x76, 0x65, 0x73,
	0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x1e, 0xc8, 0xde, 0x1f, 0x00, 0xaa,
	0xdf, 0x1f, 0x16, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f,
	0x6d, 0x61, 0x74, 0x68, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x0e, 0x72, 0x65, 0x69, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x68, 0x6f, 0x73,
	0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x68, 0x6f, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x22, 0xc2, 0x01, 0x0a, 0x12,
	0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x12, 0x20, 0x0a, 0x0c, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x6f, 0x73, 0x74, 0x5a, 0x6f,
	0x6e, 0x65, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x11, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x5f, 0x64, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62,
	0x63, 0x2e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x10, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x3b, 0x0a, 0x1a, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x75, 0x6e, 0x62,
	0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x17, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x55, 0x6e,
	0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x73,
	0x22, 0x73, 0x0a, 0x12, 0x52, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x20, 0x0a, 0x0c, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x7a,
	0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x6f,
	0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x1a, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0x5f, 0x75, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x17, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x55, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x49, 0x64, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x72, 0x63, 0x5f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x72,
	0x63, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x73,
	0x74, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x2f, 0x0a, 0x03, 0x61, 0x6d, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xc8, 0xde,
	0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e,
	0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x03, 0x61, 0x6d, 0x74,
	0x22, 0x77, 0x0a, 0x11, 0x52, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x20, 0x0a, 0x0c, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x7a, 0x6f,
	0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x6f, 0x73,
	0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x0c, 0x72, 0x65, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e,
	0x52, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x72, 0x65, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x55, 0x0a, 0x18, 0x44, 0x65, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x43, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x39, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x2e, 0x4c, 0x53, 0x4d, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x22, 0xbd, 0x01, 0x0a, 0x0e, 0x4c, 0x53, 0x4d, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x53, 0x74,
	0x61, 0x6b, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x2e, 0x4c, 0x53, 0x4d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x36,
	0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65,
	0x69, 0x62, 0x63, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x08, 0x68, 0x6f,
	0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x22, 0x71, 0x0a, 0x24, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x73, 0x54, 0x6f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x49, 0x0a, 0x10, 0x6c, 0x73, 0x6d, 0x5f,
	0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b,
	0x65, 0x69, 0x62, 0x63, 0x2e, 0x4c, 0x53, 0x4d, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x53, 0x74,
	0x61, 0x6b, 0x65, 0x52, 0x0e, 0x6c, 0x73, 0x6d, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x53, 0x74,
	0x61, 0x6b, 0x65, 0x22, 0x7f, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x12, 0x5f, 0x0a, 0x1c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xc8, 0xde, 0x1f, 0x00, 0xda,
	0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f,
	0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x1a, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x75, 0x0a, 0x21, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x3a, 0x0a, 0x08, 0x69, 0x63, 0x61,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e, 0x49, 0x43,
	0x41, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x69, 0x63,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x22, 0x56, 0x0a, 0x12, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x65, 0x6e, 0x6f,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44,
	0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x64, 0x65, 0x6e,
	0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x44, 0x65,
	0x6e, 0x6f, 0x6d, 0x42, 0xb9, 0x01, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x42, 0x0e, 0x43, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x35, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x69, 0x6c, 0x6b, 0x79, 0x77,
	0x61, 0x79, 0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x6d, 0x69, 0x6c, 0x6b, 0x79, 0x77, 0x61, 0x79,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x6b,
	0x65, 0x69, 0x62, 0x63, 0xa2, 0x02, 0x03, 0x53, 0x53, 0x58, 0xaa, 0x02, 0x0f, 0x53, 0x74, 0x72,
	0x69, 0x64, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0xca, 0x02, 0x0f, 0x53,
	0x74, 0x72, 0x69, 0x64, 0x65, 0x5c, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0xe2, 0x02,
	0x1b, 0x53, 0x74, 0x72, 0x69, 0x64, 0x65, 0x5c, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x10, 0x53,
	0x74, 0x72, 0x69, 0x64, 0x65, 0x3a, 0x3a, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_stride_stakeibc_callbacks_proto_rawDescOnce sync.Once
	file_stride_stakeibc_callbacks_proto_rawDescData = file_stride_stakeibc_callbacks_proto_rawDesc
)

func file_stride_stakeibc_callbacks_proto_rawDescGZIP() []byte {
	file_stride_stakeibc_callbacks_proto_rawDescOnce.Do(func() {
		file_stride_stakeibc_callbacks_proto_rawDescData = protoimpl.X.CompressGZIP(file_stride_stakeibc_callbacks_proto_rawDescData)
	})
	return file_stride_stakeibc_callbacks_proto_rawDescData
}

var file_stride_stakeibc_callbacks_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_stride_stakeibc_callbacks_proto_goTypes = []interface{}{
	(*SplitDelegation)(nil),                      // 0: stride.stakeibc.SplitDelegation
	(*DelegateCallback)(nil),                     // 1: stride.stakeibc.DelegateCallback
	(*ClaimCallback)(nil),                        // 2: stride.stakeibc.ClaimCallback
	(*ReinvestCallback)(nil),                     // 3: stride.stakeibc.ReinvestCallback
	(*UndelegateCallback)(nil),                   // 4: stride.stakeibc.UndelegateCallback
	(*RedemptionCallback)(nil),                   // 5: stride.stakeibc.RedemptionCallback
	(*Rebalancing)(nil),                          // 6: stride.stakeibc.Rebalancing
	(*RebalanceCallback)(nil),                    // 7: stride.stakeibc.RebalanceCallback
	(*DetokenizeSharesCallback)(nil),             // 8: stride.stakeibc.DetokenizeSharesCallback
	(*LSMLiquidStake)(nil),                       // 9: stride.stakeibc.LSMLiquidStake
	(*ValidatorSharesToTokensQueryCallback)(nil), // 10: stride.stakeibc.ValidatorSharesToTokensQueryCallback
	(*DelegatorSharesQueryCallback)(nil),         // 11: stride.stakeibc.DelegatorSharesQueryCallback
	(*CommunityPoolBalanceQueryCallback)(nil),    // 12: stride.stakeibc.CommunityPoolBalanceQueryCallback
	(*TradeRouteCallback)(nil),                   // 13: stride.stakeibc.TradeRouteCallback
	(*v1beta1.Coin)(nil),                         // 14: cosmos.base.v1beta1.Coin
	(*records.LSMTokenDeposit)(nil),              // 15: stride.records.LSMTokenDeposit
	(*HostZone)(nil),                             // 16: stride.stakeibc.HostZone
	(*Validator)(nil),                            // 17: stride.stakeibc.Validator
	(ICAAccountType)(0),                          // 18: stride.stakeibc.ICAAccountType
}
var file_stride_stakeibc_callbacks_proto_depIdxs = []int32{
	0,  // 0: stride.stakeibc.DelegateCallback.split_delegations:type_name -> stride.stakeibc.SplitDelegation
	14, // 1: stride.stakeibc.ReinvestCallback.reinvest_amount:type_name -> cosmos.base.v1beta1.Coin
	0,  // 2: stride.stakeibc.UndelegateCallback.split_delegations:type_name -> stride.stakeibc.SplitDelegation
	6,  // 3: stride.stakeibc.RebalanceCallback.rebalancings:type_name -> stride.stakeibc.Rebalancing
	15, // 4: stride.stakeibc.DetokenizeSharesCallback.deposit:type_name -> stride.records.LSMTokenDeposit
	15, // 5: stride.stakeibc.LSMLiquidStake.deposit:type_name -> stride.records.LSMTokenDeposit
	16, // 6: stride.stakeibc.LSMLiquidStake.host_zone:type_name -> stride.stakeibc.HostZone
	17, // 7: stride.stakeibc.LSMLiquidStake.validator:type_name -> stride.stakeibc.Validator
	9,  // 8: stride.stakeibc.ValidatorSharesToTokensQueryCallback.lsm_liquid_stake:type_name -> stride.stakeibc.LSMLiquidStake
	18, // 9: stride.stakeibc.CommunityPoolBalanceQueryCallback.ica_type:type_name -> stride.stakeibc.ICAAccountType
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_stride_stakeibc_callbacks_proto_init() }
func file_stride_stakeibc_callbacks_proto_init() {
	if File_stride_stakeibc_callbacks_proto != nil {
		return
	}
	file_stride_stakeibc_host_zone_proto_init()
	file_stride_stakeibc_validator_proto_init()
	file_stride_stakeibc_ica_account_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_stride_stakeibc_callbacks_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitDelegation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_callbacks_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelegateCallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_callbacks_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimCallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_callbacks_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReinvestCallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_callbacks_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UndelegateCallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_callbacks_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedemptionCallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_callbacks_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rebalancing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_callbacks_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebalanceCallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_callbacks_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetokenizeSharesCallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_callbacks_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LSMLiquidStake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_callbacks_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatorSharesToTokensQueryCallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_callbacks_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelegatorSharesQueryCallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_callbacks_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommunityPoolBalanceQueryCallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_callbacks_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeRouteCallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stride_stakeibc_callbacks_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_stride_stakeibc_callbacks_proto_goTypes,
		DependencyIndexes: file_stride_stakeibc_callbacks_proto_depIdxs,
		MessageInfos:      file_stride_stakeibc_callbacks_proto_msgTypes,
	}.Build()
	File_stride_stakeibc_callbacks_proto = out.File
	file_stride_stakeibc_callbacks_proto_rawDesc = nil
	file_stride_stakeibc_callbacks_proto_goTypes = nil
	file_stride_stakeibc_callbacks_proto_depIdxs = nil
}
