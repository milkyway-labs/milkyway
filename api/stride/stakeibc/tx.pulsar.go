// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package stakeibc

import (
	_ "cosmossdk.io/api/amino"
	v1beta1 "cosmossdk.io/api/cosmos/base/v1beta1"
	_ "cosmossdk.io/api/cosmos/msg/v1"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_MsgUpdateInnerRedemptionRateBounds                           protoreflect.MessageDescriptor
	fd_MsgUpdateInnerRedemptionRateBounds_creator                   protoreflect.FieldDescriptor
	fd_MsgUpdateInnerRedemptionRateBounds_chain_id                  protoreflect.FieldDescriptor
	fd_MsgUpdateInnerRedemptionRateBounds_min_inner_redemption_rate protoreflect.FieldDescriptor
	fd_MsgUpdateInnerRedemptionRateBounds_max_inner_redemption_rate protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgUpdateInnerRedemptionRateBounds = File_stride_stakeibc_tx_proto.Messages().ByName("MsgUpdateInnerRedemptionRateBounds")
	fd_MsgUpdateInnerRedemptionRateBounds_creator = md_MsgUpdateInnerRedemptionRateBounds.Fields().ByName("creator")
	fd_MsgUpdateInnerRedemptionRateBounds_chain_id = md_MsgUpdateInnerRedemptionRateBounds.Fields().ByName("chain_id")
	fd_MsgUpdateInnerRedemptionRateBounds_min_inner_redemption_rate = md_MsgUpdateInnerRedemptionRateBounds.Fields().ByName("min_inner_redemption_rate")
	fd_MsgUpdateInnerRedemptionRateBounds_max_inner_redemption_rate = md_MsgUpdateInnerRedemptionRateBounds.Fields().ByName("max_inner_redemption_rate")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateInnerRedemptionRateBounds)(nil)

type fastReflection_MsgUpdateInnerRedemptionRateBounds MsgUpdateInnerRedemptionRateBounds

func (x *MsgUpdateInnerRedemptionRateBounds) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateInnerRedemptionRateBounds)(x)
}

func (x *MsgUpdateInnerRedemptionRateBounds) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateInnerRedemptionRateBounds_messageType fastReflection_MsgUpdateInnerRedemptionRateBounds_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateInnerRedemptionRateBounds_messageType{}

type fastReflection_MsgUpdateInnerRedemptionRateBounds_messageType struct{}

func (x fastReflection_MsgUpdateInnerRedemptionRateBounds_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateInnerRedemptionRateBounds)(nil)
}
func (x fastReflection_MsgUpdateInnerRedemptionRateBounds_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateInnerRedemptionRateBounds)
}
func (x fastReflection_MsgUpdateInnerRedemptionRateBounds_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateInnerRedemptionRateBounds
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBounds) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateInnerRedemptionRateBounds
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBounds) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateInnerRedemptionRateBounds_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBounds) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateInnerRedemptionRateBounds)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBounds) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateInnerRedemptionRateBounds)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBounds) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgUpdateInnerRedemptionRateBounds_creator, value) {
			return
		}
	}
	if x.ChainId != "" {
		value := protoreflect.ValueOfString(x.ChainId)
		if !f(fd_MsgUpdateInnerRedemptionRateBounds_chain_id, value) {
			return
		}
	}
	if x.MinInnerRedemptionRate != "" {
		value := protoreflect.ValueOfString(x.MinInnerRedemptionRate)
		if !f(fd_MsgUpdateInnerRedemptionRateBounds_min_inner_redemption_rate, value) {
			return
		}
	}
	if x.MaxInnerRedemptionRate != "" {
		value := protoreflect.ValueOfString(x.MaxInnerRedemptionRate)
		if !f(fd_MsgUpdateInnerRedemptionRateBounds_max_inner_redemption_rate, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBounds) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.MsgUpdateInnerRedemptionRateBounds.creator":
		return x.Creator != ""
	case "stride.stakeibc.MsgUpdateInnerRedemptionRateBounds.chain_id":
		return x.ChainId != ""
	case "stride.stakeibc.MsgUpdateInnerRedemptionRateBounds.min_inner_redemption_rate":
		return x.MinInnerRedemptionRate != ""
	case "stride.stakeibc.MsgUpdateInnerRedemptionRateBounds.max_inner_redemption_rate":
		return x.MaxInnerRedemptionRate != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateInnerRedemptionRateBounds"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateInnerRedemptionRateBounds does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBounds) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgUpdateInnerRedemptionRateBounds.creator":
		x.Creator = ""
	case "stride.stakeibc.MsgUpdateInnerRedemptionRateBounds.chain_id":
		x.ChainId = ""
	case "stride.stakeibc.MsgUpdateInnerRedemptionRateBounds.min_inner_redemption_rate":
		x.MinInnerRedemptionRate = ""
	case "stride.stakeibc.MsgUpdateInnerRedemptionRateBounds.max_inner_redemption_rate":
		x.MaxInnerRedemptionRate = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateInnerRedemptionRateBounds"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateInnerRedemptionRateBounds does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBounds) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.MsgUpdateInnerRedemptionRateBounds.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgUpdateInnerRedemptionRateBounds.chain_id":
		value := x.ChainId
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgUpdateInnerRedemptionRateBounds.min_inner_redemption_rate":
		value := x.MinInnerRedemptionRate
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgUpdateInnerRedemptionRateBounds.max_inner_redemption_rate":
		value := x.MaxInnerRedemptionRate
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateInnerRedemptionRateBounds"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateInnerRedemptionRateBounds does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBounds) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgUpdateInnerRedemptionRateBounds.creator":
		x.Creator = value.Interface().(string)
	case "stride.stakeibc.MsgUpdateInnerRedemptionRateBounds.chain_id":
		x.ChainId = value.Interface().(string)
	case "stride.stakeibc.MsgUpdateInnerRedemptionRateBounds.min_inner_redemption_rate":
		x.MinInnerRedemptionRate = value.Interface().(string)
	case "stride.stakeibc.MsgUpdateInnerRedemptionRateBounds.max_inner_redemption_rate":
		x.MaxInnerRedemptionRate = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateInnerRedemptionRateBounds"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateInnerRedemptionRateBounds does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBounds) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgUpdateInnerRedemptionRateBounds.creator":
		panic(fmt.Errorf("field creator of message stride.stakeibc.MsgUpdateInnerRedemptionRateBounds is not mutable"))
	case "stride.stakeibc.MsgUpdateInnerRedemptionRateBounds.chain_id":
		panic(fmt.Errorf("field chain_id of message stride.stakeibc.MsgUpdateInnerRedemptionRateBounds is not mutable"))
	case "stride.stakeibc.MsgUpdateInnerRedemptionRateBounds.min_inner_redemption_rate":
		panic(fmt.Errorf("field min_inner_redemption_rate of message stride.stakeibc.MsgUpdateInnerRedemptionRateBounds is not mutable"))
	case "stride.stakeibc.MsgUpdateInnerRedemptionRateBounds.max_inner_redemption_rate":
		panic(fmt.Errorf("field max_inner_redemption_rate of message stride.stakeibc.MsgUpdateInnerRedemptionRateBounds is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateInnerRedemptionRateBounds"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateInnerRedemptionRateBounds does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBounds) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgUpdateInnerRedemptionRateBounds.creator":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgUpdateInnerRedemptionRateBounds.chain_id":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgUpdateInnerRedemptionRateBounds.min_inner_redemption_rate":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgUpdateInnerRedemptionRateBounds.max_inner_redemption_rate":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateInnerRedemptionRateBounds"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateInnerRedemptionRateBounds does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBounds) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgUpdateInnerRedemptionRateBounds", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBounds) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBounds) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBounds) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBounds) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateInnerRedemptionRateBounds)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChainId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.MinInnerRedemptionRate)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.MaxInnerRedemptionRate)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateInnerRedemptionRateBounds)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.MaxInnerRedemptionRate) > 0 {
			i -= len(x.MaxInnerRedemptionRate)
			copy(dAtA[i:], x.MaxInnerRedemptionRate)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MaxInnerRedemptionRate)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.MinInnerRedemptionRate) > 0 {
			i -= len(x.MinInnerRedemptionRate)
			copy(dAtA[i:], x.MinInnerRedemptionRate)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MinInnerRedemptionRate)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ChainId) > 0 {
			i -= len(x.ChainId)
			copy(dAtA[i:], x.ChainId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateInnerRedemptionRateBounds)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateInnerRedemptionRateBounds: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateInnerRedemptionRateBounds: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MinInnerRedemptionRate", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MinInnerRedemptionRate = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MaxInnerRedemptionRate", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MaxInnerRedemptionRate = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUpdateInnerRedemptionRateBoundsResponse protoreflect.MessageDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgUpdateInnerRedemptionRateBoundsResponse = File_stride_stakeibc_tx_proto.Messages().ByName("MsgUpdateInnerRedemptionRateBoundsResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse)(nil)

type fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse MsgUpdateInnerRedemptionRateBoundsResponse

func (x *MsgUpdateInnerRedemptionRateBoundsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse)(x)
}

func (x *MsgUpdateInnerRedemptionRateBoundsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse_messageType fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse_messageType{}

type fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse_messageType struct{}

func (x fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse)(nil)
}
func (x fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse)
}
func (x fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateInnerRedemptionRateBoundsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateInnerRedemptionRateBoundsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateInnerRedemptionRateBoundsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateInnerRedemptionRateBoundsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateInnerRedemptionRateBoundsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateInnerRedemptionRateBoundsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateInnerRedemptionRateBoundsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateInnerRedemptionRateBoundsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateInnerRedemptionRateBoundsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateInnerRedemptionRateBoundsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateInnerRedemptionRateBoundsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateInnerRedemptionRateBoundsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateInnerRedemptionRateBoundsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateInnerRedemptionRateBoundsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateInnerRedemptionRateBoundsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgUpdateInnerRedemptionRateBoundsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateInnerRedemptionRateBoundsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateInnerRedemptionRateBoundsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateInnerRedemptionRateBoundsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateInnerRedemptionRateBoundsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateInnerRedemptionRateBoundsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateInnerRedemptionRateBoundsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgLiquidStake            protoreflect.MessageDescriptor
	fd_MsgLiquidStake_creator    protoreflect.FieldDescriptor
	fd_MsgLiquidStake_amount     protoreflect.FieldDescriptor
	fd_MsgLiquidStake_host_denom protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgLiquidStake = File_stride_stakeibc_tx_proto.Messages().ByName("MsgLiquidStake")
	fd_MsgLiquidStake_creator = md_MsgLiquidStake.Fields().ByName("creator")
	fd_MsgLiquidStake_amount = md_MsgLiquidStake.Fields().ByName("amount")
	fd_MsgLiquidStake_host_denom = md_MsgLiquidStake.Fields().ByName("host_denom")
}

var _ protoreflect.Message = (*fastReflection_MsgLiquidStake)(nil)

type fastReflection_MsgLiquidStake MsgLiquidStake

func (x *MsgLiquidStake) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgLiquidStake)(x)
}

func (x *MsgLiquidStake) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgLiquidStake_messageType fastReflection_MsgLiquidStake_messageType
var _ protoreflect.MessageType = fastReflection_MsgLiquidStake_messageType{}

type fastReflection_MsgLiquidStake_messageType struct{}

func (x fastReflection_MsgLiquidStake_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgLiquidStake)(nil)
}
func (x fastReflection_MsgLiquidStake_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgLiquidStake)
}
func (x fastReflection_MsgLiquidStake_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgLiquidStake
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgLiquidStake) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgLiquidStake
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgLiquidStake) Type() protoreflect.MessageType {
	return _fastReflection_MsgLiquidStake_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgLiquidStake) New() protoreflect.Message {
	return new(fastReflection_MsgLiquidStake)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgLiquidStake) Interface() protoreflect.ProtoMessage {
	return (*MsgLiquidStake)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgLiquidStake) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgLiquidStake_creator, value) {
			return
		}
	}
	if x.Amount != "" {
		value := protoreflect.ValueOfString(x.Amount)
		if !f(fd_MsgLiquidStake_amount, value) {
			return
		}
	}
	if x.HostDenom != "" {
		value := protoreflect.ValueOfString(x.HostDenom)
		if !f(fd_MsgLiquidStake_host_denom, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgLiquidStake) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.MsgLiquidStake.creator":
		return x.Creator != ""
	case "stride.stakeibc.MsgLiquidStake.amount":
		return x.Amount != ""
	case "stride.stakeibc.MsgLiquidStake.host_denom":
		return x.HostDenom != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgLiquidStake"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgLiquidStake does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgLiquidStake) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgLiquidStake.creator":
		x.Creator = ""
	case "stride.stakeibc.MsgLiquidStake.amount":
		x.Amount = ""
	case "stride.stakeibc.MsgLiquidStake.host_denom":
		x.HostDenom = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgLiquidStake"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgLiquidStake does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgLiquidStake) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.MsgLiquidStake.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgLiquidStake.amount":
		value := x.Amount
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgLiquidStake.host_denom":
		value := x.HostDenom
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgLiquidStake"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgLiquidStake does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgLiquidStake) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgLiquidStake.creator":
		x.Creator = value.Interface().(string)
	case "stride.stakeibc.MsgLiquidStake.amount":
		x.Amount = value.Interface().(string)
	case "stride.stakeibc.MsgLiquidStake.host_denom":
		x.HostDenom = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgLiquidStake"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgLiquidStake does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgLiquidStake) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgLiquidStake.creator":
		panic(fmt.Errorf("field creator of message stride.stakeibc.MsgLiquidStake is not mutable"))
	case "stride.stakeibc.MsgLiquidStake.amount":
		panic(fmt.Errorf("field amount of message stride.stakeibc.MsgLiquidStake is not mutable"))
	case "stride.stakeibc.MsgLiquidStake.host_denom":
		panic(fmt.Errorf("field host_denom of message stride.stakeibc.MsgLiquidStake is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgLiquidStake"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgLiquidStake does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgLiquidStake) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgLiquidStake.creator":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgLiquidStake.amount":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgLiquidStake.host_denom":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgLiquidStake"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgLiquidStake does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgLiquidStake) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgLiquidStake", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgLiquidStake) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgLiquidStake) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgLiquidStake) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgLiquidStake) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgLiquidStake)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Amount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.HostDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgLiquidStake)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.HostDenom) > 0 {
			i -= len(x.HostDenom)
			copy(dAtA[i:], x.HostDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HostDenom)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Amount) > 0 {
			i -= len(x.Amount)
			copy(dAtA[i:], x.Amount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Amount)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgLiquidStake)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgLiquidStake: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgLiquidStake: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Amount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HostDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HostDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgLiquidStakeResponse          protoreflect.MessageDescriptor
	fd_MsgLiquidStakeResponse_st_token protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgLiquidStakeResponse = File_stride_stakeibc_tx_proto.Messages().ByName("MsgLiquidStakeResponse")
	fd_MsgLiquidStakeResponse_st_token = md_MsgLiquidStakeResponse.Fields().ByName("st_token")
}

var _ protoreflect.Message = (*fastReflection_MsgLiquidStakeResponse)(nil)

type fastReflection_MsgLiquidStakeResponse MsgLiquidStakeResponse

func (x *MsgLiquidStakeResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgLiquidStakeResponse)(x)
}

func (x *MsgLiquidStakeResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgLiquidStakeResponse_messageType fastReflection_MsgLiquidStakeResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgLiquidStakeResponse_messageType{}

type fastReflection_MsgLiquidStakeResponse_messageType struct{}

func (x fastReflection_MsgLiquidStakeResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgLiquidStakeResponse)(nil)
}
func (x fastReflection_MsgLiquidStakeResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgLiquidStakeResponse)
}
func (x fastReflection_MsgLiquidStakeResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgLiquidStakeResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgLiquidStakeResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgLiquidStakeResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgLiquidStakeResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgLiquidStakeResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgLiquidStakeResponse) New() protoreflect.Message {
	return new(fastReflection_MsgLiquidStakeResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgLiquidStakeResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgLiquidStakeResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgLiquidStakeResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.StToken != nil {
		value := protoreflect.ValueOfMessage(x.StToken.ProtoReflect())
		if !f(fd_MsgLiquidStakeResponse_st_token, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgLiquidStakeResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.MsgLiquidStakeResponse.st_token":
		return x.StToken != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgLiquidStakeResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgLiquidStakeResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgLiquidStakeResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgLiquidStakeResponse.st_token":
		x.StToken = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgLiquidStakeResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgLiquidStakeResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgLiquidStakeResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.MsgLiquidStakeResponse.st_token":
		value := x.StToken
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgLiquidStakeResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgLiquidStakeResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgLiquidStakeResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgLiquidStakeResponse.st_token":
		x.StToken = value.Message().Interface().(*v1beta1.Coin)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgLiquidStakeResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgLiquidStakeResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgLiquidStakeResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgLiquidStakeResponse.st_token":
		if x.StToken == nil {
			x.StToken = new(v1beta1.Coin)
		}
		return protoreflect.ValueOfMessage(x.StToken.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgLiquidStakeResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgLiquidStakeResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgLiquidStakeResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgLiquidStakeResponse.st_token":
		m := new(v1beta1.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgLiquidStakeResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgLiquidStakeResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgLiquidStakeResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgLiquidStakeResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgLiquidStakeResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgLiquidStakeResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgLiquidStakeResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgLiquidStakeResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgLiquidStakeResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.StToken != nil {
			l = options.Size(x.StToken)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgLiquidStakeResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.StToken != nil {
			encoded, err := options.Marshal(x.StToken)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgLiquidStakeResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgLiquidStakeResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgLiquidStakeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StToken", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.StToken == nil {
					x.StToken = &v1beta1.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.StToken); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgLSMLiquidStake                     protoreflect.MessageDescriptor
	fd_MsgLSMLiquidStake_creator             protoreflect.FieldDescriptor
	fd_MsgLSMLiquidStake_amount              protoreflect.FieldDescriptor
	fd_MsgLSMLiquidStake_lsm_token_ibc_denom protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgLSMLiquidStake = File_stride_stakeibc_tx_proto.Messages().ByName("MsgLSMLiquidStake")
	fd_MsgLSMLiquidStake_creator = md_MsgLSMLiquidStake.Fields().ByName("creator")
	fd_MsgLSMLiquidStake_amount = md_MsgLSMLiquidStake.Fields().ByName("amount")
	fd_MsgLSMLiquidStake_lsm_token_ibc_denom = md_MsgLSMLiquidStake.Fields().ByName("lsm_token_ibc_denom")
}

var _ protoreflect.Message = (*fastReflection_MsgLSMLiquidStake)(nil)

type fastReflection_MsgLSMLiquidStake MsgLSMLiquidStake

func (x *MsgLSMLiquidStake) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgLSMLiquidStake)(x)
}

func (x *MsgLSMLiquidStake) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgLSMLiquidStake_messageType fastReflection_MsgLSMLiquidStake_messageType
var _ protoreflect.MessageType = fastReflection_MsgLSMLiquidStake_messageType{}

type fastReflection_MsgLSMLiquidStake_messageType struct{}

func (x fastReflection_MsgLSMLiquidStake_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgLSMLiquidStake)(nil)
}
func (x fastReflection_MsgLSMLiquidStake_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgLSMLiquidStake)
}
func (x fastReflection_MsgLSMLiquidStake_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgLSMLiquidStake
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgLSMLiquidStake) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgLSMLiquidStake
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgLSMLiquidStake) Type() protoreflect.MessageType {
	return _fastReflection_MsgLSMLiquidStake_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgLSMLiquidStake) New() protoreflect.Message {
	return new(fastReflection_MsgLSMLiquidStake)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgLSMLiquidStake) Interface() protoreflect.ProtoMessage {
	return (*MsgLSMLiquidStake)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgLSMLiquidStake) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgLSMLiquidStake_creator, value) {
			return
		}
	}
	if x.Amount != "" {
		value := protoreflect.ValueOfString(x.Amount)
		if !f(fd_MsgLSMLiquidStake_amount, value) {
			return
		}
	}
	if x.LsmTokenIbcDenom != "" {
		value := protoreflect.ValueOfString(x.LsmTokenIbcDenom)
		if !f(fd_MsgLSMLiquidStake_lsm_token_ibc_denom, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgLSMLiquidStake) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.MsgLSMLiquidStake.creator":
		return x.Creator != ""
	case "stride.stakeibc.MsgLSMLiquidStake.amount":
		return x.Amount != ""
	case "stride.stakeibc.MsgLSMLiquidStake.lsm_token_ibc_denom":
		return x.LsmTokenIbcDenom != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgLSMLiquidStake"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgLSMLiquidStake does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgLSMLiquidStake) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgLSMLiquidStake.creator":
		x.Creator = ""
	case "stride.stakeibc.MsgLSMLiquidStake.amount":
		x.Amount = ""
	case "stride.stakeibc.MsgLSMLiquidStake.lsm_token_ibc_denom":
		x.LsmTokenIbcDenom = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgLSMLiquidStake"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgLSMLiquidStake does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgLSMLiquidStake) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.MsgLSMLiquidStake.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgLSMLiquidStake.amount":
		value := x.Amount
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgLSMLiquidStake.lsm_token_ibc_denom":
		value := x.LsmTokenIbcDenom
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgLSMLiquidStake"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgLSMLiquidStake does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgLSMLiquidStake) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgLSMLiquidStake.creator":
		x.Creator = value.Interface().(string)
	case "stride.stakeibc.MsgLSMLiquidStake.amount":
		x.Amount = value.Interface().(string)
	case "stride.stakeibc.MsgLSMLiquidStake.lsm_token_ibc_denom":
		x.LsmTokenIbcDenom = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgLSMLiquidStake"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgLSMLiquidStake does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgLSMLiquidStake) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgLSMLiquidStake.creator":
		panic(fmt.Errorf("field creator of message stride.stakeibc.MsgLSMLiquidStake is not mutable"))
	case "stride.stakeibc.MsgLSMLiquidStake.amount":
		panic(fmt.Errorf("field amount of message stride.stakeibc.MsgLSMLiquidStake is not mutable"))
	case "stride.stakeibc.MsgLSMLiquidStake.lsm_token_ibc_denom":
		panic(fmt.Errorf("field lsm_token_ibc_denom of message stride.stakeibc.MsgLSMLiquidStake is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgLSMLiquidStake"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgLSMLiquidStake does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgLSMLiquidStake) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgLSMLiquidStake.creator":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgLSMLiquidStake.amount":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgLSMLiquidStake.lsm_token_ibc_denom":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgLSMLiquidStake"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgLSMLiquidStake does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgLSMLiquidStake) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgLSMLiquidStake", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgLSMLiquidStake) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgLSMLiquidStake) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgLSMLiquidStake) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgLSMLiquidStake) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgLSMLiquidStake)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Amount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.LsmTokenIbcDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgLSMLiquidStake)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.LsmTokenIbcDenom) > 0 {
			i -= len(x.LsmTokenIbcDenom)
			copy(dAtA[i:], x.LsmTokenIbcDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.LsmTokenIbcDenom)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Amount) > 0 {
			i -= len(x.Amount)
			copy(dAtA[i:], x.Amount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Amount)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgLSMLiquidStake)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgLSMLiquidStake: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgLSMLiquidStake: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Amount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LsmTokenIbcDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LsmTokenIbcDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgLSMLiquidStakeResponse                      protoreflect.MessageDescriptor
	fd_MsgLSMLiquidStakeResponse_transaction_complete protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgLSMLiquidStakeResponse = File_stride_stakeibc_tx_proto.Messages().ByName("MsgLSMLiquidStakeResponse")
	fd_MsgLSMLiquidStakeResponse_transaction_complete = md_MsgLSMLiquidStakeResponse.Fields().ByName("transaction_complete")
}

var _ protoreflect.Message = (*fastReflection_MsgLSMLiquidStakeResponse)(nil)

type fastReflection_MsgLSMLiquidStakeResponse MsgLSMLiquidStakeResponse

func (x *MsgLSMLiquidStakeResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgLSMLiquidStakeResponse)(x)
}

func (x *MsgLSMLiquidStakeResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgLSMLiquidStakeResponse_messageType fastReflection_MsgLSMLiquidStakeResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgLSMLiquidStakeResponse_messageType{}

type fastReflection_MsgLSMLiquidStakeResponse_messageType struct{}

func (x fastReflection_MsgLSMLiquidStakeResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgLSMLiquidStakeResponse)(nil)
}
func (x fastReflection_MsgLSMLiquidStakeResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgLSMLiquidStakeResponse)
}
func (x fastReflection_MsgLSMLiquidStakeResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgLSMLiquidStakeResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgLSMLiquidStakeResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgLSMLiquidStakeResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgLSMLiquidStakeResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgLSMLiquidStakeResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgLSMLiquidStakeResponse) New() protoreflect.Message {
	return new(fastReflection_MsgLSMLiquidStakeResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgLSMLiquidStakeResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgLSMLiquidStakeResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgLSMLiquidStakeResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TransactionComplete != false {
		value := protoreflect.ValueOfBool(x.TransactionComplete)
		if !f(fd_MsgLSMLiquidStakeResponse_transaction_complete, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgLSMLiquidStakeResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.MsgLSMLiquidStakeResponse.transaction_complete":
		return x.TransactionComplete != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgLSMLiquidStakeResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgLSMLiquidStakeResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgLSMLiquidStakeResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgLSMLiquidStakeResponse.transaction_complete":
		x.TransactionComplete = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgLSMLiquidStakeResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgLSMLiquidStakeResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgLSMLiquidStakeResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.MsgLSMLiquidStakeResponse.transaction_complete":
		value := x.TransactionComplete
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgLSMLiquidStakeResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgLSMLiquidStakeResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgLSMLiquidStakeResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgLSMLiquidStakeResponse.transaction_complete":
		x.TransactionComplete = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgLSMLiquidStakeResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgLSMLiquidStakeResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgLSMLiquidStakeResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgLSMLiquidStakeResponse.transaction_complete":
		panic(fmt.Errorf("field transaction_complete of message stride.stakeibc.MsgLSMLiquidStakeResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgLSMLiquidStakeResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgLSMLiquidStakeResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgLSMLiquidStakeResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgLSMLiquidStakeResponse.transaction_complete":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgLSMLiquidStakeResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgLSMLiquidStakeResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgLSMLiquidStakeResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgLSMLiquidStakeResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgLSMLiquidStakeResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgLSMLiquidStakeResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgLSMLiquidStakeResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgLSMLiquidStakeResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgLSMLiquidStakeResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TransactionComplete {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgLSMLiquidStakeResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TransactionComplete {
			i--
			if x.TransactionComplete {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgLSMLiquidStakeResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgLSMLiquidStakeResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgLSMLiquidStakeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TransactionComplete", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.TransactionComplete = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgClearBalance          protoreflect.MessageDescriptor
	fd_MsgClearBalance_creator  protoreflect.FieldDescriptor
	fd_MsgClearBalance_chain_id protoreflect.FieldDescriptor
	fd_MsgClearBalance_amount   protoreflect.FieldDescriptor
	fd_MsgClearBalance_channel  protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgClearBalance = File_stride_stakeibc_tx_proto.Messages().ByName("MsgClearBalance")
	fd_MsgClearBalance_creator = md_MsgClearBalance.Fields().ByName("creator")
	fd_MsgClearBalance_chain_id = md_MsgClearBalance.Fields().ByName("chain_id")
	fd_MsgClearBalance_amount = md_MsgClearBalance.Fields().ByName("amount")
	fd_MsgClearBalance_channel = md_MsgClearBalance.Fields().ByName("channel")
}

var _ protoreflect.Message = (*fastReflection_MsgClearBalance)(nil)

type fastReflection_MsgClearBalance MsgClearBalance

func (x *MsgClearBalance) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgClearBalance)(x)
}

func (x *MsgClearBalance) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgClearBalance_messageType fastReflection_MsgClearBalance_messageType
var _ protoreflect.MessageType = fastReflection_MsgClearBalance_messageType{}

type fastReflection_MsgClearBalance_messageType struct{}

func (x fastReflection_MsgClearBalance_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgClearBalance)(nil)
}
func (x fastReflection_MsgClearBalance_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgClearBalance)
}
func (x fastReflection_MsgClearBalance_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgClearBalance
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgClearBalance) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgClearBalance
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgClearBalance) Type() protoreflect.MessageType {
	return _fastReflection_MsgClearBalance_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgClearBalance) New() protoreflect.Message {
	return new(fastReflection_MsgClearBalance)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgClearBalance) Interface() protoreflect.ProtoMessage {
	return (*MsgClearBalance)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgClearBalance) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgClearBalance_creator, value) {
			return
		}
	}
	if x.ChainId != "" {
		value := protoreflect.ValueOfString(x.ChainId)
		if !f(fd_MsgClearBalance_chain_id, value) {
			return
		}
	}
	if x.Amount != "" {
		value := protoreflect.ValueOfString(x.Amount)
		if !f(fd_MsgClearBalance_amount, value) {
			return
		}
	}
	if x.Channel != "" {
		value := protoreflect.ValueOfString(x.Channel)
		if !f(fd_MsgClearBalance_channel, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgClearBalance) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.MsgClearBalance.creator":
		return x.Creator != ""
	case "stride.stakeibc.MsgClearBalance.chain_id":
		return x.ChainId != ""
	case "stride.stakeibc.MsgClearBalance.amount":
		return x.Amount != ""
	case "stride.stakeibc.MsgClearBalance.channel":
		return x.Channel != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgClearBalance"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgClearBalance does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClearBalance) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgClearBalance.creator":
		x.Creator = ""
	case "stride.stakeibc.MsgClearBalance.chain_id":
		x.ChainId = ""
	case "stride.stakeibc.MsgClearBalance.amount":
		x.Amount = ""
	case "stride.stakeibc.MsgClearBalance.channel":
		x.Channel = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgClearBalance"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgClearBalance does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgClearBalance) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.MsgClearBalance.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgClearBalance.chain_id":
		value := x.ChainId
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgClearBalance.amount":
		value := x.Amount
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgClearBalance.channel":
		value := x.Channel
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgClearBalance"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgClearBalance does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClearBalance) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgClearBalance.creator":
		x.Creator = value.Interface().(string)
	case "stride.stakeibc.MsgClearBalance.chain_id":
		x.ChainId = value.Interface().(string)
	case "stride.stakeibc.MsgClearBalance.amount":
		x.Amount = value.Interface().(string)
	case "stride.stakeibc.MsgClearBalance.channel":
		x.Channel = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgClearBalance"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgClearBalance does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClearBalance) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgClearBalance.creator":
		panic(fmt.Errorf("field creator of message stride.stakeibc.MsgClearBalance is not mutable"))
	case "stride.stakeibc.MsgClearBalance.chain_id":
		panic(fmt.Errorf("field chain_id of message stride.stakeibc.MsgClearBalance is not mutable"))
	case "stride.stakeibc.MsgClearBalance.amount":
		panic(fmt.Errorf("field amount of message stride.stakeibc.MsgClearBalance is not mutable"))
	case "stride.stakeibc.MsgClearBalance.channel":
		panic(fmt.Errorf("field channel of message stride.stakeibc.MsgClearBalance is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgClearBalance"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgClearBalance does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgClearBalance) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgClearBalance.creator":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgClearBalance.chain_id":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgClearBalance.amount":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgClearBalance.channel":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgClearBalance"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgClearBalance does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgClearBalance) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgClearBalance", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgClearBalance) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClearBalance) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgClearBalance) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgClearBalance) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgClearBalance)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChainId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Amount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Channel)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgClearBalance)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Channel) > 0 {
			i -= len(x.Channel)
			copy(dAtA[i:], x.Channel)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Channel)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Amount) > 0 {
			i -= len(x.Amount)
			copy(dAtA[i:], x.Amount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Amount)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ChainId) > 0 {
			i -= len(x.ChainId)
			copy(dAtA[i:], x.ChainId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgClearBalance)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgClearBalance: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgClearBalance: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Amount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Channel = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgClearBalanceResponse protoreflect.MessageDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgClearBalanceResponse = File_stride_stakeibc_tx_proto.Messages().ByName("MsgClearBalanceResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgClearBalanceResponse)(nil)

type fastReflection_MsgClearBalanceResponse MsgClearBalanceResponse

func (x *MsgClearBalanceResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgClearBalanceResponse)(x)
}

func (x *MsgClearBalanceResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgClearBalanceResponse_messageType fastReflection_MsgClearBalanceResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgClearBalanceResponse_messageType{}

type fastReflection_MsgClearBalanceResponse_messageType struct{}

func (x fastReflection_MsgClearBalanceResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgClearBalanceResponse)(nil)
}
func (x fastReflection_MsgClearBalanceResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgClearBalanceResponse)
}
func (x fastReflection_MsgClearBalanceResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgClearBalanceResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgClearBalanceResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgClearBalanceResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgClearBalanceResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgClearBalanceResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgClearBalanceResponse) New() protoreflect.Message {
	return new(fastReflection_MsgClearBalanceResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgClearBalanceResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgClearBalanceResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgClearBalanceResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgClearBalanceResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgClearBalanceResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgClearBalanceResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClearBalanceResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgClearBalanceResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgClearBalanceResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgClearBalanceResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgClearBalanceResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgClearBalanceResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClearBalanceResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgClearBalanceResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgClearBalanceResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClearBalanceResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgClearBalanceResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgClearBalanceResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgClearBalanceResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgClearBalanceResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgClearBalanceResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgClearBalanceResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgClearBalanceResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgClearBalanceResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClearBalanceResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgClearBalanceResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgClearBalanceResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgClearBalanceResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgClearBalanceResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgClearBalanceResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgClearBalanceResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgClearBalanceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgRedeemStake           protoreflect.MessageDescriptor
	fd_MsgRedeemStake_creator   protoreflect.FieldDescriptor
	fd_MsgRedeemStake_amount    protoreflect.FieldDescriptor
	fd_MsgRedeemStake_host_zone protoreflect.FieldDescriptor
	fd_MsgRedeemStake_receiver  protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgRedeemStake = File_stride_stakeibc_tx_proto.Messages().ByName("MsgRedeemStake")
	fd_MsgRedeemStake_creator = md_MsgRedeemStake.Fields().ByName("creator")
	fd_MsgRedeemStake_amount = md_MsgRedeemStake.Fields().ByName("amount")
	fd_MsgRedeemStake_host_zone = md_MsgRedeemStake.Fields().ByName("host_zone")
	fd_MsgRedeemStake_receiver = md_MsgRedeemStake.Fields().ByName("receiver")
}

var _ protoreflect.Message = (*fastReflection_MsgRedeemStake)(nil)

type fastReflection_MsgRedeemStake MsgRedeemStake

func (x *MsgRedeemStake) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgRedeemStake)(x)
}

func (x *MsgRedeemStake) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgRedeemStake_messageType fastReflection_MsgRedeemStake_messageType
var _ protoreflect.MessageType = fastReflection_MsgRedeemStake_messageType{}

type fastReflection_MsgRedeemStake_messageType struct{}

func (x fastReflection_MsgRedeemStake_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgRedeemStake)(nil)
}
func (x fastReflection_MsgRedeemStake_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgRedeemStake)
}
func (x fastReflection_MsgRedeemStake_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRedeemStake
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgRedeemStake) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRedeemStake
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgRedeemStake) Type() protoreflect.MessageType {
	return _fastReflection_MsgRedeemStake_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgRedeemStake) New() protoreflect.Message {
	return new(fastReflection_MsgRedeemStake)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgRedeemStake) Interface() protoreflect.ProtoMessage {
	return (*MsgRedeemStake)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgRedeemStake) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgRedeemStake_creator, value) {
			return
		}
	}
	if x.Amount != "" {
		value := protoreflect.ValueOfString(x.Amount)
		if !f(fd_MsgRedeemStake_amount, value) {
			return
		}
	}
	if x.HostZone != "" {
		value := protoreflect.ValueOfString(x.HostZone)
		if !f(fd_MsgRedeemStake_host_zone, value) {
			return
		}
	}
	if x.Receiver != "" {
		value := protoreflect.ValueOfString(x.Receiver)
		if !f(fd_MsgRedeemStake_receiver, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgRedeemStake) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.MsgRedeemStake.creator":
		return x.Creator != ""
	case "stride.stakeibc.MsgRedeemStake.amount":
		return x.Amount != ""
	case "stride.stakeibc.MsgRedeemStake.host_zone":
		return x.HostZone != ""
	case "stride.stakeibc.MsgRedeemStake.receiver":
		return x.Receiver != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRedeemStake"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRedeemStake does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRedeemStake) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgRedeemStake.creator":
		x.Creator = ""
	case "stride.stakeibc.MsgRedeemStake.amount":
		x.Amount = ""
	case "stride.stakeibc.MsgRedeemStake.host_zone":
		x.HostZone = ""
	case "stride.stakeibc.MsgRedeemStake.receiver":
		x.Receiver = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRedeemStake"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRedeemStake does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgRedeemStake) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.MsgRedeemStake.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgRedeemStake.amount":
		value := x.Amount
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgRedeemStake.host_zone":
		value := x.HostZone
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgRedeemStake.receiver":
		value := x.Receiver
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRedeemStake"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRedeemStake does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRedeemStake) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgRedeemStake.creator":
		x.Creator = value.Interface().(string)
	case "stride.stakeibc.MsgRedeemStake.amount":
		x.Amount = value.Interface().(string)
	case "stride.stakeibc.MsgRedeemStake.host_zone":
		x.HostZone = value.Interface().(string)
	case "stride.stakeibc.MsgRedeemStake.receiver":
		x.Receiver = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRedeemStake"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRedeemStake does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRedeemStake) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgRedeemStake.creator":
		panic(fmt.Errorf("field creator of message stride.stakeibc.MsgRedeemStake is not mutable"))
	case "stride.stakeibc.MsgRedeemStake.amount":
		panic(fmt.Errorf("field amount of message stride.stakeibc.MsgRedeemStake is not mutable"))
	case "stride.stakeibc.MsgRedeemStake.host_zone":
		panic(fmt.Errorf("field host_zone of message stride.stakeibc.MsgRedeemStake is not mutable"))
	case "stride.stakeibc.MsgRedeemStake.receiver":
		panic(fmt.Errorf("field receiver of message stride.stakeibc.MsgRedeemStake is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRedeemStake"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRedeemStake does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgRedeemStake) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgRedeemStake.creator":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgRedeemStake.amount":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgRedeemStake.host_zone":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgRedeemStake.receiver":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRedeemStake"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRedeemStake does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgRedeemStake) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgRedeemStake", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgRedeemStake) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRedeemStake) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgRedeemStake) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgRedeemStake) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgRedeemStake)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Amount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.HostZone)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Receiver)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgRedeemStake)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Receiver) > 0 {
			i -= len(x.Receiver)
			copy(dAtA[i:], x.Receiver)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Receiver)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.HostZone) > 0 {
			i -= len(x.HostZone)
			copy(dAtA[i:], x.HostZone)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HostZone)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Amount) > 0 {
			i -= len(x.Amount)
			copy(dAtA[i:], x.Amount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Amount)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgRedeemStake)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRedeemStake: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRedeemStake: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Amount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HostZone", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HostZone = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Receiver = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgRedeemStakeResponse protoreflect.MessageDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgRedeemStakeResponse = File_stride_stakeibc_tx_proto.Messages().ByName("MsgRedeemStakeResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgRedeemStakeResponse)(nil)

type fastReflection_MsgRedeemStakeResponse MsgRedeemStakeResponse

func (x *MsgRedeemStakeResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgRedeemStakeResponse)(x)
}

func (x *MsgRedeemStakeResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgRedeemStakeResponse_messageType fastReflection_MsgRedeemStakeResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgRedeemStakeResponse_messageType{}

type fastReflection_MsgRedeemStakeResponse_messageType struct{}

func (x fastReflection_MsgRedeemStakeResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgRedeemStakeResponse)(nil)
}
func (x fastReflection_MsgRedeemStakeResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgRedeemStakeResponse)
}
func (x fastReflection_MsgRedeemStakeResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRedeemStakeResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgRedeemStakeResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRedeemStakeResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgRedeemStakeResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgRedeemStakeResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgRedeemStakeResponse) New() protoreflect.Message {
	return new(fastReflection_MsgRedeemStakeResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgRedeemStakeResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgRedeemStakeResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgRedeemStakeResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgRedeemStakeResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRedeemStakeResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRedeemStakeResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRedeemStakeResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRedeemStakeResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRedeemStakeResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgRedeemStakeResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRedeemStakeResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRedeemStakeResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRedeemStakeResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRedeemStakeResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRedeemStakeResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRedeemStakeResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRedeemStakeResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRedeemStakeResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgRedeemStakeResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRedeemStakeResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRedeemStakeResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgRedeemStakeResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgRedeemStakeResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgRedeemStakeResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRedeemStakeResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgRedeemStakeResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgRedeemStakeResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgRedeemStakeResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgRedeemStakeResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgRedeemStakeResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRedeemStakeResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRedeemStakeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgRegisterHostZone                                 protoreflect.MessageDescriptor
	fd_MsgRegisterHostZone_connection_id                   protoreflect.FieldDescriptor
	fd_MsgRegisterHostZone_bech32prefix                    protoreflect.FieldDescriptor
	fd_MsgRegisterHostZone_host_denom                      protoreflect.FieldDescriptor
	fd_MsgRegisterHostZone_ibc_denom                       protoreflect.FieldDescriptor
	fd_MsgRegisterHostZone_creator                         protoreflect.FieldDescriptor
	fd_MsgRegisterHostZone_transfer_channel_id             protoreflect.FieldDescriptor
	fd_MsgRegisterHostZone_unbonding_period                protoreflect.FieldDescriptor
	fd_MsgRegisterHostZone_min_redemption_rate             protoreflect.FieldDescriptor
	fd_MsgRegisterHostZone_max_redemption_rate             protoreflect.FieldDescriptor
	fd_MsgRegisterHostZone_lsm_liquid_stake_enabled        protoreflect.FieldDescriptor
	fd_MsgRegisterHostZone_community_pool_treasury_address protoreflect.FieldDescriptor
	fd_MsgRegisterHostZone_max_messages_per_ica_tx         protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgRegisterHostZone = File_stride_stakeibc_tx_proto.Messages().ByName("MsgRegisterHostZone")
	fd_MsgRegisterHostZone_connection_id = md_MsgRegisterHostZone.Fields().ByName("connection_id")
	fd_MsgRegisterHostZone_bech32prefix = md_MsgRegisterHostZone.Fields().ByName("bech32prefix")
	fd_MsgRegisterHostZone_host_denom = md_MsgRegisterHostZone.Fields().ByName("host_denom")
	fd_MsgRegisterHostZone_ibc_denom = md_MsgRegisterHostZone.Fields().ByName("ibc_denom")
	fd_MsgRegisterHostZone_creator = md_MsgRegisterHostZone.Fields().ByName("creator")
	fd_MsgRegisterHostZone_transfer_channel_id = md_MsgRegisterHostZone.Fields().ByName("transfer_channel_id")
	fd_MsgRegisterHostZone_unbonding_period = md_MsgRegisterHostZone.Fields().ByName("unbonding_period")
	fd_MsgRegisterHostZone_min_redemption_rate = md_MsgRegisterHostZone.Fields().ByName("min_redemption_rate")
	fd_MsgRegisterHostZone_max_redemption_rate = md_MsgRegisterHostZone.Fields().ByName("max_redemption_rate")
	fd_MsgRegisterHostZone_lsm_liquid_stake_enabled = md_MsgRegisterHostZone.Fields().ByName("lsm_liquid_stake_enabled")
	fd_MsgRegisterHostZone_community_pool_treasury_address = md_MsgRegisterHostZone.Fields().ByName("community_pool_treasury_address")
	fd_MsgRegisterHostZone_max_messages_per_ica_tx = md_MsgRegisterHostZone.Fields().ByName("max_messages_per_ica_tx")
}

var _ protoreflect.Message = (*fastReflection_MsgRegisterHostZone)(nil)

type fastReflection_MsgRegisterHostZone MsgRegisterHostZone

func (x *MsgRegisterHostZone) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgRegisterHostZone)(x)
}

func (x *MsgRegisterHostZone) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgRegisterHostZone_messageType fastReflection_MsgRegisterHostZone_messageType
var _ protoreflect.MessageType = fastReflection_MsgRegisterHostZone_messageType{}

type fastReflection_MsgRegisterHostZone_messageType struct{}

func (x fastReflection_MsgRegisterHostZone_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgRegisterHostZone)(nil)
}
func (x fastReflection_MsgRegisterHostZone_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgRegisterHostZone)
}
func (x fastReflection_MsgRegisterHostZone_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRegisterHostZone
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgRegisterHostZone) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRegisterHostZone
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgRegisterHostZone) Type() protoreflect.MessageType {
	return _fastReflection_MsgRegisterHostZone_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgRegisterHostZone) New() protoreflect.Message {
	return new(fastReflection_MsgRegisterHostZone)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgRegisterHostZone) Interface() protoreflect.ProtoMessage {
	return (*MsgRegisterHostZone)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgRegisterHostZone) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ConnectionId != "" {
		value := protoreflect.ValueOfString(x.ConnectionId)
		if !f(fd_MsgRegisterHostZone_connection_id, value) {
			return
		}
	}
	if x.Bech32Prefix != "" {
		value := protoreflect.ValueOfString(x.Bech32Prefix)
		if !f(fd_MsgRegisterHostZone_bech32prefix, value) {
			return
		}
	}
	if x.HostDenom != "" {
		value := protoreflect.ValueOfString(x.HostDenom)
		if !f(fd_MsgRegisterHostZone_host_denom, value) {
			return
		}
	}
	if x.IbcDenom != "" {
		value := protoreflect.ValueOfString(x.IbcDenom)
		if !f(fd_MsgRegisterHostZone_ibc_denom, value) {
			return
		}
	}
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgRegisterHostZone_creator, value) {
			return
		}
	}
	if x.TransferChannelId != "" {
		value := protoreflect.ValueOfString(x.TransferChannelId)
		if !f(fd_MsgRegisterHostZone_transfer_channel_id, value) {
			return
		}
	}
	if x.UnbondingPeriod != uint64(0) {
		value := protoreflect.ValueOfUint64(x.UnbondingPeriod)
		if !f(fd_MsgRegisterHostZone_unbonding_period, value) {
			return
		}
	}
	if x.MinRedemptionRate != "" {
		value := protoreflect.ValueOfString(x.MinRedemptionRate)
		if !f(fd_MsgRegisterHostZone_min_redemption_rate, value) {
			return
		}
	}
	if x.MaxRedemptionRate != "" {
		value := protoreflect.ValueOfString(x.MaxRedemptionRate)
		if !f(fd_MsgRegisterHostZone_max_redemption_rate, value) {
			return
		}
	}
	if x.LsmLiquidStakeEnabled != false {
		value := protoreflect.ValueOfBool(x.LsmLiquidStakeEnabled)
		if !f(fd_MsgRegisterHostZone_lsm_liquid_stake_enabled, value) {
			return
		}
	}
	if x.CommunityPoolTreasuryAddress != "" {
		value := protoreflect.ValueOfString(x.CommunityPoolTreasuryAddress)
		if !f(fd_MsgRegisterHostZone_community_pool_treasury_address, value) {
			return
		}
	}
	if x.MaxMessagesPerIcaTx != uint64(0) {
		value := protoreflect.ValueOfUint64(x.MaxMessagesPerIcaTx)
		if !f(fd_MsgRegisterHostZone_max_messages_per_ica_tx, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgRegisterHostZone) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.MsgRegisterHostZone.connection_id":
		return x.ConnectionId != ""
	case "stride.stakeibc.MsgRegisterHostZone.bech32prefix":
		return x.Bech32Prefix != ""
	case "stride.stakeibc.MsgRegisterHostZone.host_denom":
		return x.HostDenom != ""
	case "stride.stakeibc.MsgRegisterHostZone.ibc_denom":
		return x.IbcDenom != ""
	case "stride.stakeibc.MsgRegisterHostZone.creator":
		return x.Creator != ""
	case "stride.stakeibc.MsgRegisterHostZone.transfer_channel_id":
		return x.TransferChannelId != ""
	case "stride.stakeibc.MsgRegisterHostZone.unbonding_period":
		return x.UnbondingPeriod != uint64(0)
	case "stride.stakeibc.MsgRegisterHostZone.min_redemption_rate":
		return x.MinRedemptionRate != ""
	case "stride.stakeibc.MsgRegisterHostZone.max_redemption_rate":
		return x.MaxRedemptionRate != ""
	case "stride.stakeibc.MsgRegisterHostZone.lsm_liquid_stake_enabled":
		return x.LsmLiquidStakeEnabled != false
	case "stride.stakeibc.MsgRegisterHostZone.community_pool_treasury_address":
		return x.CommunityPoolTreasuryAddress != ""
	case "stride.stakeibc.MsgRegisterHostZone.max_messages_per_ica_tx":
		return x.MaxMessagesPerIcaTx != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRegisterHostZone"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRegisterHostZone does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRegisterHostZone) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgRegisterHostZone.connection_id":
		x.ConnectionId = ""
	case "stride.stakeibc.MsgRegisterHostZone.bech32prefix":
		x.Bech32Prefix = ""
	case "stride.stakeibc.MsgRegisterHostZone.host_denom":
		x.HostDenom = ""
	case "stride.stakeibc.MsgRegisterHostZone.ibc_denom":
		x.IbcDenom = ""
	case "stride.stakeibc.MsgRegisterHostZone.creator":
		x.Creator = ""
	case "stride.stakeibc.MsgRegisterHostZone.transfer_channel_id":
		x.TransferChannelId = ""
	case "stride.stakeibc.MsgRegisterHostZone.unbonding_period":
		x.UnbondingPeriod = uint64(0)
	case "stride.stakeibc.MsgRegisterHostZone.min_redemption_rate":
		x.MinRedemptionRate = ""
	case "stride.stakeibc.MsgRegisterHostZone.max_redemption_rate":
		x.MaxRedemptionRate = ""
	case "stride.stakeibc.MsgRegisterHostZone.lsm_liquid_stake_enabled":
		x.LsmLiquidStakeEnabled = false
	case "stride.stakeibc.MsgRegisterHostZone.community_pool_treasury_address":
		x.CommunityPoolTreasuryAddress = ""
	case "stride.stakeibc.MsgRegisterHostZone.max_messages_per_ica_tx":
		x.MaxMessagesPerIcaTx = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRegisterHostZone"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRegisterHostZone does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgRegisterHostZone) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.MsgRegisterHostZone.connection_id":
		value := x.ConnectionId
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgRegisterHostZone.bech32prefix":
		value := x.Bech32Prefix
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgRegisterHostZone.host_denom":
		value := x.HostDenom
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgRegisterHostZone.ibc_denom":
		value := x.IbcDenom
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgRegisterHostZone.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgRegisterHostZone.transfer_channel_id":
		value := x.TransferChannelId
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgRegisterHostZone.unbonding_period":
		value := x.UnbondingPeriod
		return protoreflect.ValueOfUint64(value)
	case "stride.stakeibc.MsgRegisterHostZone.min_redemption_rate":
		value := x.MinRedemptionRate
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgRegisterHostZone.max_redemption_rate":
		value := x.MaxRedemptionRate
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgRegisterHostZone.lsm_liquid_stake_enabled":
		value := x.LsmLiquidStakeEnabled
		return protoreflect.ValueOfBool(value)
	case "stride.stakeibc.MsgRegisterHostZone.community_pool_treasury_address":
		value := x.CommunityPoolTreasuryAddress
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgRegisterHostZone.max_messages_per_ica_tx":
		value := x.MaxMessagesPerIcaTx
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRegisterHostZone"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRegisterHostZone does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRegisterHostZone) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgRegisterHostZone.connection_id":
		x.ConnectionId = value.Interface().(string)
	case "stride.stakeibc.MsgRegisterHostZone.bech32prefix":
		x.Bech32Prefix = value.Interface().(string)
	case "stride.stakeibc.MsgRegisterHostZone.host_denom":
		x.HostDenom = value.Interface().(string)
	case "stride.stakeibc.MsgRegisterHostZone.ibc_denom":
		x.IbcDenom = value.Interface().(string)
	case "stride.stakeibc.MsgRegisterHostZone.creator":
		x.Creator = value.Interface().(string)
	case "stride.stakeibc.MsgRegisterHostZone.transfer_channel_id":
		x.TransferChannelId = value.Interface().(string)
	case "stride.stakeibc.MsgRegisterHostZone.unbonding_period":
		x.UnbondingPeriod = value.Uint()
	case "stride.stakeibc.MsgRegisterHostZone.min_redemption_rate":
		x.MinRedemptionRate = value.Interface().(string)
	case "stride.stakeibc.MsgRegisterHostZone.max_redemption_rate":
		x.MaxRedemptionRate = value.Interface().(string)
	case "stride.stakeibc.MsgRegisterHostZone.lsm_liquid_stake_enabled":
		x.LsmLiquidStakeEnabled = value.Bool()
	case "stride.stakeibc.MsgRegisterHostZone.community_pool_treasury_address":
		x.CommunityPoolTreasuryAddress = value.Interface().(string)
	case "stride.stakeibc.MsgRegisterHostZone.max_messages_per_ica_tx":
		x.MaxMessagesPerIcaTx = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRegisterHostZone"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRegisterHostZone does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRegisterHostZone) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgRegisterHostZone.connection_id":
		panic(fmt.Errorf("field connection_id of message stride.stakeibc.MsgRegisterHostZone is not mutable"))
	case "stride.stakeibc.MsgRegisterHostZone.bech32prefix":
		panic(fmt.Errorf("field bech32prefix of message stride.stakeibc.MsgRegisterHostZone is not mutable"))
	case "stride.stakeibc.MsgRegisterHostZone.host_denom":
		panic(fmt.Errorf("field host_denom of message stride.stakeibc.MsgRegisterHostZone is not mutable"))
	case "stride.stakeibc.MsgRegisterHostZone.ibc_denom":
		panic(fmt.Errorf("field ibc_denom of message stride.stakeibc.MsgRegisterHostZone is not mutable"))
	case "stride.stakeibc.MsgRegisterHostZone.creator":
		panic(fmt.Errorf("field creator of message stride.stakeibc.MsgRegisterHostZone is not mutable"))
	case "stride.stakeibc.MsgRegisterHostZone.transfer_channel_id":
		panic(fmt.Errorf("field transfer_channel_id of message stride.stakeibc.MsgRegisterHostZone is not mutable"))
	case "stride.stakeibc.MsgRegisterHostZone.unbonding_period":
		panic(fmt.Errorf("field unbonding_period of message stride.stakeibc.MsgRegisterHostZone is not mutable"))
	case "stride.stakeibc.MsgRegisterHostZone.min_redemption_rate":
		panic(fmt.Errorf("field min_redemption_rate of message stride.stakeibc.MsgRegisterHostZone is not mutable"))
	case "stride.stakeibc.MsgRegisterHostZone.max_redemption_rate":
		panic(fmt.Errorf("field max_redemption_rate of message stride.stakeibc.MsgRegisterHostZone is not mutable"))
	case "stride.stakeibc.MsgRegisterHostZone.lsm_liquid_stake_enabled":
		panic(fmt.Errorf("field lsm_liquid_stake_enabled of message stride.stakeibc.MsgRegisterHostZone is not mutable"))
	case "stride.stakeibc.MsgRegisterHostZone.community_pool_treasury_address":
		panic(fmt.Errorf("field community_pool_treasury_address of message stride.stakeibc.MsgRegisterHostZone is not mutable"))
	case "stride.stakeibc.MsgRegisterHostZone.max_messages_per_ica_tx":
		panic(fmt.Errorf("field max_messages_per_ica_tx of message stride.stakeibc.MsgRegisterHostZone is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRegisterHostZone"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRegisterHostZone does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgRegisterHostZone) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgRegisterHostZone.connection_id":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgRegisterHostZone.bech32prefix":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgRegisterHostZone.host_denom":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgRegisterHostZone.ibc_denom":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgRegisterHostZone.creator":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgRegisterHostZone.transfer_channel_id":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgRegisterHostZone.unbonding_period":
		return protoreflect.ValueOfUint64(uint64(0))
	case "stride.stakeibc.MsgRegisterHostZone.min_redemption_rate":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgRegisterHostZone.max_redemption_rate":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgRegisterHostZone.lsm_liquid_stake_enabled":
		return protoreflect.ValueOfBool(false)
	case "stride.stakeibc.MsgRegisterHostZone.community_pool_treasury_address":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgRegisterHostZone.max_messages_per_ica_tx":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRegisterHostZone"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRegisterHostZone does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgRegisterHostZone) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgRegisterHostZone", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgRegisterHostZone) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRegisterHostZone) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgRegisterHostZone) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgRegisterHostZone) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgRegisterHostZone)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ConnectionId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Bech32Prefix)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.HostDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.IbcDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TransferChannelId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.UnbondingPeriod != 0 {
			n += 1 + runtime.Sov(uint64(x.UnbondingPeriod))
		}
		l = len(x.MinRedemptionRate)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.MaxRedemptionRate)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.LsmLiquidStakeEnabled {
			n += 2
		}
		l = len(x.CommunityPoolTreasuryAddress)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		if x.MaxMessagesPerIcaTx != 0 {
			n += 2 + runtime.Sov(uint64(x.MaxMessagesPerIcaTx))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgRegisterHostZone)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.MaxMessagesPerIcaTx != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.MaxMessagesPerIcaTx))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x88
		}
		if len(x.CommunityPoolTreasuryAddress) > 0 {
			i -= len(x.CommunityPoolTreasuryAddress)
			copy(dAtA[i:], x.CommunityPoolTreasuryAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CommunityPoolTreasuryAddress)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x82
		}
		if x.LsmLiquidStakeEnabled {
			i--
			if x.LsmLiquidStakeEnabled {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x78
		}
		if len(x.MaxRedemptionRate) > 0 {
			i -= len(x.MaxRedemptionRate)
			copy(dAtA[i:], x.MaxRedemptionRate)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MaxRedemptionRate)))
			i--
			dAtA[i] = 0x72
		}
		if len(x.MinRedemptionRate) > 0 {
			i -= len(x.MinRedemptionRate)
			copy(dAtA[i:], x.MinRedemptionRate)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MinRedemptionRate)))
			i--
			dAtA[i] = 0x6a
		}
		if len(x.Bech32Prefix) > 0 {
			i -= len(x.Bech32Prefix)
			copy(dAtA[i:], x.Bech32Prefix)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Bech32Prefix)))
			i--
			dAtA[i] = 0x62
		}
		if x.UnbondingPeriod != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.UnbondingPeriod))
			i--
			dAtA[i] = 0x58
		}
		if len(x.TransferChannelId) > 0 {
			i -= len(x.TransferChannelId)
			copy(dAtA[i:], x.TransferChannelId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TransferChannelId)))
			i--
			dAtA[i] = 0x52
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.IbcDenom) > 0 {
			i -= len(x.IbcDenom)
			copy(dAtA[i:], x.IbcDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.IbcDenom)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.HostDenom) > 0 {
			i -= len(x.HostDenom)
			copy(dAtA[i:], x.HostDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HostDenom)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.ConnectionId) > 0 {
			i -= len(x.ConnectionId)
			copy(dAtA[i:], x.ConnectionId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ConnectionId)))
			i--
			dAtA[i] = 0x12
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgRegisterHostZone)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRegisterHostZone: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRegisterHostZone: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ConnectionId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ConnectionId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Bech32Prefix", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Bech32Prefix = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HostDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HostDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IbcDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.IbcDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TransferChannelId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TransferChannelId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 11:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UnbondingPeriod", wireType)
				}
				x.UnbondingPeriod = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.UnbondingPeriod |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 13:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MinRedemptionRate", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MinRedemptionRate = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 14:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MaxRedemptionRate", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MaxRedemptionRate = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 15:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LsmLiquidStakeEnabled", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.LsmLiquidStakeEnabled = bool(v != 0)
			case 16:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CommunityPoolTreasuryAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CommunityPoolTreasuryAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 17:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MaxMessagesPerIcaTx", wireType)
				}
				x.MaxMessagesPerIcaTx = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.MaxMessagesPerIcaTx |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgRegisterHostZoneResponse protoreflect.MessageDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgRegisterHostZoneResponse = File_stride_stakeibc_tx_proto.Messages().ByName("MsgRegisterHostZoneResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgRegisterHostZoneResponse)(nil)

type fastReflection_MsgRegisterHostZoneResponse MsgRegisterHostZoneResponse

func (x *MsgRegisterHostZoneResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgRegisterHostZoneResponse)(x)
}

func (x *MsgRegisterHostZoneResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgRegisterHostZoneResponse_messageType fastReflection_MsgRegisterHostZoneResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgRegisterHostZoneResponse_messageType{}

type fastReflection_MsgRegisterHostZoneResponse_messageType struct{}

func (x fastReflection_MsgRegisterHostZoneResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgRegisterHostZoneResponse)(nil)
}
func (x fastReflection_MsgRegisterHostZoneResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgRegisterHostZoneResponse)
}
func (x fastReflection_MsgRegisterHostZoneResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRegisterHostZoneResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgRegisterHostZoneResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRegisterHostZoneResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgRegisterHostZoneResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgRegisterHostZoneResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgRegisterHostZoneResponse) New() protoreflect.Message {
	return new(fastReflection_MsgRegisterHostZoneResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgRegisterHostZoneResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgRegisterHostZoneResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgRegisterHostZoneResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgRegisterHostZoneResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRegisterHostZoneResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRegisterHostZoneResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRegisterHostZoneResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRegisterHostZoneResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRegisterHostZoneResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgRegisterHostZoneResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRegisterHostZoneResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRegisterHostZoneResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRegisterHostZoneResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRegisterHostZoneResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRegisterHostZoneResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRegisterHostZoneResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRegisterHostZoneResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRegisterHostZoneResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgRegisterHostZoneResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRegisterHostZoneResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRegisterHostZoneResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgRegisterHostZoneResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgRegisterHostZoneResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgRegisterHostZoneResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRegisterHostZoneResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgRegisterHostZoneResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgRegisterHostZoneResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgRegisterHostZoneResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgRegisterHostZoneResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgRegisterHostZoneResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRegisterHostZoneResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRegisterHostZoneResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgClaimUndelegatedTokens              protoreflect.MessageDescriptor
	fd_MsgClaimUndelegatedTokens_creator      protoreflect.FieldDescriptor
	fd_MsgClaimUndelegatedTokens_host_zone_id protoreflect.FieldDescriptor
	fd_MsgClaimUndelegatedTokens_epoch        protoreflect.FieldDescriptor
	fd_MsgClaimUndelegatedTokens_receiver     protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgClaimUndelegatedTokens = File_stride_stakeibc_tx_proto.Messages().ByName("MsgClaimUndelegatedTokens")
	fd_MsgClaimUndelegatedTokens_creator = md_MsgClaimUndelegatedTokens.Fields().ByName("creator")
	fd_MsgClaimUndelegatedTokens_host_zone_id = md_MsgClaimUndelegatedTokens.Fields().ByName("host_zone_id")
	fd_MsgClaimUndelegatedTokens_epoch = md_MsgClaimUndelegatedTokens.Fields().ByName("epoch")
	fd_MsgClaimUndelegatedTokens_receiver = md_MsgClaimUndelegatedTokens.Fields().ByName("receiver")
}

var _ protoreflect.Message = (*fastReflection_MsgClaimUndelegatedTokens)(nil)

type fastReflection_MsgClaimUndelegatedTokens MsgClaimUndelegatedTokens

func (x *MsgClaimUndelegatedTokens) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgClaimUndelegatedTokens)(x)
}

func (x *MsgClaimUndelegatedTokens) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgClaimUndelegatedTokens_messageType fastReflection_MsgClaimUndelegatedTokens_messageType
var _ protoreflect.MessageType = fastReflection_MsgClaimUndelegatedTokens_messageType{}

type fastReflection_MsgClaimUndelegatedTokens_messageType struct{}

func (x fastReflection_MsgClaimUndelegatedTokens_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgClaimUndelegatedTokens)(nil)
}
func (x fastReflection_MsgClaimUndelegatedTokens_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgClaimUndelegatedTokens)
}
func (x fastReflection_MsgClaimUndelegatedTokens_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgClaimUndelegatedTokens
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgClaimUndelegatedTokens) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgClaimUndelegatedTokens
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgClaimUndelegatedTokens) Type() protoreflect.MessageType {
	return _fastReflection_MsgClaimUndelegatedTokens_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgClaimUndelegatedTokens) New() protoreflect.Message {
	return new(fastReflection_MsgClaimUndelegatedTokens)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgClaimUndelegatedTokens) Interface() protoreflect.ProtoMessage {
	return (*MsgClaimUndelegatedTokens)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgClaimUndelegatedTokens) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgClaimUndelegatedTokens_creator, value) {
			return
		}
	}
	if x.HostZoneId != "" {
		value := protoreflect.ValueOfString(x.HostZoneId)
		if !f(fd_MsgClaimUndelegatedTokens_host_zone_id, value) {
			return
		}
	}
	if x.Epoch != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Epoch)
		if !f(fd_MsgClaimUndelegatedTokens_epoch, value) {
			return
		}
	}
	if x.Receiver != "" {
		value := protoreflect.ValueOfString(x.Receiver)
		if !f(fd_MsgClaimUndelegatedTokens_receiver, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgClaimUndelegatedTokens) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.MsgClaimUndelegatedTokens.creator":
		return x.Creator != ""
	case "stride.stakeibc.MsgClaimUndelegatedTokens.host_zone_id":
		return x.HostZoneId != ""
	case "stride.stakeibc.MsgClaimUndelegatedTokens.epoch":
		return x.Epoch != uint64(0)
	case "stride.stakeibc.MsgClaimUndelegatedTokens.receiver":
		return x.Receiver != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgClaimUndelegatedTokens"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgClaimUndelegatedTokens does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaimUndelegatedTokens) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgClaimUndelegatedTokens.creator":
		x.Creator = ""
	case "stride.stakeibc.MsgClaimUndelegatedTokens.host_zone_id":
		x.HostZoneId = ""
	case "stride.stakeibc.MsgClaimUndelegatedTokens.epoch":
		x.Epoch = uint64(0)
	case "stride.stakeibc.MsgClaimUndelegatedTokens.receiver":
		x.Receiver = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgClaimUndelegatedTokens"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgClaimUndelegatedTokens does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgClaimUndelegatedTokens) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.MsgClaimUndelegatedTokens.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgClaimUndelegatedTokens.host_zone_id":
		value := x.HostZoneId
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgClaimUndelegatedTokens.epoch":
		value := x.Epoch
		return protoreflect.ValueOfUint64(value)
	case "stride.stakeibc.MsgClaimUndelegatedTokens.receiver":
		value := x.Receiver
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgClaimUndelegatedTokens"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgClaimUndelegatedTokens does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaimUndelegatedTokens) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgClaimUndelegatedTokens.creator":
		x.Creator = value.Interface().(string)
	case "stride.stakeibc.MsgClaimUndelegatedTokens.host_zone_id":
		x.HostZoneId = value.Interface().(string)
	case "stride.stakeibc.MsgClaimUndelegatedTokens.epoch":
		x.Epoch = value.Uint()
	case "stride.stakeibc.MsgClaimUndelegatedTokens.receiver":
		x.Receiver = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgClaimUndelegatedTokens"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgClaimUndelegatedTokens does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaimUndelegatedTokens) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgClaimUndelegatedTokens.creator":
		panic(fmt.Errorf("field creator of message stride.stakeibc.MsgClaimUndelegatedTokens is not mutable"))
	case "stride.stakeibc.MsgClaimUndelegatedTokens.host_zone_id":
		panic(fmt.Errorf("field host_zone_id of message stride.stakeibc.MsgClaimUndelegatedTokens is not mutable"))
	case "stride.stakeibc.MsgClaimUndelegatedTokens.epoch":
		panic(fmt.Errorf("field epoch of message stride.stakeibc.MsgClaimUndelegatedTokens is not mutable"))
	case "stride.stakeibc.MsgClaimUndelegatedTokens.receiver":
		panic(fmt.Errorf("field receiver of message stride.stakeibc.MsgClaimUndelegatedTokens is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgClaimUndelegatedTokens"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgClaimUndelegatedTokens does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgClaimUndelegatedTokens) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgClaimUndelegatedTokens.creator":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgClaimUndelegatedTokens.host_zone_id":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgClaimUndelegatedTokens.epoch":
		return protoreflect.ValueOfUint64(uint64(0))
	case "stride.stakeibc.MsgClaimUndelegatedTokens.receiver":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgClaimUndelegatedTokens"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgClaimUndelegatedTokens does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgClaimUndelegatedTokens) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgClaimUndelegatedTokens", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgClaimUndelegatedTokens) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaimUndelegatedTokens) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgClaimUndelegatedTokens) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgClaimUndelegatedTokens) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgClaimUndelegatedTokens)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.HostZoneId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Epoch != 0 {
			n += 1 + runtime.Sov(uint64(x.Epoch))
		}
		l = len(x.Receiver)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgClaimUndelegatedTokens)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Receiver) > 0 {
			i -= len(x.Receiver)
			copy(dAtA[i:], x.Receiver)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Receiver)))
			i--
			dAtA[i] = 0x2a
		}
		if x.Epoch != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Epoch))
			i--
			dAtA[i] = 0x18
		}
		if len(x.HostZoneId) > 0 {
			i -= len(x.HostZoneId)
			copy(dAtA[i:], x.HostZoneId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HostZoneId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgClaimUndelegatedTokens)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgClaimUndelegatedTokens: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgClaimUndelegatedTokens: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HostZoneId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HostZoneId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Epoch", wireType)
				}
				x.Epoch = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Epoch |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Receiver = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgClaimUndelegatedTokensResponse protoreflect.MessageDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgClaimUndelegatedTokensResponse = File_stride_stakeibc_tx_proto.Messages().ByName("MsgClaimUndelegatedTokensResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgClaimUndelegatedTokensResponse)(nil)

type fastReflection_MsgClaimUndelegatedTokensResponse MsgClaimUndelegatedTokensResponse

func (x *MsgClaimUndelegatedTokensResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgClaimUndelegatedTokensResponse)(x)
}

func (x *MsgClaimUndelegatedTokensResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgClaimUndelegatedTokensResponse_messageType fastReflection_MsgClaimUndelegatedTokensResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgClaimUndelegatedTokensResponse_messageType{}

type fastReflection_MsgClaimUndelegatedTokensResponse_messageType struct{}

func (x fastReflection_MsgClaimUndelegatedTokensResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgClaimUndelegatedTokensResponse)(nil)
}
func (x fastReflection_MsgClaimUndelegatedTokensResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgClaimUndelegatedTokensResponse)
}
func (x fastReflection_MsgClaimUndelegatedTokensResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgClaimUndelegatedTokensResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgClaimUndelegatedTokensResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgClaimUndelegatedTokensResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgClaimUndelegatedTokensResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgClaimUndelegatedTokensResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgClaimUndelegatedTokensResponse) New() protoreflect.Message {
	return new(fastReflection_MsgClaimUndelegatedTokensResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgClaimUndelegatedTokensResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgClaimUndelegatedTokensResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgClaimUndelegatedTokensResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgClaimUndelegatedTokensResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgClaimUndelegatedTokensResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgClaimUndelegatedTokensResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaimUndelegatedTokensResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgClaimUndelegatedTokensResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgClaimUndelegatedTokensResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgClaimUndelegatedTokensResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgClaimUndelegatedTokensResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgClaimUndelegatedTokensResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaimUndelegatedTokensResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgClaimUndelegatedTokensResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgClaimUndelegatedTokensResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaimUndelegatedTokensResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgClaimUndelegatedTokensResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgClaimUndelegatedTokensResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgClaimUndelegatedTokensResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgClaimUndelegatedTokensResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgClaimUndelegatedTokensResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgClaimUndelegatedTokensResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgClaimUndelegatedTokensResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgClaimUndelegatedTokensResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaimUndelegatedTokensResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgClaimUndelegatedTokensResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgClaimUndelegatedTokensResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgClaimUndelegatedTokensResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgClaimUndelegatedTokensResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgClaimUndelegatedTokensResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgClaimUndelegatedTokensResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgClaimUndelegatedTokensResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgRebalanceValidators               protoreflect.MessageDescriptor
	fd_MsgRebalanceValidators_creator       protoreflect.FieldDescriptor
	fd_MsgRebalanceValidators_host_zone     protoreflect.FieldDescriptor
	fd_MsgRebalanceValidators_num_rebalance protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgRebalanceValidators = File_stride_stakeibc_tx_proto.Messages().ByName("MsgRebalanceValidators")
	fd_MsgRebalanceValidators_creator = md_MsgRebalanceValidators.Fields().ByName("creator")
	fd_MsgRebalanceValidators_host_zone = md_MsgRebalanceValidators.Fields().ByName("host_zone")
	fd_MsgRebalanceValidators_num_rebalance = md_MsgRebalanceValidators.Fields().ByName("num_rebalance")
}

var _ protoreflect.Message = (*fastReflection_MsgRebalanceValidators)(nil)

type fastReflection_MsgRebalanceValidators MsgRebalanceValidators

func (x *MsgRebalanceValidators) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgRebalanceValidators)(x)
}

func (x *MsgRebalanceValidators) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgRebalanceValidators_messageType fastReflection_MsgRebalanceValidators_messageType
var _ protoreflect.MessageType = fastReflection_MsgRebalanceValidators_messageType{}

type fastReflection_MsgRebalanceValidators_messageType struct{}

func (x fastReflection_MsgRebalanceValidators_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgRebalanceValidators)(nil)
}
func (x fastReflection_MsgRebalanceValidators_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgRebalanceValidators)
}
func (x fastReflection_MsgRebalanceValidators_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRebalanceValidators
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgRebalanceValidators) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRebalanceValidators
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgRebalanceValidators) Type() protoreflect.MessageType {
	return _fastReflection_MsgRebalanceValidators_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgRebalanceValidators) New() protoreflect.Message {
	return new(fastReflection_MsgRebalanceValidators)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgRebalanceValidators) Interface() protoreflect.ProtoMessage {
	return (*MsgRebalanceValidators)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgRebalanceValidators) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgRebalanceValidators_creator, value) {
			return
		}
	}
	if x.HostZone != "" {
		value := protoreflect.ValueOfString(x.HostZone)
		if !f(fd_MsgRebalanceValidators_host_zone, value) {
			return
		}
	}
	if x.NumRebalance != uint64(0) {
		value := protoreflect.ValueOfUint64(x.NumRebalance)
		if !f(fd_MsgRebalanceValidators_num_rebalance, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgRebalanceValidators) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.MsgRebalanceValidators.creator":
		return x.Creator != ""
	case "stride.stakeibc.MsgRebalanceValidators.host_zone":
		return x.HostZone != ""
	case "stride.stakeibc.MsgRebalanceValidators.num_rebalance":
		return x.NumRebalance != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRebalanceValidators"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRebalanceValidators does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRebalanceValidators) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgRebalanceValidators.creator":
		x.Creator = ""
	case "stride.stakeibc.MsgRebalanceValidators.host_zone":
		x.HostZone = ""
	case "stride.stakeibc.MsgRebalanceValidators.num_rebalance":
		x.NumRebalance = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRebalanceValidators"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRebalanceValidators does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgRebalanceValidators) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.MsgRebalanceValidators.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgRebalanceValidators.host_zone":
		value := x.HostZone
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgRebalanceValidators.num_rebalance":
		value := x.NumRebalance
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRebalanceValidators"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRebalanceValidators does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRebalanceValidators) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgRebalanceValidators.creator":
		x.Creator = value.Interface().(string)
	case "stride.stakeibc.MsgRebalanceValidators.host_zone":
		x.HostZone = value.Interface().(string)
	case "stride.stakeibc.MsgRebalanceValidators.num_rebalance":
		x.NumRebalance = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRebalanceValidators"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRebalanceValidators does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRebalanceValidators) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgRebalanceValidators.creator":
		panic(fmt.Errorf("field creator of message stride.stakeibc.MsgRebalanceValidators is not mutable"))
	case "stride.stakeibc.MsgRebalanceValidators.host_zone":
		panic(fmt.Errorf("field host_zone of message stride.stakeibc.MsgRebalanceValidators is not mutable"))
	case "stride.stakeibc.MsgRebalanceValidators.num_rebalance":
		panic(fmt.Errorf("field num_rebalance of message stride.stakeibc.MsgRebalanceValidators is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRebalanceValidators"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRebalanceValidators does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgRebalanceValidators) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgRebalanceValidators.creator":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgRebalanceValidators.host_zone":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgRebalanceValidators.num_rebalance":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRebalanceValidators"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRebalanceValidators does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgRebalanceValidators) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgRebalanceValidators", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgRebalanceValidators) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRebalanceValidators) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgRebalanceValidators) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgRebalanceValidators) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgRebalanceValidators)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.HostZone)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.NumRebalance != 0 {
			n += 1 + runtime.Sov(uint64(x.NumRebalance))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgRebalanceValidators)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.NumRebalance != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.NumRebalance))
			i--
			dAtA[i] = 0x18
		}
		if len(x.HostZone) > 0 {
			i -= len(x.HostZone)
			copy(dAtA[i:], x.HostZone)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HostZone)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgRebalanceValidators)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRebalanceValidators: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRebalanceValidators: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HostZone", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HostZone = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NumRebalance", wireType)
				}
				x.NumRebalance = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.NumRebalance |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgRebalanceValidatorsResponse protoreflect.MessageDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgRebalanceValidatorsResponse = File_stride_stakeibc_tx_proto.Messages().ByName("MsgRebalanceValidatorsResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgRebalanceValidatorsResponse)(nil)

type fastReflection_MsgRebalanceValidatorsResponse MsgRebalanceValidatorsResponse

func (x *MsgRebalanceValidatorsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgRebalanceValidatorsResponse)(x)
}

func (x *MsgRebalanceValidatorsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgRebalanceValidatorsResponse_messageType fastReflection_MsgRebalanceValidatorsResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgRebalanceValidatorsResponse_messageType{}

type fastReflection_MsgRebalanceValidatorsResponse_messageType struct{}

func (x fastReflection_MsgRebalanceValidatorsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgRebalanceValidatorsResponse)(nil)
}
func (x fastReflection_MsgRebalanceValidatorsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgRebalanceValidatorsResponse)
}
func (x fastReflection_MsgRebalanceValidatorsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRebalanceValidatorsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgRebalanceValidatorsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRebalanceValidatorsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgRebalanceValidatorsResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgRebalanceValidatorsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgRebalanceValidatorsResponse) New() protoreflect.Message {
	return new(fastReflection_MsgRebalanceValidatorsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgRebalanceValidatorsResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgRebalanceValidatorsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgRebalanceValidatorsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgRebalanceValidatorsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRebalanceValidatorsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRebalanceValidatorsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRebalanceValidatorsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRebalanceValidatorsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRebalanceValidatorsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgRebalanceValidatorsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRebalanceValidatorsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRebalanceValidatorsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRebalanceValidatorsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRebalanceValidatorsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRebalanceValidatorsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRebalanceValidatorsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRebalanceValidatorsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRebalanceValidatorsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgRebalanceValidatorsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRebalanceValidatorsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRebalanceValidatorsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgRebalanceValidatorsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgRebalanceValidatorsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgRebalanceValidatorsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRebalanceValidatorsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgRebalanceValidatorsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgRebalanceValidatorsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgRebalanceValidatorsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgRebalanceValidatorsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgRebalanceValidatorsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRebalanceValidatorsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRebalanceValidatorsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgAddValidators_3_list)(nil)

type _MsgAddValidators_3_list struct {
	list *[]*Validator
}

func (x *_MsgAddValidators_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgAddValidators_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgAddValidators_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Validator)
	(*x.list)[i] = concreteValue
}

func (x *_MsgAddValidators_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Validator)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgAddValidators_3_list) AppendMutable() protoreflect.Value {
	v := new(Validator)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgAddValidators_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgAddValidators_3_list) NewElement() protoreflect.Value {
	v := new(Validator)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgAddValidators_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgAddValidators            protoreflect.MessageDescriptor
	fd_MsgAddValidators_creator    protoreflect.FieldDescriptor
	fd_MsgAddValidators_host_zone  protoreflect.FieldDescriptor
	fd_MsgAddValidators_validators protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgAddValidators = File_stride_stakeibc_tx_proto.Messages().ByName("MsgAddValidators")
	fd_MsgAddValidators_creator = md_MsgAddValidators.Fields().ByName("creator")
	fd_MsgAddValidators_host_zone = md_MsgAddValidators.Fields().ByName("host_zone")
	fd_MsgAddValidators_validators = md_MsgAddValidators.Fields().ByName("validators")
}

var _ protoreflect.Message = (*fastReflection_MsgAddValidators)(nil)

type fastReflection_MsgAddValidators MsgAddValidators

func (x *MsgAddValidators) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgAddValidators)(x)
}

func (x *MsgAddValidators) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgAddValidators_messageType fastReflection_MsgAddValidators_messageType
var _ protoreflect.MessageType = fastReflection_MsgAddValidators_messageType{}

type fastReflection_MsgAddValidators_messageType struct{}

func (x fastReflection_MsgAddValidators_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgAddValidators)(nil)
}
func (x fastReflection_MsgAddValidators_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgAddValidators)
}
func (x fastReflection_MsgAddValidators_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAddValidators
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgAddValidators) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAddValidators
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgAddValidators) Type() protoreflect.MessageType {
	return _fastReflection_MsgAddValidators_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgAddValidators) New() protoreflect.Message {
	return new(fastReflection_MsgAddValidators)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgAddValidators) Interface() protoreflect.ProtoMessage {
	return (*MsgAddValidators)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgAddValidators) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgAddValidators_creator, value) {
			return
		}
	}
	if x.HostZone != "" {
		value := protoreflect.ValueOfString(x.HostZone)
		if !f(fd_MsgAddValidators_host_zone, value) {
			return
		}
	}
	if len(x.Validators) != 0 {
		value := protoreflect.ValueOfList(&_MsgAddValidators_3_list{list: &x.Validators})
		if !f(fd_MsgAddValidators_validators, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgAddValidators) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.MsgAddValidators.creator":
		return x.Creator != ""
	case "stride.stakeibc.MsgAddValidators.host_zone":
		return x.HostZone != ""
	case "stride.stakeibc.MsgAddValidators.validators":
		return len(x.Validators) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgAddValidators"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgAddValidators does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddValidators) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgAddValidators.creator":
		x.Creator = ""
	case "stride.stakeibc.MsgAddValidators.host_zone":
		x.HostZone = ""
	case "stride.stakeibc.MsgAddValidators.validators":
		x.Validators = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgAddValidators"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgAddValidators does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgAddValidators) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.MsgAddValidators.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgAddValidators.host_zone":
		value := x.HostZone
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgAddValidators.validators":
		if len(x.Validators) == 0 {
			return protoreflect.ValueOfList(&_MsgAddValidators_3_list{})
		}
		listValue := &_MsgAddValidators_3_list{list: &x.Validators}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgAddValidators"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgAddValidators does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddValidators) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgAddValidators.creator":
		x.Creator = value.Interface().(string)
	case "stride.stakeibc.MsgAddValidators.host_zone":
		x.HostZone = value.Interface().(string)
	case "stride.stakeibc.MsgAddValidators.validators":
		lv := value.List()
		clv := lv.(*_MsgAddValidators_3_list)
		x.Validators = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgAddValidators"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgAddValidators does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddValidators) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgAddValidators.validators":
		if x.Validators == nil {
			x.Validators = []*Validator{}
		}
		value := &_MsgAddValidators_3_list{list: &x.Validators}
		return protoreflect.ValueOfList(value)
	case "stride.stakeibc.MsgAddValidators.creator":
		panic(fmt.Errorf("field creator of message stride.stakeibc.MsgAddValidators is not mutable"))
	case "stride.stakeibc.MsgAddValidators.host_zone":
		panic(fmt.Errorf("field host_zone of message stride.stakeibc.MsgAddValidators is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgAddValidators"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgAddValidators does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgAddValidators) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgAddValidators.creator":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgAddValidators.host_zone":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgAddValidators.validators":
		list := []*Validator{}
		return protoreflect.ValueOfList(&_MsgAddValidators_3_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgAddValidators"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgAddValidators does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgAddValidators) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgAddValidators", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgAddValidators) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddValidators) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgAddValidators) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgAddValidators) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgAddValidators)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.HostZone)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Validators) > 0 {
			for _, e := range x.Validators {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgAddValidators)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Validators) > 0 {
			for iNdEx := len(x.Validators) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Validators[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.HostZone) > 0 {
			i -= len(x.HostZone)
			copy(dAtA[i:], x.HostZone)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HostZone)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgAddValidators)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAddValidators: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAddValidators: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HostZone", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HostZone = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Validators", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Validators = append(x.Validators, &Validator{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Validators[len(x.Validators)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgAddValidatorsResponse protoreflect.MessageDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgAddValidatorsResponse = File_stride_stakeibc_tx_proto.Messages().ByName("MsgAddValidatorsResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgAddValidatorsResponse)(nil)

type fastReflection_MsgAddValidatorsResponse MsgAddValidatorsResponse

func (x *MsgAddValidatorsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgAddValidatorsResponse)(x)
}

func (x *MsgAddValidatorsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgAddValidatorsResponse_messageType fastReflection_MsgAddValidatorsResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgAddValidatorsResponse_messageType{}

type fastReflection_MsgAddValidatorsResponse_messageType struct{}

func (x fastReflection_MsgAddValidatorsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgAddValidatorsResponse)(nil)
}
func (x fastReflection_MsgAddValidatorsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgAddValidatorsResponse)
}
func (x fastReflection_MsgAddValidatorsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAddValidatorsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgAddValidatorsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAddValidatorsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgAddValidatorsResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgAddValidatorsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgAddValidatorsResponse) New() protoreflect.Message {
	return new(fastReflection_MsgAddValidatorsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgAddValidatorsResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgAddValidatorsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgAddValidatorsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgAddValidatorsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgAddValidatorsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgAddValidatorsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddValidatorsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgAddValidatorsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgAddValidatorsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgAddValidatorsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgAddValidatorsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgAddValidatorsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddValidatorsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgAddValidatorsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgAddValidatorsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddValidatorsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgAddValidatorsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgAddValidatorsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgAddValidatorsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgAddValidatorsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgAddValidatorsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgAddValidatorsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgAddValidatorsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgAddValidatorsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddValidatorsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgAddValidatorsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgAddValidatorsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgAddValidatorsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgAddValidatorsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgAddValidatorsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAddValidatorsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAddValidatorsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ValidatorWeight         protoreflect.MessageDescriptor
	fd_ValidatorWeight_address protoreflect.FieldDescriptor
	fd_ValidatorWeight_weight  protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_ValidatorWeight = File_stride_stakeibc_tx_proto.Messages().ByName("ValidatorWeight")
	fd_ValidatorWeight_address = md_ValidatorWeight.Fields().ByName("address")
	fd_ValidatorWeight_weight = md_ValidatorWeight.Fields().ByName("weight")
}

var _ protoreflect.Message = (*fastReflection_ValidatorWeight)(nil)

type fastReflection_ValidatorWeight ValidatorWeight

func (x *ValidatorWeight) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ValidatorWeight)(x)
}

func (x *ValidatorWeight) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ValidatorWeight_messageType fastReflection_ValidatorWeight_messageType
var _ protoreflect.MessageType = fastReflection_ValidatorWeight_messageType{}

type fastReflection_ValidatorWeight_messageType struct{}

func (x fastReflection_ValidatorWeight_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ValidatorWeight)(nil)
}
func (x fastReflection_ValidatorWeight_messageType) New() protoreflect.Message {
	return new(fastReflection_ValidatorWeight)
}
func (x fastReflection_ValidatorWeight_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ValidatorWeight
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ValidatorWeight) Descriptor() protoreflect.MessageDescriptor {
	return md_ValidatorWeight
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ValidatorWeight) Type() protoreflect.MessageType {
	return _fastReflection_ValidatorWeight_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ValidatorWeight) New() protoreflect.Message {
	return new(fastReflection_ValidatorWeight)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ValidatorWeight) Interface() protoreflect.ProtoMessage {
	return (*ValidatorWeight)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ValidatorWeight) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_ValidatorWeight_address, value) {
			return
		}
	}
	if x.Weight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Weight)
		if !f(fd_ValidatorWeight_weight, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ValidatorWeight) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.ValidatorWeight.address":
		return x.Address != ""
	case "stride.stakeibc.ValidatorWeight.weight":
		return x.Weight != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.ValidatorWeight"))
		}
		panic(fmt.Errorf("message stride.stakeibc.ValidatorWeight does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidatorWeight) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.ValidatorWeight.address":
		x.Address = ""
	case "stride.stakeibc.ValidatorWeight.weight":
		x.Weight = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.ValidatorWeight"))
		}
		panic(fmt.Errorf("message stride.stakeibc.ValidatorWeight does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ValidatorWeight) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.ValidatorWeight.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.ValidatorWeight.weight":
		value := x.Weight
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.ValidatorWeight"))
		}
		panic(fmt.Errorf("message stride.stakeibc.ValidatorWeight does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidatorWeight) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.ValidatorWeight.address":
		x.Address = value.Interface().(string)
	case "stride.stakeibc.ValidatorWeight.weight":
		x.Weight = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.ValidatorWeight"))
		}
		panic(fmt.Errorf("message stride.stakeibc.ValidatorWeight does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidatorWeight) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.ValidatorWeight.address":
		panic(fmt.Errorf("field address of message stride.stakeibc.ValidatorWeight is not mutable"))
	case "stride.stakeibc.ValidatorWeight.weight":
		panic(fmt.Errorf("field weight of message stride.stakeibc.ValidatorWeight is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.ValidatorWeight"))
		}
		panic(fmt.Errorf("message stride.stakeibc.ValidatorWeight does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ValidatorWeight) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.ValidatorWeight.address":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.ValidatorWeight.weight":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.ValidatorWeight"))
		}
		panic(fmt.Errorf("message stride.stakeibc.ValidatorWeight does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ValidatorWeight) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.ValidatorWeight", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ValidatorWeight) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidatorWeight) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ValidatorWeight) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ValidatorWeight) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ValidatorWeight)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Weight != 0 {
			n += 1 + runtime.Sov(uint64(x.Weight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ValidatorWeight)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Weight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Weight))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ValidatorWeight)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValidatorWeight: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValidatorWeight: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Weight", wireType)
				}
				x.Weight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Weight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgChangeValidatorWeights_3_list)(nil)

type _MsgChangeValidatorWeights_3_list struct {
	list *[]*ValidatorWeight
}

func (x *_MsgChangeValidatorWeights_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgChangeValidatorWeights_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgChangeValidatorWeights_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ValidatorWeight)
	(*x.list)[i] = concreteValue
}

func (x *_MsgChangeValidatorWeights_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ValidatorWeight)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgChangeValidatorWeights_3_list) AppendMutable() protoreflect.Value {
	v := new(ValidatorWeight)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgChangeValidatorWeights_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgChangeValidatorWeights_3_list) NewElement() protoreflect.Value {
	v := new(ValidatorWeight)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgChangeValidatorWeights_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgChangeValidatorWeights                   protoreflect.MessageDescriptor
	fd_MsgChangeValidatorWeights_creator           protoreflect.FieldDescriptor
	fd_MsgChangeValidatorWeights_host_zone         protoreflect.FieldDescriptor
	fd_MsgChangeValidatorWeights_validator_weights protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgChangeValidatorWeights = File_stride_stakeibc_tx_proto.Messages().ByName("MsgChangeValidatorWeights")
	fd_MsgChangeValidatorWeights_creator = md_MsgChangeValidatorWeights.Fields().ByName("creator")
	fd_MsgChangeValidatorWeights_host_zone = md_MsgChangeValidatorWeights.Fields().ByName("host_zone")
	fd_MsgChangeValidatorWeights_validator_weights = md_MsgChangeValidatorWeights.Fields().ByName("validator_weights")
}

var _ protoreflect.Message = (*fastReflection_MsgChangeValidatorWeights)(nil)

type fastReflection_MsgChangeValidatorWeights MsgChangeValidatorWeights

func (x *MsgChangeValidatorWeights) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChangeValidatorWeights)(x)
}

func (x *MsgChangeValidatorWeights) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChangeValidatorWeights_messageType fastReflection_MsgChangeValidatorWeights_messageType
var _ protoreflect.MessageType = fastReflection_MsgChangeValidatorWeights_messageType{}

type fastReflection_MsgChangeValidatorWeights_messageType struct{}

func (x fastReflection_MsgChangeValidatorWeights_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChangeValidatorWeights)(nil)
}
func (x fastReflection_MsgChangeValidatorWeights_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChangeValidatorWeights)
}
func (x fastReflection_MsgChangeValidatorWeights_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChangeValidatorWeights
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChangeValidatorWeights) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChangeValidatorWeights
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChangeValidatorWeights) Type() protoreflect.MessageType {
	return _fastReflection_MsgChangeValidatorWeights_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChangeValidatorWeights) New() protoreflect.Message {
	return new(fastReflection_MsgChangeValidatorWeights)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChangeValidatorWeights) Interface() protoreflect.ProtoMessage {
	return (*MsgChangeValidatorWeights)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChangeValidatorWeights) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgChangeValidatorWeights_creator, value) {
			return
		}
	}
	if x.HostZone != "" {
		value := protoreflect.ValueOfString(x.HostZone)
		if !f(fd_MsgChangeValidatorWeights_host_zone, value) {
			return
		}
	}
	if len(x.ValidatorWeights) != 0 {
		value := protoreflect.ValueOfList(&_MsgChangeValidatorWeights_3_list{list: &x.ValidatorWeights})
		if !f(fd_MsgChangeValidatorWeights_validator_weights, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChangeValidatorWeights) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.MsgChangeValidatorWeights.creator":
		return x.Creator != ""
	case "stride.stakeibc.MsgChangeValidatorWeights.host_zone":
		return x.HostZone != ""
	case "stride.stakeibc.MsgChangeValidatorWeights.validator_weights":
		return len(x.ValidatorWeights) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgChangeValidatorWeights"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgChangeValidatorWeights does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChangeValidatorWeights) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgChangeValidatorWeights.creator":
		x.Creator = ""
	case "stride.stakeibc.MsgChangeValidatorWeights.host_zone":
		x.HostZone = ""
	case "stride.stakeibc.MsgChangeValidatorWeights.validator_weights":
		x.ValidatorWeights = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgChangeValidatorWeights"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgChangeValidatorWeights does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChangeValidatorWeights) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.MsgChangeValidatorWeights.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgChangeValidatorWeights.host_zone":
		value := x.HostZone
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgChangeValidatorWeights.validator_weights":
		if len(x.ValidatorWeights) == 0 {
			return protoreflect.ValueOfList(&_MsgChangeValidatorWeights_3_list{})
		}
		listValue := &_MsgChangeValidatorWeights_3_list{list: &x.ValidatorWeights}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgChangeValidatorWeights"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgChangeValidatorWeights does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChangeValidatorWeights) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgChangeValidatorWeights.creator":
		x.Creator = value.Interface().(string)
	case "stride.stakeibc.MsgChangeValidatorWeights.host_zone":
		x.HostZone = value.Interface().(string)
	case "stride.stakeibc.MsgChangeValidatorWeights.validator_weights":
		lv := value.List()
		clv := lv.(*_MsgChangeValidatorWeights_3_list)
		x.ValidatorWeights = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgChangeValidatorWeights"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgChangeValidatorWeights does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChangeValidatorWeights) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgChangeValidatorWeights.validator_weights":
		if x.ValidatorWeights == nil {
			x.ValidatorWeights = []*ValidatorWeight{}
		}
		value := &_MsgChangeValidatorWeights_3_list{list: &x.ValidatorWeights}
		return protoreflect.ValueOfList(value)
	case "stride.stakeibc.MsgChangeValidatorWeights.creator":
		panic(fmt.Errorf("field creator of message stride.stakeibc.MsgChangeValidatorWeights is not mutable"))
	case "stride.stakeibc.MsgChangeValidatorWeights.host_zone":
		panic(fmt.Errorf("field host_zone of message stride.stakeibc.MsgChangeValidatorWeights is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgChangeValidatorWeights"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgChangeValidatorWeights does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChangeValidatorWeights) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgChangeValidatorWeights.creator":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgChangeValidatorWeights.host_zone":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgChangeValidatorWeights.validator_weights":
		list := []*ValidatorWeight{}
		return protoreflect.ValueOfList(&_MsgChangeValidatorWeights_3_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgChangeValidatorWeights"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgChangeValidatorWeights does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChangeValidatorWeights) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgChangeValidatorWeights", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChangeValidatorWeights) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChangeValidatorWeights) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChangeValidatorWeights) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChangeValidatorWeights) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChangeValidatorWeights)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.HostZone)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.ValidatorWeights) > 0 {
			for _, e := range x.ValidatorWeights {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChangeValidatorWeights)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ValidatorWeights) > 0 {
			for iNdEx := len(x.ValidatorWeights) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ValidatorWeights[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.HostZone) > 0 {
			i -= len(x.HostZone)
			copy(dAtA[i:], x.HostZone)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HostZone)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChangeValidatorWeights)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChangeValidatorWeights: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChangeValidatorWeights: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HostZone", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HostZone = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValidatorWeights", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ValidatorWeights = append(x.ValidatorWeights, &ValidatorWeight{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ValidatorWeights[len(x.ValidatorWeights)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgChangeValidatorWeightsResponse protoreflect.MessageDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgChangeValidatorWeightsResponse = File_stride_stakeibc_tx_proto.Messages().ByName("MsgChangeValidatorWeightsResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgChangeValidatorWeightsResponse)(nil)

type fastReflection_MsgChangeValidatorWeightsResponse MsgChangeValidatorWeightsResponse

func (x *MsgChangeValidatorWeightsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChangeValidatorWeightsResponse)(x)
}

func (x *MsgChangeValidatorWeightsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChangeValidatorWeightsResponse_messageType fastReflection_MsgChangeValidatorWeightsResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgChangeValidatorWeightsResponse_messageType{}

type fastReflection_MsgChangeValidatorWeightsResponse_messageType struct{}

func (x fastReflection_MsgChangeValidatorWeightsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChangeValidatorWeightsResponse)(nil)
}
func (x fastReflection_MsgChangeValidatorWeightsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChangeValidatorWeightsResponse)
}
func (x fastReflection_MsgChangeValidatorWeightsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChangeValidatorWeightsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChangeValidatorWeightsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChangeValidatorWeightsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChangeValidatorWeightsResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgChangeValidatorWeightsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChangeValidatorWeightsResponse) New() protoreflect.Message {
	return new(fastReflection_MsgChangeValidatorWeightsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChangeValidatorWeightsResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgChangeValidatorWeightsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChangeValidatorWeightsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChangeValidatorWeightsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgChangeValidatorWeightsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgChangeValidatorWeightsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChangeValidatorWeightsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgChangeValidatorWeightsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgChangeValidatorWeightsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChangeValidatorWeightsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgChangeValidatorWeightsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgChangeValidatorWeightsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChangeValidatorWeightsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgChangeValidatorWeightsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgChangeValidatorWeightsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChangeValidatorWeightsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgChangeValidatorWeightsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgChangeValidatorWeightsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChangeValidatorWeightsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgChangeValidatorWeightsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgChangeValidatorWeightsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChangeValidatorWeightsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgChangeValidatorWeightsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChangeValidatorWeightsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChangeValidatorWeightsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChangeValidatorWeightsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChangeValidatorWeightsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChangeValidatorWeightsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChangeValidatorWeightsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChangeValidatorWeightsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChangeValidatorWeightsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChangeValidatorWeightsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgDeleteValidator           protoreflect.MessageDescriptor
	fd_MsgDeleteValidator_creator   protoreflect.FieldDescriptor
	fd_MsgDeleteValidator_host_zone protoreflect.FieldDescriptor
	fd_MsgDeleteValidator_val_addr  protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgDeleteValidator = File_stride_stakeibc_tx_proto.Messages().ByName("MsgDeleteValidator")
	fd_MsgDeleteValidator_creator = md_MsgDeleteValidator.Fields().ByName("creator")
	fd_MsgDeleteValidator_host_zone = md_MsgDeleteValidator.Fields().ByName("host_zone")
	fd_MsgDeleteValidator_val_addr = md_MsgDeleteValidator.Fields().ByName("val_addr")
}

var _ protoreflect.Message = (*fastReflection_MsgDeleteValidator)(nil)

type fastReflection_MsgDeleteValidator MsgDeleteValidator

func (x *MsgDeleteValidator) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgDeleteValidator)(x)
}

func (x *MsgDeleteValidator) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgDeleteValidator_messageType fastReflection_MsgDeleteValidator_messageType
var _ protoreflect.MessageType = fastReflection_MsgDeleteValidator_messageType{}

type fastReflection_MsgDeleteValidator_messageType struct{}

func (x fastReflection_MsgDeleteValidator_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgDeleteValidator)(nil)
}
func (x fastReflection_MsgDeleteValidator_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgDeleteValidator)
}
func (x fastReflection_MsgDeleteValidator_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgDeleteValidator
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgDeleteValidator) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgDeleteValidator
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgDeleteValidator) Type() protoreflect.MessageType {
	return _fastReflection_MsgDeleteValidator_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgDeleteValidator) New() protoreflect.Message {
	return new(fastReflection_MsgDeleteValidator)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgDeleteValidator) Interface() protoreflect.ProtoMessage {
	return (*MsgDeleteValidator)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgDeleteValidator) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgDeleteValidator_creator, value) {
			return
		}
	}
	if x.HostZone != "" {
		value := protoreflect.ValueOfString(x.HostZone)
		if !f(fd_MsgDeleteValidator_host_zone, value) {
			return
		}
	}
	if x.ValAddr != "" {
		value := protoreflect.ValueOfString(x.ValAddr)
		if !f(fd_MsgDeleteValidator_val_addr, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgDeleteValidator) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.MsgDeleteValidator.creator":
		return x.Creator != ""
	case "stride.stakeibc.MsgDeleteValidator.host_zone":
		return x.HostZone != ""
	case "stride.stakeibc.MsgDeleteValidator.val_addr":
		return x.ValAddr != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgDeleteValidator"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgDeleteValidator does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteValidator) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgDeleteValidator.creator":
		x.Creator = ""
	case "stride.stakeibc.MsgDeleteValidator.host_zone":
		x.HostZone = ""
	case "stride.stakeibc.MsgDeleteValidator.val_addr":
		x.ValAddr = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgDeleteValidator"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgDeleteValidator does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgDeleteValidator) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.MsgDeleteValidator.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgDeleteValidator.host_zone":
		value := x.HostZone
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgDeleteValidator.val_addr":
		value := x.ValAddr
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgDeleteValidator"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgDeleteValidator does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteValidator) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgDeleteValidator.creator":
		x.Creator = value.Interface().(string)
	case "stride.stakeibc.MsgDeleteValidator.host_zone":
		x.HostZone = value.Interface().(string)
	case "stride.stakeibc.MsgDeleteValidator.val_addr":
		x.ValAddr = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgDeleteValidator"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgDeleteValidator does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteValidator) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgDeleteValidator.creator":
		panic(fmt.Errorf("field creator of message stride.stakeibc.MsgDeleteValidator is not mutable"))
	case "stride.stakeibc.MsgDeleteValidator.host_zone":
		panic(fmt.Errorf("field host_zone of message stride.stakeibc.MsgDeleteValidator is not mutable"))
	case "stride.stakeibc.MsgDeleteValidator.val_addr":
		panic(fmt.Errorf("field val_addr of message stride.stakeibc.MsgDeleteValidator is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgDeleteValidator"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgDeleteValidator does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgDeleteValidator) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgDeleteValidator.creator":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgDeleteValidator.host_zone":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgDeleteValidator.val_addr":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgDeleteValidator"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgDeleteValidator does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgDeleteValidator) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgDeleteValidator", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgDeleteValidator) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteValidator) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgDeleteValidator) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgDeleteValidator) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgDeleteValidator)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.HostZone)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ValAddr)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgDeleteValidator)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ValAddr) > 0 {
			i -= len(x.ValAddr)
			copy(dAtA[i:], x.ValAddr)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ValAddr)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.HostZone) > 0 {
			i -= len(x.HostZone)
			copy(dAtA[i:], x.HostZone)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HostZone)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgDeleteValidator)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgDeleteValidator: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgDeleteValidator: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HostZone", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HostZone = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValAddr", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ValAddr = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgDeleteValidatorResponse protoreflect.MessageDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgDeleteValidatorResponse = File_stride_stakeibc_tx_proto.Messages().ByName("MsgDeleteValidatorResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgDeleteValidatorResponse)(nil)

type fastReflection_MsgDeleteValidatorResponse MsgDeleteValidatorResponse

func (x *MsgDeleteValidatorResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgDeleteValidatorResponse)(x)
}

func (x *MsgDeleteValidatorResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgDeleteValidatorResponse_messageType fastReflection_MsgDeleteValidatorResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgDeleteValidatorResponse_messageType{}

type fastReflection_MsgDeleteValidatorResponse_messageType struct{}

func (x fastReflection_MsgDeleteValidatorResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgDeleteValidatorResponse)(nil)
}
func (x fastReflection_MsgDeleteValidatorResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgDeleteValidatorResponse)
}
func (x fastReflection_MsgDeleteValidatorResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgDeleteValidatorResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgDeleteValidatorResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgDeleteValidatorResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgDeleteValidatorResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgDeleteValidatorResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgDeleteValidatorResponse) New() protoreflect.Message {
	return new(fastReflection_MsgDeleteValidatorResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgDeleteValidatorResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgDeleteValidatorResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgDeleteValidatorResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgDeleteValidatorResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgDeleteValidatorResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgDeleteValidatorResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteValidatorResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgDeleteValidatorResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgDeleteValidatorResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgDeleteValidatorResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgDeleteValidatorResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgDeleteValidatorResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteValidatorResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgDeleteValidatorResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgDeleteValidatorResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteValidatorResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgDeleteValidatorResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgDeleteValidatorResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgDeleteValidatorResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgDeleteValidatorResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgDeleteValidatorResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgDeleteValidatorResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgDeleteValidatorResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgDeleteValidatorResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteValidatorResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgDeleteValidatorResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgDeleteValidatorResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgDeleteValidatorResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgDeleteValidatorResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgDeleteValidatorResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgDeleteValidatorResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgDeleteValidatorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgRestoreInterchainAccount               protoreflect.MessageDescriptor
	fd_MsgRestoreInterchainAccount_creator       protoreflect.FieldDescriptor
	fd_MsgRestoreInterchainAccount_chain_id      protoreflect.FieldDescriptor
	fd_MsgRestoreInterchainAccount_connection_id protoreflect.FieldDescriptor
	fd_MsgRestoreInterchainAccount_account_owner protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgRestoreInterchainAccount = File_stride_stakeibc_tx_proto.Messages().ByName("MsgRestoreInterchainAccount")
	fd_MsgRestoreInterchainAccount_creator = md_MsgRestoreInterchainAccount.Fields().ByName("creator")
	fd_MsgRestoreInterchainAccount_chain_id = md_MsgRestoreInterchainAccount.Fields().ByName("chain_id")
	fd_MsgRestoreInterchainAccount_connection_id = md_MsgRestoreInterchainAccount.Fields().ByName("connection_id")
	fd_MsgRestoreInterchainAccount_account_owner = md_MsgRestoreInterchainAccount.Fields().ByName("account_owner")
}

var _ protoreflect.Message = (*fastReflection_MsgRestoreInterchainAccount)(nil)

type fastReflection_MsgRestoreInterchainAccount MsgRestoreInterchainAccount

func (x *MsgRestoreInterchainAccount) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgRestoreInterchainAccount)(x)
}

func (x *MsgRestoreInterchainAccount) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgRestoreInterchainAccount_messageType fastReflection_MsgRestoreInterchainAccount_messageType
var _ protoreflect.MessageType = fastReflection_MsgRestoreInterchainAccount_messageType{}

type fastReflection_MsgRestoreInterchainAccount_messageType struct{}

func (x fastReflection_MsgRestoreInterchainAccount_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgRestoreInterchainAccount)(nil)
}
func (x fastReflection_MsgRestoreInterchainAccount_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgRestoreInterchainAccount)
}
func (x fastReflection_MsgRestoreInterchainAccount_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRestoreInterchainAccount
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgRestoreInterchainAccount) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRestoreInterchainAccount
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgRestoreInterchainAccount) Type() protoreflect.MessageType {
	return _fastReflection_MsgRestoreInterchainAccount_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgRestoreInterchainAccount) New() protoreflect.Message {
	return new(fastReflection_MsgRestoreInterchainAccount)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgRestoreInterchainAccount) Interface() protoreflect.ProtoMessage {
	return (*MsgRestoreInterchainAccount)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgRestoreInterchainAccount) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgRestoreInterchainAccount_creator, value) {
			return
		}
	}
	if x.ChainId != "" {
		value := protoreflect.ValueOfString(x.ChainId)
		if !f(fd_MsgRestoreInterchainAccount_chain_id, value) {
			return
		}
	}
	if x.ConnectionId != "" {
		value := protoreflect.ValueOfString(x.ConnectionId)
		if !f(fd_MsgRestoreInterchainAccount_connection_id, value) {
			return
		}
	}
	if x.AccountOwner != "" {
		value := protoreflect.ValueOfString(x.AccountOwner)
		if !f(fd_MsgRestoreInterchainAccount_account_owner, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgRestoreInterchainAccount) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.MsgRestoreInterchainAccount.creator":
		return x.Creator != ""
	case "stride.stakeibc.MsgRestoreInterchainAccount.chain_id":
		return x.ChainId != ""
	case "stride.stakeibc.MsgRestoreInterchainAccount.connection_id":
		return x.ConnectionId != ""
	case "stride.stakeibc.MsgRestoreInterchainAccount.account_owner":
		return x.AccountOwner != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRestoreInterchainAccount"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRestoreInterchainAccount does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRestoreInterchainAccount) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgRestoreInterchainAccount.creator":
		x.Creator = ""
	case "stride.stakeibc.MsgRestoreInterchainAccount.chain_id":
		x.ChainId = ""
	case "stride.stakeibc.MsgRestoreInterchainAccount.connection_id":
		x.ConnectionId = ""
	case "stride.stakeibc.MsgRestoreInterchainAccount.account_owner":
		x.AccountOwner = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRestoreInterchainAccount"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRestoreInterchainAccount does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgRestoreInterchainAccount) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.MsgRestoreInterchainAccount.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgRestoreInterchainAccount.chain_id":
		value := x.ChainId
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgRestoreInterchainAccount.connection_id":
		value := x.ConnectionId
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgRestoreInterchainAccount.account_owner":
		value := x.AccountOwner
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRestoreInterchainAccount"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRestoreInterchainAccount does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRestoreInterchainAccount) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgRestoreInterchainAccount.creator":
		x.Creator = value.Interface().(string)
	case "stride.stakeibc.MsgRestoreInterchainAccount.chain_id":
		x.ChainId = value.Interface().(string)
	case "stride.stakeibc.MsgRestoreInterchainAccount.connection_id":
		x.ConnectionId = value.Interface().(string)
	case "stride.stakeibc.MsgRestoreInterchainAccount.account_owner":
		x.AccountOwner = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRestoreInterchainAccount"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRestoreInterchainAccount does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRestoreInterchainAccount) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgRestoreInterchainAccount.creator":
		panic(fmt.Errorf("field creator of message stride.stakeibc.MsgRestoreInterchainAccount is not mutable"))
	case "stride.stakeibc.MsgRestoreInterchainAccount.chain_id":
		panic(fmt.Errorf("field chain_id of message stride.stakeibc.MsgRestoreInterchainAccount is not mutable"))
	case "stride.stakeibc.MsgRestoreInterchainAccount.connection_id":
		panic(fmt.Errorf("field connection_id of message stride.stakeibc.MsgRestoreInterchainAccount is not mutable"))
	case "stride.stakeibc.MsgRestoreInterchainAccount.account_owner":
		panic(fmt.Errorf("field account_owner of message stride.stakeibc.MsgRestoreInterchainAccount is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRestoreInterchainAccount"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRestoreInterchainAccount does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgRestoreInterchainAccount) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgRestoreInterchainAccount.creator":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgRestoreInterchainAccount.chain_id":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgRestoreInterchainAccount.connection_id":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgRestoreInterchainAccount.account_owner":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRestoreInterchainAccount"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRestoreInterchainAccount does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgRestoreInterchainAccount) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgRestoreInterchainAccount", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgRestoreInterchainAccount) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRestoreInterchainAccount) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgRestoreInterchainAccount) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgRestoreInterchainAccount) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgRestoreInterchainAccount)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChainId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ConnectionId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.AccountOwner)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgRestoreInterchainAccount)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.AccountOwner) > 0 {
			i -= len(x.AccountOwner)
			copy(dAtA[i:], x.AccountOwner)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.AccountOwner)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.ConnectionId) > 0 {
			i -= len(x.ConnectionId)
			copy(dAtA[i:], x.ConnectionId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ConnectionId)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ChainId) > 0 {
			i -= len(x.ChainId)
			copy(dAtA[i:], x.ChainId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgRestoreInterchainAccount)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRestoreInterchainAccount: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRestoreInterchainAccount: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ConnectionId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ConnectionId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AccountOwner", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AccountOwner = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgRestoreInterchainAccountResponse protoreflect.MessageDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgRestoreInterchainAccountResponse = File_stride_stakeibc_tx_proto.Messages().ByName("MsgRestoreInterchainAccountResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgRestoreInterchainAccountResponse)(nil)

type fastReflection_MsgRestoreInterchainAccountResponse MsgRestoreInterchainAccountResponse

func (x *MsgRestoreInterchainAccountResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgRestoreInterchainAccountResponse)(x)
}

func (x *MsgRestoreInterchainAccountResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgRestoreInterchainAccountResponse_messageType fastReflection_MsgRestoreInterchainAccountResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgRestoreInterchainAccountResponse_messageType{}

type fastReflection_MsgRestoreInterchainAccountResponse_messageType struct{}

func (x fastReflection_MsgRestoreInterchainAccountResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgRestoreInterchainAccountResponse)(nil)
}
func (x fastReflection_MsgRestoreInterchainAccountResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgRestoreInterchainAccountResponse)
}
func (x fastReflection_MsgRestoreInterchainAccountResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRestoreInterchainAccountResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgRestoreInterchainAccountResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRestoreInterchainAccountResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgRestoreInterchainAccountResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgRestoreInterchainAccountResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgRestoreInterchainAccountResponse) New() protoreflect.Message {
	return new(fastReflection_MsgRestoreInterchainAccountResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgRestoreInterchainAccountResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgRestoreInterchainAccountResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgRestoreInterchainAccountResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgRestoreInterchainAccountResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRestoreInterchainAccountResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRestoreInterchainAccountResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRestoreInterchainAccountResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRestoreInterchainAccountResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRestoreInterchainAccountResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgRestoreInterchainAccountResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRestoreInterchainAccountResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRestoreInterchainAccountResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRestoreInterchainAccountResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRestoreInterchainAccountResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRestoreInterchainAccountResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRestoreInterchainAccountResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRestoreInterchainAccountResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRestoreInterchainAccountResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgRestoreInterchainAccountResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgRestoreInterchainAccountResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgRestoreInterchainAccountResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgRestoreInterchainAccountResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgRestoreInterchainAccountResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgRestoreInterchainAccountResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRestoreInterchainAccountResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgRestoreInterchainAccountResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgRestoreInterchainAccountResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgRestoreInterchainAccountResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgRestoreInterchainAccountResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgRestoreInterchainAccountResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRestoreInterchainAccountResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRestoreInterchainAccountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUpdateValidatorSharesExchRate          protoreflect.MessageDescriptor
	fd_MsgUpdateValidatorSharesExchRate_creator  protoreflect.FieldDescriptor
	fd_MsgUpdateValidatorSharesExchRate_chain_id protoreflect.FieldDescriptor
	fd_MsgUpdateValidatorSharesExchRate_valoper  protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgUpdateValidatorSharesExchRate = File_stride_stakeibc_tx_proto.Messages().ByName("MsgUpdateValidatorSharesExchRate")
	fd_MsgUpdateValidatorSharesExchRate_creator = md_MsgUpdateValidatorSharesExchRate.Fields().ByName("creator")
	fd_MsgUpdateValidatorSharesExchRate_chain_id = md_MsgUpdateValidatorSharesExchRate.Fields().ByName("chain_id")
	fd_MsgUpdateValidatorSharesExchRate_valoper = md_MsgUpdateValidatorSharesExchRate.Fields().ByName("valoper")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateValidatorSharesExchRate)(nil)

type fastReflection_MsgUpdateValidatorSharesExchRate MsgUpdateValidatorSharesExchRate

func (x *MsgUpdateValidatorSharesExchRate) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateValidatorSharesExchRate)(x)
}

func (x *MsgUpdateValidatorSharesExchRate) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateValidatorSharesExchRate_messageType fastReflection_MsgUpdateValidatorSharesExchRate_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateValidatorSharesExchRate_messageType{}

type fastReflection_MsgUpdateValidatorSharesExchRate_messageType struct{}

func (x fastReflection_MsgUpdateValidatorSharesExchRate_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateValidatorSharesExchRate)(nil)
}
func (x fastReflection_MsgUpdateValidatorSharesExchRate_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateValidatorSharesExchRate)
}
func (x fastReflection_MsgUpdateValidatorSharesExchRate_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateValidatorSharesExchRate
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateValidatorSharesExchRate) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateValidatorSharesExchRate
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateValidatorSharesExchRate) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateValidatorSharesExchRate_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateValidatorSharesExchRate) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateValidatorSharesExchRate)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateValidatorSharesExchRate) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateValidatorSharesExchRate)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateValidatorSharesExchRate) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgUpdateValidatorSharesExchRate_creator, value) {
			return
		}
	}
	if x.ChainId != "" {
		value := protoreflect.ValueOfString(x.ChainId)
		if !f(fd_MsgUpdateValidatorSharesExchRate_chain_id, value) {
			return
		}
	}
	if x.Valoper != "" {
		value := protoreflect.ValueOfString(x.Valoper)
		if !f(fd_MsgUpdateValidatorSharesExchRate_valoper, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateValidatorSharesExchRate) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.MsgUpdateValidatorSharesExchRate.creator":
		return x.Creator != ""
	case "stride.stakeibc.MsgUpdateValidatorSharesExchRate.chain_id":
		return x.ChainId != ""
	case "stride.stakeibc.MsgUpdateValidatorSharesExchRate.valoper":
		return x.Valoper != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateValidatorSharesExchRate"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateValidatorSharesExchRate does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateValidatorSharesExchRate) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgUpdateValidatorSharesExchRate.creator":
		x.Creator = ""
	case "stride.stakeibc.MsgUpdateValidatorSharesExchRate.chain_id":
		x.ChainId = ""
	case "stride.stakeibc.MsgUpdateValidatorSharesExchRate.valoper":
		x.Valoper = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateValidatorSharesExchRate"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateValidatorSharesExchRate does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateValidatorSharesExchRate) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.MsgUpdateValidatorSharesExchRate.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgUpdateValidatorSharesExchRate.chain_id":
		value := x.ChainId
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgUpdateValidatorSharesExchRate.valoper":
		value := x.Valoper
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateValidatorSharesExchRate"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateValidatorSharesExchRate does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateValidatorSharesExchRate) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgUpdateValidatorSharesExchRate.creator":
		x.Creator = value.Interface().(string)
	case "stride.stakeibc.MsgUpdateValidatorSharesExchRate.chain_id":
		x.ChainId = value.Interface().(string)
	case "stride.stakeibc.MsgUpdateValidatorSharesExchRate.valoper":
		x.Valoper = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateValidatorSharesExchRate"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateValidatorSharesExchRate does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateValidatorSharesExchRate) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgUpdateValidatorSharesExchRate.creator":
		panic(fmt.Errorf("field creator of message stride.stakeibc.MsgUpdateValidatorSharesExchRate is not mutable"))
	case "stride.stakeibc.MsgUpdateValidatorSharesExchRate.chain_id":
		panic(fmt.Errorf("field chain_id of message stride.stakeibc.MsgUpdateValidatorSharesExchRate is not mutable"))
	case "stride.stakeibc.MsgUpdateValidatorSharesExchRate.valoper":
		panic(fmt.Errorf("field valoper of message stride.stakeibc.MsgUpdateValidatorSharesExchRate is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateValidatorSharesExchRate"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateValidatorSharesExchRate does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateValidatorSharesExchRate) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgUpdateValidatorSharesExchRate.creator":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgUpdateValidatorSharesExchRate.chain_id":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgUpdateValidatorSharesExchRate.valoper":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateValidatorSharesExchRate"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateValidatorSharesExchRate does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateValidatorSharesExchRate) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgUpdateValidatorSharesExchRate", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateValidatorSharesExchRate) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateValidatorSharesExchRate) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateValidatorSharesExchRate) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateValidatorSharesExchRate) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateValidatorSharesExchRate)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChainId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Valoper)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateValidatorSharesExchRate)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Valoper) > 0 {
			i -= len(x.Valoper)
			copy(dAtA[i:], x.Valoper)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Valoper)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ChainId) > 0 {
			i -= len(x.ChainId)
			copy(dAtA[i:], x.ChainId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateValidatorSharesExchRate)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateValidatorSharesExchRate: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateValidatorSharesExchRate: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Valoper", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Valoper = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUpdateValidatorSharesExchRateResponse protoreflect.MessageDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgUpdateValidatorSharesExchRateResponse = File_stride_stakeibc_tx_proto.Messages().ByName("MsgUpdateValidatorSharesExchRateResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateValidatorSharesExchRateResponse)(nil)

type fastReflection_MsgUpdateValidatorSharesExchRateResponse MsgUpdateValidatorSharesExchRateResponse

func (x *MsgUpdateValidatorSharesExchRateResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateValidatorSharesExchRateResponse)(x)
}

func (x *MsgUpdateValidatorSharesExchRateResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateValidatorSharesExchRateResponse_messageType fastReflection_MsgUpdateValidatorSharesExchRateResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateValidatorSharesExchRateResponse_messageType{}

type fastReflection_MsgUpdateValidatorSharesExchRateResponse_messageType struct{}

func (x fastReflection_MsgUpdateValidatorSharesExchRateResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateValidatorSharesExchRateResponse)(nil)
}
func (x fastReflection_MsgUpdateValidatorSharesExchRateResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateValidatorSharesExchRateResponse)
}
func (x fastReflection_MsgUpdateValidatorSharesExchRateResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateValidatorSharesExchRateResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateValidatorSharesExchRateResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateValidatorSharesExchRateResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateValidatorSharesExchRateResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateValidatorSharesExchRateResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateValidatorSharesExchRateResponse) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateValidatorSharesExchRateResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateValidatorSharesExchRateResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateValidatorSharesExchRateResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateValidatorSharesExchRateResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateValidatorSharesExchRateResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateValidatorSharesExchRateResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateValidatorSharesExchRateResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateValidatorSharesExchRateResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateValidatorSharesExchRateResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateValidatorSharesExchRateResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateValidatorSharesExchRateResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateValidatorSharesExchRateResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateValidatorSharesExchRateResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateValidatorSharesExchRateResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateValidatorSharesExchRateResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateValidatorSharesExchRateResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateValidatorSharesExchRateResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateValidatorSharesExchRateResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateValidatorSharesExchRateResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateValidatorSharesExchRateResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateValidatorSharesExchRateResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateValidatorSharesExchRateResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateValidatorSharesExchRateResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgUpdateValidatorSharesExchRateResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateValidatorSharesExchRateResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateValidatorSharesExchRateResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateValidatorSharesExchRateResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateValidatorSharesExchRateResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateValidatorSharesExchRateResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateValidatorSharesExchRateResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateValidatorSharesExchRateResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateValidatorSharesExchRateResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateValidatorSharesExchRateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgCalibrateDelegation          protoreflect.MessageDescriptor
	fd_MsgCalibrateDelegation_creator  protoreflect.FieldDescriptor
	fd_MsgCalibrateDelegation_chain_id protoreflect.FieldDescriptor
	fd_MsgCalibrateDelegation_valoper  protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgCalibrateDelegation = File_stride_stakeibc_tx_proto.Messages().ByName("MsgCalibrateDelegation")
	fd_MsgCalibrateDelegation_creator = md_MsgCalibrateDelegation.Fields().ByName("creator")
	fd_MsgCalibrateDelegation_chain_id = md_MsgCalibrateDelegation.Fields().ByName("chain_id")
	fd_MsgCalibrateDelegation_valoper = md_MsgCalibrateDelegation.Fields().ByName("valoper")
}

var _ protoreflect.Message = (*fastReflection_MsgCalibrateDelegation)(nil)

type fastReflection_MsgCalibrateDelegation MsgCalibrateDelegation

func (x *MsgCalibrateDelegation) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCalibrateDelegation)(x)
}

func (x *MsgCalibrateDelegation) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCalibrateDelegation_messageType fastReflection_MsgCalibrateDelegation_messageType
var _ protoreflect.MessageType = fastReflection_MsgCalibrateDelegation_messageType{}

type fastReflection_MsgCalibrateDelegation_messageType struct{}

func (x fastReflection_MsgCalibrateDelegation_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCalibrateDelegation)(nil)
}
func (x fastReflection_MsgCalibrateDelegation_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCalibrateDelegation)
}
func (x fastReflection_MsgCalibrateDelegation_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCalibrateDelegation
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCalibrateDelegation) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCalibrateDelegation
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCalibrateDelegation) Type() protoreflect.MessageType {
	return _fastReflection_MsgCalibrateDelegation_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCalibrateDelegation) New() protoreflect.Message {
	return new(fastReflection_MsgCalibrateDelegation)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCalibrateDelegation) Interface() protoreflect.ProtoMessage {
	return (*MsgCalibrateDelegation)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCalibrateDelegation) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgCalibrateDelegation_creator, value) {
			return
		}
	}
	if x.ChainId != "" {
		value := protoreflect.ValueOfString(x.ChainId)
		if !f(fd_MsgCalibrateDelegation_chain_id, value) {
			return
		}
	}
	if x.Valoper != "" {
		value := protoreflect.ValueOfString(x.Valoper)
		if !f(fd_MsgCalibrateDelegation_valoper, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCalibrateDelegation) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.MsgCalibrateDelegation.creator":
		return x.Creator != ""
	case "stride.stakeibc.MsgCalibrateDelegation.chain_id":
		return x.ChainId != ""
	case "stride.stakeibc.MsgCalibrateDelegation.valoper":
		return x.Valoper != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgCalibrateDelegation"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgCalibrateDelegation does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCalibrateDelegation) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgCalibrateDelegation.creator":
		x.Creator = ""
	case "stride.stakeibc.MsgCalibrateDelegation.chain_id":
		x.ChainId = ""
	case "stride.stakeibc.MsgCalibrateDelegation.valoper":
		x.Valoper = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgCalibrateDelegation"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgCalibrateDelegation does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCalibrateDelegation) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.MsgCalibrateDelegation.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgCalibrateDelegation.chain_id":
		value := x.ChainId
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgCalibrateDelegation.valoper":
		value := x.Valoper
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgCalibrateDelegation"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgCalibrateDelegation does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCalibrateDelegation) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgCalibrateDelegation.creator":
		x.Creator = value.Interface().(string)
	case "stride.stakeibc.MsgCalibrateDelegation.chain_id":
		x.ChainId = value.Interface().(string)
	case "stride.stakeibc.MsgCalibrateDelegation.valoper":
		x.Valoper = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgCalibrateDelegation"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgCalibrateDelegation does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCalibrateDelegation) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgCalibrateDelegation.creator":
		panic(fmt.Errorf("field creator of message stride.stakeibc.MsgCalibrateDelegation is not mutable"))
	case "stride.stakeibc.MsgCalibrateDelegation.chain_id":
		panic(fmt.Errorf("field chain_id of message stride.stakeibc.MsgCalibrateDelegation is not mutable"))
	case "stride.stakeibc.MsgCalibrateDelegation.valoper":
		panic(fmt.Errorf("field valoper of message stride.stakeibc.MsgCalibrateDelegation is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgCalibrateDelegation"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgCalibrateDelegation does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCalibrateDelegation) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgCalibrateDelegation.creator":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgCalibrateDelegation.chain_id":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgCalibrateDelegation.valoper":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgCalibrateDelegation"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgCalibrateDelegation does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCalibrateDelegation) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgCalibrateDelegation", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCalibrateDelegation) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCalibrateDelegation) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCalibrateDelegation) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCalibrateDelegation) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCalibrateDelegation)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChainId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Valoper)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCalibrateDelegation)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Valoper) > 0 {
			i -= len(x.Valoper)
			copy(dAtA[i:], x.Valoper)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Valoper)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ChainId) > 0 {
			i -= len(x.ChainId)
			copy(dAtA[i:], x.ChainId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCalibrateDelegation)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCalibrateDelegation: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCalibrateDelegation: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Valoper", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Valoper = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgCalibrateDelegationResponse protoreflect.MessageDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgCalibrateDelegationResponse = File_stride_stakeibc_tx_proto.Messages().ByName("MsgCalibrateDelegationResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgCalibrateDelegationResponse)(nil)

type fastReflection_MsgCalibrateDelegationResponse MsgCalibrateDelegationResponse

func (x *MsgCalibrateDelegationResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCalibrateDelegationResponse)(x)
}

func (x *MsgCalibrateDelegationResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCalibrateDelegationResponse_messageType fastReflection_MsgCalibrateDelegationResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgCalibrateDelegationResponse_messageType{}

type fastReflection_MsgCalibrateDelegationResponse_messageType struct{}

func (x fastReflection_MsgCalibrateDelegationResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCalibrateDelegationResponse)(nil)
}
func (x fastReflection_MsgCalibrateDelegationResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCalibrateDelegationResponse)
}
func (x fastReflection_MsgCalibrateDelegationResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCalibrateDelegationResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCalibrateDelegationResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCalibrateDelegationResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCalibrateDelegationResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgCalibrateDelegationResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCalibrateDelegationResponse) New() protoreflect.Message {
	return new(fastReflection_MsgCalibrateDelegationResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCalibrateDelegationResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgCalibrateDelegationResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCalibrateDelegationResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCalibrateDelegationResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgCalibrateDelegationResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgCalibrateDelegationResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCalibrateDelegationResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgCalibrateDelegationResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgCalibrateDelegationResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCalibrateDelegationResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgCalibrateDelegationResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgCalibrateDelegationResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCalibrateDelegationResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgCalibrateDelegationResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgCalibrateDelegationResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCalibrateDelegationResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgCalibrateDelegationResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgCalibrateDelegationResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCalibrateDelegationResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgCalibrateDelegationResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgCalibrateDelegationResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCalibrateDelegationResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgCalibrateDelegationResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCalibrateDelegationResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCalibrateDelegationResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCalibrateDelegationResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCalibrateDelegationResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCalibrateDelegationResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCalibrateDelegationResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCalibrateDelegationResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCalibrateDelegationResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCalibrateDelegationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgResumeHostZone          protoreflect.MessageDescriptor
	fd_MsgResumeHostZone_creator  protoreflect.FieldDescriptor
	fd_MsgResumeHostZone_chain_id protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgResumeHostZone = File_stride_stakeibc_tx_proto.Messages().ByName("MsgResumeHostZone")
	fd_MsgResumeHostZone_creator = md_MsgResumeHostZone.Fields().ByName("creator")
	fd_MsgResumeHostZone_chain_id = md_MsgResumeHostZone.Fields().ByName("chain_id")
}

var _ protoreflect.Message = (*fastReflection_MsgResumeHostZone)(nil)

type fastReflection_MsgResumeHostZone MsgResumeHostZone

func (x *MsgResumeHostZone) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgResumeHostZone)(x)
}

func (x *MsgResumeHostZone) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgResumeHostZone_messageType fastReflection_MsgResumeHostZone_messageType
var _ protoreflect.MessageType = fastReflection_MsgResumeHostZone_messageType{}

type fastReflection_MsgResumeHostZone_messageType struct{}

func (x fastReflection_MsgResumeHostZone_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgResumeHostZone)(nil)
}
func (x fastReflection_MsgResumeHostZone_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgResumeHostZone)
}
func (x fastReflection_MsgResumeHostZone_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgResumeHostZone
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgResumeHostZone) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgResumeHostZone
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgResumeHostZone) Type() protoreflect.MessageType {
	return _fastReflection_MsgResumeHostZone_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgResumeHostZone) New() protoreflect.Message {
	return new(fastReflection_MsgResumeHostZone)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgResumeHostZone) Interface() protoreflect.ProtoMessage {
	return (*MsgResumeHostZone)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgResumeHostZone) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgResumeHostZone_creator, value) {
			return
		}
	}
	if x.ChainId != "" {
		value := protoreflect.ValueOfString(x.ChainId)
		if !f(fd_MsgResumeHostZone_chain_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgResumeHostZone) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.MsgResumeHostZone.creator":
		return x.Creator != ""
	case "stride.stakeibc.MsgResumeHostZone.chain_id":
		return x.ChainId != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgResumeHostZone"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgResumeHostZone does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgResumeHostZone) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgResumeHostZone.creator":
		x.Creator = ""
	case "stride.stakeibc.MsgResumeHostZone.chain_id":
		x.ChainId = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgResumeHostZone"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgResumeHostZone does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgResumeHostZone) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.MsgResumeHostZone.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgResumeHostZone.chain_id":
		value := x.ChainId
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgResumeHostZone"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgResumeHostZone does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgResumeHostZone) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgResumeHostZone.creator":
		x.Creator = value.Interface().(string)
	case "stride.stakeibc.MsgResumeHostZone.chain_id":
		x.ChainId = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgResumeHostZone"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgResumeHostZone does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgResumeHostZone) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgResumeHostZone.creator":
		panic(fmt.Errorf("field creator of message stride.stakeibc.MsgResumeHostZone is not mutable"))
	case "stride.stakeibc.MsgResumeHostZone.chain_id":
		panic(fmt.Errorf("field chain_id of message stride.stakeibc.MsgResumeHostZone is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgResumeHostZone"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgResumeHostZone does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgResumeHostZone) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgResumeHostZone.creator":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgResumeHostZone.chain_id":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgResumeHostZone"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgResumeHostZone does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgResumeHostZone) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgResumeHostZone", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgResumeHostZone) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgResumeHostZone) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgResumeHostZone) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgResumeHostZone) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgResumeHostZone)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChainId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgResumeHostZone)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ChainId) > 0 {
			i -= len(x.ChainId)
			copy(dAtA[i:], x.ChainId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgResumeHostZone)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgResumeHostZone: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgResumeHostZone: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgResumeHostZoneResponse protoreflect.MessageDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgResumeHostZoneResponse = File_stride_stakeibc_tx_proto.Messages().ByName("MsgResumeHostZoneResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgResumeHostZoneResponse)(nil)

type fastReflection_MsgResumeHostZoneResponse MsgResumeHostZoneResponse

func (x *MsgResumeHostZoneResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgResumeHostZoneResponse)(x)
}

func (x *MsgResumeHostZoneResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgResumeHostZoneResponse_messageType fastReflection_MsgResumeHostZoneResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgResumeHostZoneResponse_messageType{}

type fastReflection_MsgResumeHostZoneResponse_messageType struct{}

func (x fastReflection_MsgResumeHostZoneResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgResumeHostZoneResponse)(nil)
}
func (x fastReflection_MsgResumeHostZoneResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgResumeHostZoneResponse)
}
func (x fastReflection_MsgResumeHostZoneResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgResumeHostZoneResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgResumeHostZoneResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgResumeHostZoneResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgResumeHostZoneResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgResumeHostZoneResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgResumeHostZoneResponse) New() protoreflect.Message {
	return new(fastReflection_MsgResumeHostZoneResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgResumeHostZoneResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgResumeHostZoneResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgResumeHostZoneResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgResumeHostZoneResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgResumeHostZoneResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgResumeHostZoneResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgResumeHostZoneResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgResumeHostZoneResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgResumeHostZoneResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgResumeHostZoneResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgResumeHostZoneResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgResumeHostZoneResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgResumeHostZoneResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgResumeHostZoneResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgResumeHostZoneResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgResumeHostZoneResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgResumeHostZoneResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgResumeHostZoneResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgResumeHostZoneResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgResumeHostZoneResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgResumeHostZoneResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgResumeHostZoneResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgResumeHostZoneResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgResumeHostZoneResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgResumeHostZoneResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgResumeHostZoneResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgResumeHostZoneResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgResumeHostZoneResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgResumeHostZoneResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgResumeHostZoneResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgResumeHostZoneResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgResumeHostZoneResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgCreateTradeRoute                                     protoreflect.MessageDescriptor
	fd_MsgCreateTradeRoute_authority                           protoreflect.FieldDescriptor
	fd_MsgCreateTradeRoute_host_chain_id                       protoreflect.FieldDescriptor
	fd_MsgCreateTradeRoute_stride_to_reward_connection_id      protoreflect.FieldDescriptor
	fd_MsgCreateTradeRoute_stride_to_trade_connection_id       protoreflect.FieldDescriptor
	fd_MsgCreateTradeRoute_host_to_reward_transfer_channel_id  protoreflect.FieldDescriptor
	fd_MsgCreateTradeRoute_reward_to_trade_transfer_channel_id protoreflect.FieldDescriptor
	fd_MsgCreateTradeRoute_trade_to_host_transfer_channel_id   protoreflect.FieldDescriptor
	fd_MsgCreateTradeRoute_reward_denom_on_host                protoreflect.FieldDescriptor
	fd_MsgCreateTradeRoute_reward_denom_on_reward              protoreflect.FieldDescriptor
	fd_MsgCreateTradeRoute_reward_denom_on_trade               protoreflect.FieldDescriptor
	fd_MsgCreateTradeRoute_host_denom_on_trade                 protoreflect.FieldDescriptor
	fd_MsgCreateTradeRoute_host_denom_on_host                  protoreflect.FieldDescriptor
	fd_MsgCreateTradeRoute_pool_id                             protoreflect.FieldDescriptor
	fd_MsgCreateTradeRoute_max_allowed_swap_loss_rate          protoreflect.FieldDescriptor
	fd_MsgCreateTradeRoute_min_swap_amount                     protoreflect.FieldDescriptor
	fd_MsgCreateTradeRoute_max_swap_amount                     protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgCreateTradeRoute = File_stride_stakeibc_tx_proto.Messages().ByName("MsgCreateTradeRoute")
	fd_MsgCreateTradeRoute_authority = md_MsgCreateTradeRoute.Fields().ByName("authority")
	fd_MsgCreateTradeRoute_host_chain_id = md_MsgCreateTradeRoute.Fields().ByName("host_chain_id")
	fd_MsgCreateTradeRoute_stride_to_reward_connection_id = md_MsgCreateTradeRoute.Fields().ByName("stride_to_reward_connection_id")
	fd_MsgCreateTradeRoute_stride_to_trade_connection_id = md_MsgCreateTradeRoute.Fields().ByName("stride_to_trade_connection_id")
	fd_MsgCreateTradeRoute_host_to_reward_transfer_channel_id = md_MsgCreateTradeRoute.Fields().ByName("host_to_reward_transfer_channel_id")
	fd_MsgCreateTradeRoute_reward_to_trade_transfer_channel_id = md_MsgCreateTradeRoute.Fields().ByName("reward_to_trade_transfer_channel_id")
	fd_MsgCreateTradeRoute_trade_to_host_transfer_channel_id = md_MsgCreateTradeRoute.Fields().ByName("trade_to_host_transfer_channel_id")
	fd_MsgCreateTradeRoute_reward_denom_on_host = md_MsgCreateTradeRoute.Fields().ByName("reward_denom_on_host")
	fd_MsgCreateTradeRoute_reward_denom_on_reward = md_MsgCreateTradeRoute.Fields().ByName("reward_denom_on_reward")
	fd_MsgCreateTradeRoute_reward_denom_on_trade = md_MsgCreateTradeRoute.Fields().ByName("reward_denom_on_trade")
	fd_MsgCreateTradeRoute_host_denom_on_trade = md_MsgCreateTradeRoute.Fields().ByName("host_denom_on_trade")
	fd_MsgCreateTradeRoute_host_denom_on_host = md_MsgCreateTradeRoute.Fields().ByName("host_denom_on_host")
	fd_MsgCreateTradeRoute_pool_id = md_MsgCreateTradeRoute.Fields().ByName("pool_id")
	fd_MsgCreateTradeRoute_max_allowed_swap_loss_rate = md_MsgCreateTradeRoute.Fields().ByName("max_allowed_swap_loss_rate")
	fd_MsgCreateTradeRoute_min_swap_amount = md_MsgCreateTradeRoute.Fields().ByName("min_swap_amount")
	fd_MsgCreateTradeRoute_max_swap_amount = md_MsgCreateTradeRoute.Fields().ByName("max_swap_amount")
}

var _ protoreflect.Message = (*fastReflection_MsgCreateTradeRoute)(nil)

type fastReflection_MsgCreateTradeRoute MsgCreateTradeRoute

func (x *MsgCreateTradeRoute) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCreateTradeRoute)(x)
}

func (x *MsgCreateTradeRoute) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCreateTradeRoute_messageType fastReflection_MsgCreateTradeRoute_messageType
var _ protoreflect.MessageType = fastReflection_MsgCreateTradeRoute_messageType{}

type fastReflection_MsgCreateTradeRoute_messageType struct{}

func (x fastReflection_MsgCreateTradeRoute_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCreateTradeRoute)(nil)
}
func (x fastReflection_MsgCreateTradeRoute_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCreateTradeRoute)
}
func (x fastReflection_MsgCreateTradeRoute_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateTradeRoute
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCreateTradeRoute) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateTradeRoute
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCreateTradeRoute) Type() protoreflect.MessageType {
	return _fastReflection_MsgCreateTradeRoute_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCreateTradeRoute) New() protoreflect.Message {
	return new(fastReflection_MsgCreateTradeRoute)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCreateTradeRoute) Interface() protoreflect.ProtoMessage {
	return (*MsgCreateTradeRoute)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCreateTradeRoute) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Authority != "" {
		value := protoreflect.ValueOfString(x.Authority)
		if !f(fd_MsgCreateTradeRoute_authority, value) {
			return
		}
	}
	if x.HostChainId != "" {
		value := protoreflect.ValueOfString(x.HostChainId)
		if !f(fd_MsgCreateTradeRoute_host_chain_id, value) {
			return
		}
	}
	if x.StrideToRewardConnectionId != "" {
		value := protoreflect.ValueOfString(x.StrideToRewardConnectionId)
		if !f(fd_MsgCreateTradeRoute_stride_to_reward_connection_id, value) {
			return
		}
	}
	if x.StrideToTradeConnectionId != "" {
		value := protoreflect.ValueOfString(x.StrideToTradeConnectionId)
		if !f(fd_MsgCreateTradeRoute_stride_to_trade_connection_id, value) {
			return
		}
	}
	if x.HostToRewardTransferChannelId != "" {
		value := protoreflect.ValueOfString(x.HostToRewardTransferChannelId)
		if !f(fd_MsgCreateTradeRoute_host_to_reward_transfer_channel_id, value) {
			return
		}
	}
	if x.RewardToTradeTransferChannelId != "" {
		value := protoreflect.ValueOfString(x.RewardToTradeTransferChannelId)
		if !f(fd_MsgCreateTradeRoute_reward_to_trade_transfer_channel_id, value) {
			return
		}
	}
	if x.TradeToHostTransferChannelId != "" {
		value := protoreflect.ValueOfString(x.TradeToHostTransferChannelId)
		if !f(fd_MsgCreateTradeRoute_trade_to_host_transfer_channel_id, value) {
			return
		}
	}
	if x.RewardDenomOnHost != "" {
		value := protoreflect.ValueOfString(x.RewardDenomOnHost)
		if !f(fd_MsgCreateTradeRoute_reward_denom_on_host, value) {
			return
		}
	}
	if x.RewardDenomOnReward != "" {
		value := protoreflect.ValueOfString(x.RewardDenomOnReward)
		if !f(fd_MsgCreateTradeRoute_reward_denom_on_reward, value) {
			return
		}
	}
	if x.RewardDenomOnTrade != "" {
		value := protoreflect.ValueOfString(x.RewardDenomOnTrade)
		if !f(fd_MsgCreateTradeRoute_reward_denom_on_trade, value) {
			return
		}
	}
	if x.HostDenomOnTrade != "" {
		value := protoreflect.ValueOfString(x.HostDenomOnTrade)
		if !f(fd_MsgCreateTradeRoute_host_denom_on_trade, value) {
			return
		}
	}
	if x.HostDenomOnHost != "" {
		value := protoreflect.ValueOfString(x.HostDenomOnHost)
		if !f(fd_MsgCreateTradeRoute_host_denom_on_host, value) {
			return
		}
	}
	if x.PoolId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.PoolId)
		if !f(fd_MsgCreateTradeRoute_pool_id, value) {
			return
		}
	}
	if x.MaxAllowedSwapLossRate != "" {
		value := protoreflect.ValueOfString(x.MaxAllowedSwapLossRate)
		if !f(fd_MsgCreateTradeRoute_max_allowed_swap_loss_rate, value) {
			return
		}
	}
	if x.MinSwapAmount != "" {
		value := protoreflect.ValueOfString(x.MinSwapAmount)
		if !f(fd_MsgCreateTradeRoute_min_swap_amount, value) {
			return
		}
	}
	if x.MaxSwapAmount != "" {
		value := protoreflect.ValueOfString(x.MaxSwapAmount)
		if !f(fd_MsgCreateTradeRoute_max_swap_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCreateTradeRoute) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.MsgCreateTradeRoute.authority":
		return x.Authority != ""
	case "stride.stakeibc.MsgCreateTradeRoute.host_chain_id":
		return x.HostChainId != ""
	case "stride.stakeibc.MsgCreateTradeRoute.stride_to_reward_connection_id":
		return x.StrideToRewardConnectionId != ""
	case "stride.stakeibc.MsgCreateTradeRoute.stride_to_trade_connection_id":
		return x.StrideToTradeConnectionId != ""
	case "stride.stakeibc.MsgCreateTradeRoute.host_to_reward_transfer_channel_id":
		return x.HostToRewardTransferChannelId != ""
	case "stride.stakeibc.MsgCreateTradeRoute.reward_to_trade_transfer_channel_id":
		return x.RewardToTradeTransferChannelId != ""
	case "stride.stakeibc.MsgCreateTradeRoute.trade_to_host_transfer_channel_id":
		return x.TradeToHostTransferChannelId != ""
	case "stride.stakeibc.MsgCreateTradeRoute.reward_denom_on_host":
		return x.RewardDenomOnHost != ""
	case "stride.stakeibc.MsgCreateTradeRoute.reward_denom_on_reward":
		return x.RewardDenomOnReward != ""
	case "stride.stakeibc.MsgCreateTradeRoute.reward_denom_on_trade":
		return x.RewardDenomOnTrade != ""
	case "stride.stakeibc.MsgCreateTradeRoute.host_denom_on_trade":
		return x.HostDenomOnTrade != ""
	case "stride.stakeibc.MsgCreateTradeRoute.host_denom_on_host":
		return x.HostDenomOnHost != ""
	case "stride.stakeibc.MsgCreateTradeRoute.pool_id":
		return x.PoolId != uint64(0)
	case "stride.stakeibc.MsgCreateTradeRoute.max_allowed_swap_loss_rate":
		return x.MaxAllowedSwapLossRate != ""
	case "stride.stakeibc.MsgCreateTradeRoute.min_swap_amount":
		return x.MinSwapAmount != ""
	case "stride.stakeibc.MsgCreateTradeRoute.max_swap_amount":
		return x.MaxSwapAmount != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgCreateTradeRoute"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgCreateTradeRoute does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateTradeRoute) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgCreateTradeRoute.authority":
		x.Authority = ""
	case "stride.stakeibc.MsgCreateTradeRoute.host_chain_id":
		x.HostChainId = ""
	case "stride.stakeibc.MsgCreateTradeRoute.stride_to_reward_connection_id":
		x.StrideToRewardConnectionId = ""
	case "stride.stakeibc.MsgCreateTradeRoute.stride_to_trade_connection_id":
		x.StrideToTradeConnectionId = ""
	case "stride.stakeibc.MsgCreateTradeRoute.host_to_reward_transfer_channel_id":
		x.HostToRewardTransferChannelId = ""
	case "stride.stakeibc.MsgCreateTradeRoute.reward_to_trade_transfer_channel_id":
		x.RewardToTradeTransferChannelId = ""
	case "stride.stakeibc.MsgCreateTradeRoute.trade_to_host_transfer_channel_id":
		x.TradeToHostTransferChannelId = ""
	case "stride.stakeibc.MsgCreateTradeRoute.reward_denom_on_host":
		x.RewardDenomOnHost = ""
	case "stride.stakeibc.MsgCreateTradeRoute.reward_denom_on_reward":
		x.RewardDenomOnReward = ""
	case "stride.stakeibc.MsgCreateTradeRoute.reward_denom_on_trade":
		x.RewardDenomOnTrade = ""
	case "stride.stakeibc.MsgCreateTradeRoute.host_denom_on_trade":
		x.HostDenomOnTrade = ""
	case "stride.stakeibc.MsgCreateTradeRoute.host_denom_on_host":
		x.HostDenomOnHost = ""
	case "stride.stakeibc.MsgCreateTradeRoute.pool_id":
		x.PoolId = uint64(0)
	case "stride.stakeibc.MsgCreateTradeRoute.max_allowed_swap_loss_rate":
		x.MaxAllowedSwapLossRate = ""
	case "stride.stakeibc.MsgCreateTradeRoute.min_swap_amount":
		x.MinSwapAmount = ""
	case "stride.stakeibc.MsgCreateTradeRoute.max_swap_amount":
		x.MaxSwapAmount = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgCreateTradeRoute"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgCreateTradeRoute does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCreateTradeRoute) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.MsgCreateTradeRoute.authority":
		value := x.Authority
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgCreateTradeRoute.host_chain_id":
		value := x.HostChainId
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgCreateTradeRoute.stride_to_reward_connection_id":
		value := x.StrideToRewardConnectionId
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgCreateTradeRoute.stride_to_trade_connection_id":
		value := x.StrideToTradeConnectionId
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgCreateTradeRoute.host_to_reward_transfer_channel_id":
		value := x.HostToRewardTransferChannelId
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgCreateTradeRoute.reward_to_trade_transfer_channel_id":
		value := x.RewardToTradeTransferChannelId
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgCreateTradeRoute.trade_to_host_transfer_channel_id":
		value := x.TradeToHostTransferChannelId
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgCreateTradeRoute.reward_denom_on_host":
		value := x.RewardDenomOnHost
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgCreateTradeRoute.reward_denom_on_reward":
		value := x.RewardDenomOnReward
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgCreateTradeRoute.reward_denom_on_trade":
		value := x.RewardDenomOnTrade
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgCreateTradeRoute.host_denom_on_trade":
		value := x.HostDenomOnTrade
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgCreateTradeRoute.host_denom_on_host":
		value := x.HostDenomOnHost
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgCreateTradeRoute.pool_id":
		value := x.PoolId
		return protoreflect.ValueOfUint64(value)
	case "stride.stakeibc.MsgCreateTradeRoute.max_allowed_swap_loss_rate":
		value := x.MaxAllowedSwapLossRate
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgCreateTradeRoute.min_swap_amount":
		value := x.MinSwapAmount
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgCreateTradeRoute.max_swap_amount":
		value := x.MaxSwapAmount
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgCreateTradeRoute"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgCreateTradeRoute does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateTradeRoute) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgCreateTradeRoute.authority":
		x.Authority = value.Interface().(string)
	case "stride.stakeibc.MsgCreateTradeRoute.host_chain_id":
		x.HostChainId = value.Interface().(string)
	case "stride.stakeibc.MsgCreateTradeRoute.stride_to_reward_connection_id":
		x.StrideToRewardConnectionId = value.Interface().(string)
	case "stride.stakeibc.MsgCreateTradeRoute.stride_to_trade_connection_id":
		x.StrideToTradeConnectionId = value.Interface().(string)
	case "stride.stakeibc.MsgCreateTradeRoute.host_to_reward_transfer_channel_id":
		x.HostToRewardTransferChannelId = value.Interface().(string)
	case "stride.stakeibc.MsgCreateTradeRoute.reward_to_trade_transfer_channel_id":
		x.RewardToTradeTransferChannelId = value.Interface().(string)
	case "stride.stakeibc.MsgCreateTradeRoute.trade_to_host_transfer_channel_id":
		x.TradeToHostTransferChannelId = value.Interface().(string)
	case "stride.stakeibc.MsgCreateTradeRoute.reward_denom_on_host":
		x.RewardDenomOnHost = value.Interface().(string)
	case "stride.stakeibc.MsgCreateTradeRoute.reward_denom_on_reward":
		x.RewardDenomOnReward = value.Interface().(string)
	case "stride.stakeibc.MsgCreateTradeRoute.reward_denom_on_trade":
		x.RewardDenomOnTrade = value.Interface().(string)
	case "stride.stakeibc.MsgCreateTradeRoute.host_denom_on_trade":
		x.HostDenomOnTrade = value.Interface().(string)
	case "stride.stakeibc.MsgCreateTradeRoute.host_denom_on_host":
		x.HostDenomOnHost = value.Interface().(string)
	case "stride.stakeibc.MsgCreateTradeRoute.pool_id":
		x.PoolId = value.Uint()
	case "stride.stakeibc.MsgCreateTradeRoute.max_allowed_swap_loss_rate":
		x.MaxAllowedSwapLossRate = value.Interface().(string)
	case "stride.stakeibc.MsgCreateTradeRoute.min_swap_amount":
		x.MinSwapAmount = value.Interface().(string)
	case "stride.stakeibc.MsgCreateTradeRoute.max_swap_amount":
		x.MaxSwapAmount = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgCreateTradeRoute"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgCreateTradeRoute does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateTradeRoute) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgCreateTradeRoute.authority":
		panic(fmt.Errorf("field authority of message stride.stakeibc.MsgCreateTradeRoute is not mutable"))
	case "stride.stakeibc.MsgCreateTradeRoute.host_chain_id":
		panic(fmt.Errorf("field host_chain_id of message stride.stakeibc.MsgCreateTradeRoute is not mutable"))
	case "stride.stakeibc.MsgCreateTradeRoute.stride_to_reward_connection_id":
		panic(fmt.Errorf("field stride_to_reward_connection_id of message stride.stakeibc.MsgCreateTradeRoute is not mutable"))
	case "stride.stakeibc.MsgCreateTradeRoute.stride_to_trade_connection_id":
		panic(fmt.Errorf("field stride_to_trade_connection_id of message stride.stakeibc.MsgCreateTradeRoute is not mutable"))
	case "stride.stakeibc.MsgCreateTradeRoute.host_to_reward_transfer_channel_id":
		panic(fmt.Errorf("field host_to_reward_transfer_channel_id of message stride.stakeibc.MsgCreateTradeRoute is not mutable"))
	case "stride.stakeibc.MsgCreateTradeRoute.reward_to_trade_transfer_channel_id":
		panic(fmt.Errorf("field reward_to_trade_transfer_channel_id of message stride.stakeibc.MsgCreateTradeRoute is not mutable"))
	case "stride.stakeibc.MsgCreateTradeRoute.trade_to_host_transfer_channel_id":
		panic(fmt.Errorf("field trade_to_host_transfer_channel_id of message stride.stakeibc.MsgCreateTradeRoute is not mutable"))
	case "stride.stakeibc.MsgCreateTradeRoute.reward_denom_on_host":
		panic(fmt.Errorf("field reward_denom_on_host of message stride.stakeibc.MsgCreateTradeRoute is not mutable"))
	case "stride.stakeibc.MsgCreateTradeRoute.reward_denom_on_reward":
		panic(fmt.Errorf("field reward_denom_on_reward of message stride.stakeibc.MsgCreateTradeRoute is not mutable"))
	case "stride.stakeibc.MsgCreateTradeRoute.reward_denom_on_trade":
		panic(fmt.Errorf("field reward_denom_on_trade of message stride.stakeibc.MsgCreateTradeRoute is not mutable"))
	case "stride.stakeibc.MsgCreateTradeRoute.host_denom_on_trade":
		panic(fmt.Errorf("field host_denom_on_trade of message stride.stakeibc.MsgCreateTradeRoute is not mutable"))
	case "stride.stakeibc.MsgCreateTradeRoute.host_denom_on_host":
		panic(fmt.Errorf("field host_denom_on_host of message stride.stakeibc.MsgCreateTradeRoute is not mutable"))
	case "stride.stakeibc.MsgCreateTradeRoute.pool_id":
		panic(fmt.Errorf("field pool_id of message stride.stakeibc.MsgCreateTradeRoute is not mutable"))
	case "stride.stakeibc.MsgCreateTradeRoute.max_allowed_swap_loss_rate":
		panic(fmt.Errorf("field max_allowed_swap_loss_rate of message stride.stakeibc.MsgCreateTradeRoute is not mutable"))
	case "stride.stakeibc.MsgCreateTradeRoute.min_swap_amount":
		panic(fmt.Errorf("field min_swap_amount of message stride.stakeibc.MsgCreateTradeRoute is not mutable"))
	case "stride.stakeibc.MsgCreateTradeRoute.max_swap_amount":
		panic(fmt.Errorf("field max_swap_amount of message stride.stakeibc.MsgCreateTradeRoute is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgCreateTradeRoute"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgCreateTradeRoute does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCreateTradeRoute) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgCreateTradeRoute.authority":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgCreateTradeRoute.host_chain_id":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgCreateTradeRoute.stride_to_reward_connection_id":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgCreateTradeRoute.stride_to_trade_connection_id":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgCreateTradeRoute.host_to_reward_transfer_channel_id":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgCreateTradeRoute.reward_to_trade_transfer_channel_id":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgCreateTradeRoute.trade_to_host_transfer_channel_id":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgCreateTradeRoute.reward_denom_on_host":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgCreateTradeRoute.reward_denom_on_reward":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgCreateTradeRoute.reward_denom_on_trade":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgCreateTradeRoute.host_denom_on_trade":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgCreateTradeRoute.host_denom_on_host":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgCreateTradeRoute.pool_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "stride.stakeibc.MsgCreateTradeRoute.max_allowed_swap_loss_rate":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgCreateTradeRoute.min_swap_amount":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgCreateTradeRoute.max_swap_amount":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgCreateTradeRoute"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgCreateTradeRoute does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCreateTradeRoute) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgCreateTradeRoute", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCreateTradeRoute) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateTradeRoute) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCreateTradeRoute) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCreateTradeRoute) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCreateTradeRoute)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Authority)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.HostChainId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.StrideToRewardConnectionId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.StrideToTradeConnectionId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.HostToRewardTransferChannelId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RewardToTradeTransferChannelId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TradeToHostTransferChannelId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RewardDenomOnHost)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RewardDenomOnReward)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RewardDenomOnTrade)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.HostDenomOnTrade)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.HostDenomOnHost)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.PoolId != 0 {
			n += 1 + runtime.Sov(uint64(x.PoolId))
		}
		l = len(x.MaxAllowedSwapLossRate)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.MinSwapAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.MaxSwapAmount)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateTradeRoute)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.MaxSwapAmount) > 0 {
			i -= len(x.MaxSwapAmount)
			copy(dAtA[i:], x.MaxSwapAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MaxSwapAmount)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x82
		}
		if len(x.MinSwapAmount) > 0 {
			i -= len(x.MinSwapAmount)
			copy(dAtA[i:], x.MinSwapAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MinSwapAmount)))
			i--
			dAtA[i] = 0x7a
		}
		if len(x.MaxAllowedSwapLossRate) > 0 {
			i -= len(x.MaxAllowedSwapLossRate)
			copy(dAtA[i:], x.MaxAllowedSwapLossRate)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MaxAllowedSwapLossRate)))
			i--
			dAtA[i] = 0x72
		}
		if x.PoolId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PoolId))
			i--
			dAtA[i] = 0x68
		}
		if len(x.HostDenomOnHost) > 0 {
			i -= len(x.HostDenomOnHost)
			copy(dAtA[i:], x.HostDenomOnHost)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HostDenomOnHost)))
			i--
			dAtA[i] = 0x62
		}
		if len(x.HostDenomOnTrade) > 0 {
			i -= len(x.HostDenomOnTrade)
			copy(dAtA[i:], x.HostDenomOnTrade)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HostDenomOnTrade)))
			i--
			dAtA[i] = 0x5a
		}
		if len(x.RewardDenomOnTrade) > 0 {
			i -= len(x.RewardDenomOnTrade)
			copy(dAtA[i:], x.RewardDenomOnTrade)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RewardDenomOnTrade)))
			i--
			dAtA[i] = 0x52
		}
		if len(x.RewardDenomOnReward) > 0 {
			i -= len(x.RewardDenomOnReward)
			copy(dAtA[i:], x.RewardDenomOnReward)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RewardDenomOnReward)))
			i--
			dAtA[i] = 0x4a
		}
		if len(x.RewardDenomOnHost) > 0 {
			i -= len(x.RewardDenomOnHost)
			copy(dAtA[i:], x.RewardDenomOnHost)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RewardDenomOnHost)))
			i--
			dAtA[i] = 0x42
		}
		if len(x.TradeToHostTransferChannelId) > 0 {
			i -= len(x.TradeToHostTransferChannelId)
			copy(dAtA[i:], x.TradeToHostTransferChannelId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TradeToHostTransferChannelId)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.RewardToTradeTransferChannelId) > 0 {
			i -= len(x.RewardToTradeTransferChannelId)
			copy(dAtA[i:], x.RewardToTradeTransferChannelId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RewardToTradeTransferChannelId)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.HostToRewardTransferChannelId) > 0 {
			i -= len(x.HostToRewardTransferChannelId)
			copy(dAtA[i:], x.HostToRewardTransferChannelId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HostToRewardTransferChannelId)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.StrideToTradeConnectionId) > 0 {
			i -= len(x.StrideToTradeConnectionId)
			copy(dAtA[i:], x.StrideToTradeConnectionId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.StrideToTradeConnectionId)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.StrideToRewardConnectionId) > 0 {
			i -= len(x.StrideToRewardConnectionId)
			copy(dAtA[i:], x.StrideToRewardConnectionId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.StrideToRewardConnectionId)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.HostChainId) > 0 {
			i -= len(x.HostChainId)
			copy(dAtA[i:], x.HostChainId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HostChainId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Authority) > 0 {
			i -= len(x.Authority)
			copy(dAtA[i:], x.Authority)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Authority)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateTradeRoute)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateTradeRoute: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateTradeRoute: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Authority = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HostChainId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HostChainId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StrideToRewardConnectionId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.StrideToRewardConnectionId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StrideToTradeConnectionId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.StrideToTradeConnectionId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HostToRewardTransferChannelId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HostToRewardTransferChannelId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardToTradeTransferChannelId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RewardToTradeTransferChannelId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TradeToHostTransferChannelId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TradeToHostTransferChannelId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardDenomOnHost", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RewardDenomOnHost = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardDenomOnReward", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RewardDenomOnReward = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardDenomOnTrade", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RewardDenomOnTrade = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HostDenomOnTrade", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HostDenomOnTrade = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HostDenomOnHost", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HostDenomOnHost = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 13:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
				}
				x.PoolId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PoolId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 14:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MaxAllowedSwapLossRate", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MaxAllowedSwapLossRate = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 15:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MinSwapAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MinSwapAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 16:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MaxSwapAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MaxSwapAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgCreateTradeRouteResponse protoreflect.MessageDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgCreateTradeRouteResponse = File_stride_stakeibc_tx_proto.Messages().ByName("MsgCreateTradeRouteResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgCreateTradeRouteResponse)(nil)

type fastReflection_MsgCreateTradeRouteResponse MsgCreateTradeRouteResponse

func (x *MsgCreateTradeRouteResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCreateTradeRouteResponse)(x)
}

func (x *MsgCreateTradeRouteResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCreateTradeRouteResponse_messageType fastReflection_MsgCreateTradeRouteResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgCreateTradeRouteResponse_messageType{}

type fastReflection_MsgCreateTradeRouteResponse_messageType struct{}

func (x fastReflection_MsgCreateTradeRouteResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCreateTradeRouteResponse)(nil)
}
func (x fastReflection_MsgCreateTradeRouteResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCreateTradeRouteResponse)
}
func (x fastReflection_MsgCreateTradeRouteResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateTradeRouteResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCreateTradeRouteResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateTradeRouteResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCreateTradeRouteResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgCreateTradeRouteResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCreateTradeRouteResponse) New() protoreflect.Message {
	return new(fastReflection_MsgCreateTradeRouteResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCreateTradeRouteResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgCreateTradeRouteResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCreateTradeRouteResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCreateTradeRouteResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgCreateTradeRouteResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgCreateTradeRouteResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateTradeRouteResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgCreateTradeRouteResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgCreateTradeRouteResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCreateTradeRouteResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgCreateTradeRouteResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgCreateTradeRouteResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateTradeRouteResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgCreateTradeRouteResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgCreateTradeRouteResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateTradeRouteResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgCreateTradeRouteResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgCreateTradeRouteResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCreateTradeRouteResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgCreateTradeRouteResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgCreateTradeRouteResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCreateTradeRouteResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgCreateTradeRouteResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCreateTradeRouteResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateTradeRouteResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCreateTradeRouteResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCreateTradeRouteResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCreateTradeRouteResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateTradeRouteResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateTradeRouteResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateTradeRouteResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateTradeRouteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgDeleteTradeRoute              protoreflect.MessageDescriptor
	fd_MsgDeleteTradeRoute_authority    protoreflect.FieldDescriptor
	fd_MsgDeleteTradeRoute_reward_denom protoreflect.FieldDescriptor
	fd_MsgDeleteTradeRoute_host_denom   protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgDeleteTradeRoute = File_stride_stakeibc_tx_proto.Messages().ByName("MsgDeleteTradeRoute")
	fd_MsgDeleteTradeRoute_authority = md_MsgDeleteTradeRoute.Fields().ByName("authority")
	fd_MsgDeleteTradeRoute_reward_denom = md_MsgDeleteTradeRoute.Fields().ByName("reward_denom")
	fd_MsgDeleteTradeRoute_host_denom = md_MsgDeleteTradeRoute.Fields().ByName("host_denom")
}

var _ protoreflect.Message = (*fastReflection_MsgDeleteTradeRoute)(nil)

type fastReflection_MsgDeleteTradeRoute MsgDeleteTradeRoute

func (x *MsgDeleteTradeRoute) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgDeleteTradeRoute)(x)
}

func (x *MsgDeleteTradeRoute) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgDeleteTradeRoute_messageType fastReflection_MsgDeleteTradeRoute_messageType
var _ protoreflect.MessageType = fastReflection_MsgDeleteTradeRoute_messageType{}

type fastReflection_MsgDeleteTradeRoute_messageType struct{}

func (x fastReflection_MsgDeleteTradeRoute_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgDeleteTradeRoute)(nil)
}
func (x fastReflection_MsgDeleteTradeRoute_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgDeleteTradeRoute)
}
func (x fastReflection_MsgDeleteTradeRoute_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgDeleteTradeRoute
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgDeleteTradeRoute) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgDeleteTradeRoute
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgDeleteTradeRoute) Type() protoreflect.MessageType {
	return _fastReflection_MsgDeleteTradeRoute_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgDeleteTradeRoute) New() protoreflect.Message {
	return new(fastReflection_MsgDeleteTradeRoute)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgDeleteTradeRoute) Interface() protoreflect.ProtoMessage {
	return (*MsgDeleteTradeRoute)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgDeleteTradeRoute) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Authority != "" {
		value := protoreflect.ValueOfString(x.Authority)
		if !f(fd_MsgDeleteTradeRoute_authority, value) {
			return
		}
	}
	if x.RewardDenom != "" {
		value := protoreflect.ValueOfString(x.RewardDenom)
		if !f(fd_MsgDeleteTradeRoute_reward_denom, value) {
			return
		}
	}
	if x.HostDenom != "" {
		value := protoreflect.ValueOfString(x.HostDenom)
		if !f(fd_MsgDeleteTradeRoute_host_denom, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgDeleteTradeRoute) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.MsgDeleteTradeRoute.authority":
		return x.Authority != ""
	case "stride.stakeibc.MsgDeleteTradeRoute.reward_denom":
		return x.RewardDenom != ""
	case "stride.stakeibc.MsgDeleteTradeRoute.host_denom":
		return x.HostDenom != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgDeleteTradeRoute"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgDeleteTradeRoute does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteTradeRoute) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgDeleteTradeRoute.authority":
		x.Authority = ""
	case "stride.stakeibc.MsgDeleteTradeRoute.reward_denom":
		x.RewardDenom = ""
	case "stride.stakeibc.MsgDeleteTradeRoute.host_denom":
		x.HostDenom = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgDeleteTradeRoute"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgDeleteTradeRoute does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgDeleteTradeRoute) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.MsgDeleteTradeRoute.authority":
		value := x.Authority
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgDeleteTradeRoute.reward_denom":
		value := x.RewardDenom
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgDeleteTradeRoute.host_denom":
		value := x.HostDenom
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgDeleteTradeRoute"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgDeleteTradeRoute does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteTradeRoute) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgDeleteTradeRoute.authority":
		x.Authority = value.Interface().(string)
	case "stride.stakeibc.MsgDeleteTradeRoute.reward_denom":
		x.RewardDenom = value.Interface().(string)
	case "stride.stakeibc.MsgDeleteTradeRoute.host_denom":
		x.HostDenom = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgDeleteTradeRoute"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgDeleteTradeRoute does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteTradeRoute) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgDeleteTradeRoute.authority":
		panic(fmt.Errorf("field authority of message stride.stakeibc.MsgDeleteTradeRoute is not mutable"))
	case "stride.stakeibc.MsgDeleteTradeRoute.reward_denom":
		panic(fmt.Errorf("field reward_denom of message stride.stakeibc.MsgDeleteTradeRoute is not mutable"))
	case "stride.stakeibc.MsgDeleteTradeRoute.host_denom":
		panic(fmt.Errorf("field host_denom of message stride.stakeibc.MsgDeleteTradeRoute is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgDeleteTradeRoute"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgDeleteTradeRoute does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgDeleteTradeRoute) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgDeleteTradeRoute.authority":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgDeleteTradeRoute.reward_denom":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgDeleteTradeRoute.host_denom":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgDeleteTradeRoute"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgDeleteTradeRoute does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgDeleteTradeRoute) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgDeleteTradeRoute", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgDeleteTradeRoute) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteTradeRoute) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgDeleteTradeRoute) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgDeleteTradeRoute) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgDeleteTradeRoute)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Authority)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RewardDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.HostDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgDeleteTradeRoute)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.HostDenom) > 0 {
			i -= len(x.HostDenom)
			copy(dAtA[i:], x.HostDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HostDenom)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.RewardDenom) > 0 {
			i -= len(x.RewardDenom)
			copy(dAtA[i:], x.RewardDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RewardDenom)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Authority) > 0 {
			i -= len(x.Authority)
			copy(dAtA[i:], x.Authority)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Authority)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgDeleteTradeRoute)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgDeleteTradeRoute: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgDeleteTradeRoute: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Authority = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RewardDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HostDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HostDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgDeleteTradeRouteResponse protoreflect.MessageDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgDeleteTradeRouteResponse = File_stride_stakeibc_tx_proto.Messages().ByName("MsgDeleteTradeRouteResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgDeleteTradeRouteResponse)(nil)

type fastReflection_MsgDeleteTradeRouteResponse MsgDeleteTradeRouteResponse

func (x *MsgDeleteTradeRouteResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgDeleteTradeRouteResponse)(x)
}

func (x *MsgDeleteTradeRouteResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgDeleteTradeRouteResponse_messageType fastReflection_MsgDeleteTradeRouteResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgDeleteTradeRouteResponse_messageType{}

type fastReflection_MsgDeleteTradeRouteResponse_messageType struct{}

func (x fastReflection_MsgDeleteTradeRouteResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgDeleteTradeRouteResponse)(nil)
}
func (x fastReflection_MsgDeleteTradeRouteResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgDeleteTradeRouteResponse)
}
func (x fastReflection_MsgDeleteTradeRouteResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgDeleteTradeRouteResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgDeleteTradeRouteResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgDeleteTradeRouteResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgDeleteTradeRouteResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgDeleteTradeRouteResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgDeleteTradeRouteResponse) New() protoreflect.Message {
	return new(fastReflection_MsgDeleteTradeRouteResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgDeleteTradeRouteResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgDeleteTradeRouteResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgDeleteTradeRouteResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgDeleteTradeRouteResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgDeleteTradeRouteResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgDeleteTradeRouteResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteTradeRouteResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgDeleteTradeRouteResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgDeleteTradeRouteResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgDeleteTradeRouteResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgDeleteTradeRouteResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgDeleteTradeRouteResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteTradeRouteResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgDeleteTradeRouteResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgDeleteTradeRouteResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteTradeRouteResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgDeleteTradeRouteResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgDeleteTradeRouteResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgDeleteTradeRouteResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgDeleteTradeRouteResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgDeleteTradeRouteResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgDeleteTradeRouteResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgDeleteTradeRouteResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgDeleteTradeRouteResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteTradeRouteResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgDeleteTradeRouteResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgDeleteTradeRouteResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgDeleteTradeRouteResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgDeleteTradeRouteResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgDeleteTradeRouteResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgDeleteTradeRouteResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgDeleteTradeRouteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUpdateTradeRoute                            protoreflect.MessageDescriptor
	fd_MsgUpdateTradeRoute_authority                  protoreflect.FieldDescriptor
	fd_MsgUpdateTradeRoute_reward_denom               protoreflect.FieldDescriptor
	fd_MsgUpdateTradeRoute_host_denom                 protoreflect.FieldDescriptor
	fd_MsgUpdateTradeRoute_pool_id                    protoreflect.FieldDescriptor
	fd_MsgUpdateTradeRoute_max_allowed_swap_loss_rate protoreflect.FieldDescriptor
	fd_MsgUpdateTradeRoute_min_swap_amount            protoreflect.FieldDescriptor
	fd_MsgUpdateTradeRoute_max_swap_amount            protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgUpdateTradeRoute = File_stride_stakeibc_tx_proto.Messages().ByName("MsgUpdateTradeRoute")
	fd_MsgUpdateTradeRoute_authority = md_MsgUpdateTradeRoute.Fields().ByName("authority")
	fd_MsgUpdateTradeRoute_reward_denom = md_MsgUpdateTradeRoute.Fields().ByName("reward_denom")
	fd_MsgUpdateTradeRoute_host_denom = md_MsgUpdateTradeRoute.Fields().ByName("host_denom")
	fd_MsgUpdateTradeRoute_pool_id = md_MsgUpdateTradeRoute.Fields().ByName("pool_id")
	fd_MsgUpdateTradeRoute_max_allowed_swap_loss_rate = md_MsgUpdateTradeRoute.Fields().ByName("max_allowed_swap_loss_rate")
	fd_MsgUpdateTradeRoute_min_swap_amount = md_MsgUpdateTradeRoute.Fields().ByName("min_swap_amount")
	fd_MsgUpdateTradeRoute_max_swap_amount = md_MsgUpdateTradeRoute.Fields().ByName("max_swap_amount")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateTradeRoute)(nil)

type fastReflection_MsgUpdateTradeRoute MsgUpdateTradeRoute

func (x *MsgUpdateTradeRoute) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateTradeRoute)(x)
}

func (x *MsgUpdateTradeRoute) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateTradeRoute_messageType fastReflection_MsgUpdateTradeRoute_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateTradeRoute_messageType{}

type fastReflection_MsgUpdateTradeRoute_messageType struct{}

func (x fastReflection_MsgUpdateTradeRoute_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateTradeRoute)(nil)
}
func (x fastReflection_MsgUpdateTradeRoute_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateTradeRoute)
}
func (x fastReflection_MsgUpdateTradeRoute_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateTradeRoute
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateTradeRoute) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateTradeRoute
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateTradeRoute) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateTradeRoute_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateTradeRoute) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateTradeRoute)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateTradeRoute) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateTradeRoute)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateTradeRoute) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Authority != "" {
		value := protoreflect.ValueOfString(x.Authority)
		if !f(fd_MsgUpdateTradeRoute_authority, value) {
			return
		}
	}
	if x.RewardDenom != "" {
		value := protoreflect.ValueOfString(x.RewardDenom)
		if !f(fd_MsgUpdateTradeRoute_reward_denom, value) {
			return
		}
	}
	if x.HostDenom != "" {
		value := protoreflect.ValueOfString(x.HostDenom)
		if !f(fd_MsgUpdateTradeRoute_host_denom, value) {
			return
		}
	}
	if x.PoolId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.PoolId)
		if !f(fd_MsgUpdateTradeRoute_pool_id, value) {
			return
		}
	}
	if x.MaxAllowedSwapLossRate != "" {
		value := protoreflect.ValueOfString(x.MaxAllowedSwapLossRate)
		if !f(fd_MsgUpdateTradeRoute_max_allowed_swap_loss_rate, value) {
			return
		}
	}
	if x.MinSwapAmount != "" {
		value := protoreflect.ValueOfString(x.MinSwapAmount)
		if !f(fd_MsgUpdateTradeRoute_min_swap_amount, value) {
			return
		}
	}
	if x.MaxSwapAmount != "" {
		value := protoreflect.ValueOfString(x.MaxSwapAmount)
		if !f(fd_MsgUpdateTradeRoute_max_swap_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateTradeRoute) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.MsgUpdateTradeRoute.authority":
		return x.Authority != ""
	case "stride.stakeibc.MsgUpdateTradeRoute.reward_denom":
		return x.RewardDenom != ""
	case "stride.stakeibc.MsgUpdateTradeRoute.host_denom":
		return x.HostDenom != ""
	case "stride.stakeibc.MsgUpdateTradeRoute.pool_id":
		return x.PoolId != uint64(0)
	case "stride.stakeibc.MsgUpdateTradeRoute.max_allowed_swap_loss_rate":
		return x.MaxAllowedSwapLossRate != ""
	case "stride.stakeibc.MsgUpdateTradeRoute.min_swap_amount":
		return x.MinSwapAmount != ""
	case "stride.stakeibc.MsgUpdateTradeRoute.max_swap_amount":
		return x.MaxSwapAmount != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateTradeRoute"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateTradeRoute does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateTradeRoute) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgUpdateTradeRoute.authority":
		x.Authority = ""
	case "stride.stakeibc.MsgUpdateTradeRoute.reward_denom":
		x.RewardDenom = ""
	case "stride.stakeibc.MsgUpdateTradeRoute.host_denom":
		x.HostDenom = ""
	case "stride.stakeibc.MsgUpdateTradeRoute.pool_id":
		x.PoolId = uint64(0)
	case "stride.stakeibc.MsgUpdateTradeRoute.max_allowed_swap_loss_rate":
		x.MaxAllowedSwapLossRate = ""
	case "stride.stakeibc.MsgUpdateTradeRoute.min_swap_amount":
		x.MinSwapAmount = ""
	case "stride.stakeibc.MsgUpdateTradeRoute.max_swap_amount":
		x.MaxSwapAmount = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateTradeRoute"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateTradeRoute does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateTradeRoute) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.MsgUpdateTradeRoute.authority":
		value := x.Authority
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgUpdateTradeRoute.reward_denom":
		value := x.RewardDenom
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgUpdateTradeRoute.host_denom":
		value := x.HostDenom
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgUpdateTradeRoute.pool_id":
		value := x.PoolId
		return protoreflect.ValueOfUint64(value)
	case "stride.stakeibc.MsgUpdateTradeRoute.max_allowed_swap_loss_rate":
		value := x.MaxAllowedSwapLossRate
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgUpdateTradeRoute.min_swap_amount":
		value := x.MinSwapAmount
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgUpdateTradeRoute.max_swap_amount":
		value := x.MaxSwapAmount
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateTradeRoute"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateTradeRoute does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateTradeRoute) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgUpdateTradeRoute.authority":
		x.Authority = value.Interface().(string)
	case "stride.stakeibc.MsgUpdateTradeRoute.reward_denom":
		x.RewardDenom = value.Interface().(string)
	case "stride.stakeibc.MsgUpdateTradeRoute.host_denom":
		x.HostDenom = value.Interface().(string)
	case "stride.stakeibc.MsgUpdateTradeRoute.pool_id":
		x.PoolId = value.Uint()
	case "stride.stakeibc.MsgUpdateTradeRoute.max_allowed_swap_loss_rate":
		x.MaxAllowedSwapLossRate = value.Interface().(string)
	case "stride.stakeibc.MsgUpdateTradeRoute.min_swap_amount":
		x.MinSwapAmount = value.Interface().(string)
	case "stride.stakeibc.MsgUpdateTradeRoute.max_swap_amount":
		x.MaxSwapAmount = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateTradeRoute"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateTradeRoute does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateTradeRoute) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgUpdateTradeRoute.authority":
		panic(fmt.Errorf("field authority of message stride.stakeibc.MsgUpdateTradeRoute is not mutable"))
	case "stride.stakeibc.MsgUpdateTradeRoute.reward_denom":
		panic(fmt.Errorf("field reward_denom of message stride.stakeibc.MsgUpdateTradeRoute is not mutable"))
	case "stride.stakeibc.MsgUpdateTradeRoute.host_denom":
		panic(fmt.Errorf("field host_denom of message stride.stakeibc.MsgUpdateTradeRoute is not mutable"))
	case "stride.stakeibc.MsgUpdateTradeRoute.pool_id":
		panic(fmt.Errorf("field pool_id of message stride.stakeibc.MsgUpdateTradeRoute is not mutable"))
	case "stride.stakeibc.MsgUpdateTradeRoute.max_allowed_swap_loss_rate":
		panic(fmt.Errorf("field max_allowed_swap_loss_rate of message stride.stakeibc.MsgUpdateTradeRoute is not mutable"))
	case "stride.stakeibc.MsgUpdateTradeRoute.min_swap_amount":
		panic(fmt.Errorf("field min_swap_amount of message stride.stakeibc.MsgUpdateTradeRoute is not mutable"))
	case "stride.stakeibc.MsgUpdateTradeRoute.max_swap_amount":
		panic(fmt.Errorf("field max_swap_amount of message stride.stakeibc.MsgUpdateTradeRoute is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateTradeRoute"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateTradeRoute does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateTradeRoute) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgUpdateTradeRoute.authority":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgUpdateTradeRoute.reward_denom":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgUpdateTradeRoute.host_denom":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgUpdateTradeRoute.pool_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "stride.stakeibc.MsgUpdateTradeRoute.max_allowed_swap_loss_rate":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgUpdateTradeRoute.min_swap_amount":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgUpdateTradeRoute.max_swap_amount":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateTradeRoute"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateTradeRoute does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateTradeRoute) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgUpdateTradeRoute", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateTradeRoute) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateTradeRoute) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateTradeRoute) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateTradeRoute) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateTradeRoute)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Authority)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RewardDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.HostDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.PoolId != 0 {
			n += 1 + runtime.Sov(uint64(x.PoolId))
		}
		l = len(x.MaxAllowedSwapLossRate)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.MinSwapAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.MaxSwapAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateTradeRoute)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.MaxSwapAmount) > 0 {
			i -= len(x.MaxSwapAmount)
			copy(dAtA[i:], x.MaxSwapAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MaxSwapAmount)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.MinSwapAmount) > 0 {
			i -= len(x.MinSwapAmount)
			copy(dAtA[i:], x.MinSwapAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MinSwapAmount)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.MaxAllowedSwapLossRate) > 0 {
			i -= len(x.MaxAllowedSwapLossRate)
			copy(dAtA[i:], x.MaxAllowedSwapLossRate)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MaxAllowedSwapLossRate)))
			i--
			dAtA[i] = 0x2a
		}
		if x.PoolId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PoolId))
			i--
			dAtA[i] = 0x20
		}
		if len(x.HostDenom) > 0 {
			i -= len(x.HostDenom)
			copy(dAtA[i:], x.HostDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HostDenom)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.RewardDenom) > 0 {
			i -= len(x.RewardDenom)
			copy(dAtA[i:], x.RewardDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RewardDenom)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Authority) > 0 {
			i -= len(x.Authority)
			copy(dAtA[i:], x.Authority)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Authority)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateTradeRoute)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateTradeRoute: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateTradeRoute: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Authority = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RewardDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HostDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HostDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
				}
				x.PoolId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PoolId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MaxAllowedSwapLossRate", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MaxAllowedSwapLossRate = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MinSwapAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MinSwapAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MaxSwapAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MaxSwapAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUpdateTradeRouteResponse protoreflect.MessageDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgUpdateTradeRouteResponse = File_stride_stakeibc_tx_proto.Messages().ByName("MsgUpdateTradeRouteResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateTradeRouteResponse)(nil)

type fastReflection_MsgUpdateTradeRouteResponse MsgUpdateTradeRouteResponse

func (x *MsgUpdateTradeRouteResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateTradeRouteResponse)(x)
}

func (x *MsgUpdateTradeRouteResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateTradeRouteResponse_messageType fastReflection_MsgUpdateTradeRouteResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateTradeRouteResponse_messageType{}

type fastReflection_MsgUpdateTradeRouteResponse_messageType struct{}

func (x fastReflection_MsgUpdateTradeRouteResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateTradeRouteResponse)(nil)
}
func (x fastReflection_MsgUpdateTradeRouteResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateTradeRouteResponse)
}
func (x fastReflection_MsgUpdateTradeRouteResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateTradeRouteResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateTradeRouteResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateTradeRouteResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateTradeRouteResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateTradeRouteResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateTradeRouteResponse) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateTradeRouteResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateTradeRouteResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateTradeRouteResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateTradeRouteResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateTradeRouteResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateTradeRouteResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateTradeRouteResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateTradeRouteResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateTradeRouteResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateTradeRouteResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateTradeRouteResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateTradeRouteResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateTradeRouteResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateTradeRouteResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateTradeRouteResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateTradeRouteResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateTradeRouteResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateTradeRouteResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateTradeRouteResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateTradeRouteResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateTradeRouteResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateTradeRouteResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateTradeRouteResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgUpdateTradeRouteResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateTradeRouteResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateTradeRouteResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateTradeRouteResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateTradeRouteResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateTradeRouteResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateTradeRouteResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateTradeRouteResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateTradeRouteResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateTradeRouteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgSetCommunityPoolRebate                               protoreflect.MessageDescriptor
	fd_MsgSetCommunityPoolRebate_creator                       protoreflect.FieldDescriptor
	fd_MsgSetCommunityPoolRebate_chain_id                      protoreflect.FieldDescriptor
	fd_MsgSetCommunityPoolRebate_rebate_rate                   protoreflect.FieldDescriptor
	fd_MsgSetCommunityPoolRebate_liquid_staked_st_token_amount protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgSetCommunityPoolRebate = File_stride_stakeibc_tx_proto.Messages().ByName("MsgSetCommunityPoolRebate")
	fd_MsgSetCommunityPoolRebate_creator = md_MsgSetCommunityPoolRebate.Fields().ByName("creator")
	fd_MsgSetCommunityPoolRebate_chain_id = md_MsgSetCommunityPoolRebate.Fields().ByName("chain_id")
	fd_MsgSetCommunityPoolRebate_rebate_rate = md_MsgSetCommunityPoolRebate.Fields().ByName("rebate_rate")
	fd_MsgSetCommunityPoolRebate_liquid_staked_st_token_amount = md_MsgSetCommunityPoolRebate.Fields().ByName("liquid_staked_st_token_amount")
}

var _ protoreflect.Message = (*fastReflection_MsgSetCommunityPoolRebate)(nil)

type fastReflection_MsgSetCommunityPoolRebate MsgSetCommunityPoolRebate

func (x *MsgSetCommunityPoolRebate) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgSetCommunityPoolRebate)(x)
}

func (x *MsgSetCommunityPoolRebate) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgSetCommunityPoolRebate_messageType fastReflection_MsgSetCommunityPoolRebate_messageType
var _ protoreflect.MessageType = fastReflection_MsgSetCommunityPoolRebate_messageType{}

type fastReflection_MsgSetCommunityPoolRebate_messageType struct{}

func (x fastReflection_MsgSetCommunityPoolRebate_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgSetCommunityPoolRebate)(nil)
}
func (x fastReflection_MsgSetCommunityPoolRebate_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgSetCommunityPoolRebate)
}
func (x fastReflection_MsgSetCommunityPoolRebate_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSetCommunityPoolRebate
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgSetCommunityPoolRebate) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSetCommunityPoolRebate
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgSetCommunityPoolRebate) Type() protoreflect.MessageType {
	return _fastReflection_MsgSetCommunityPoolRebate_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgSetCommunityPoolRebate) New() protoreflect.Message {
	return new(fastReflection_MsgSetCommunityPoolRebate)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgSetCommunityPoolRebate) Interface() protoreflect.ProtoMessage {
	return (*MsgSetCommunityPoolRebate)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgSetCommunityPoolRebate) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgSetCommunityPoolRebate_creator, value) {
			return
		}
	}
	if x.ChainId != "" {
		value := protoreflect.ValueOfString(x.ChainId)
		if !f(fd_MsgSetCommunityPoolRebate_chain_id, value) {
			return
		}
	}
	if x.RebateRate != "" {
		value := protoreflect.ValueOfString(x.RebateRate)
		if !f(fd_MsgSetCommunityPoolRebate_rebate_rate, value) {
			return
		}
	}
	if x.LiquidStakedStTokenAmount != "" {
		value := protoreflect.ValueOfString(x.LiquidStakedStTokenAmount)
		if !f(fd_MsgSetCommunityPoolRebate_liquid_staked_st_token_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgSetCommunityPoolRebate) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.MsgSetCommunityPoolRebate.creator":
		return x.Creator != ""
	case "stride.stakeibc.MsgSetCommunityPoolRebate.chain_id":
		return x.ChainId != ""
	case "stride.stakeibc.MsgSetCommunityPoolRebate.rebate_rate":
		return x.RebateRate != ""
	case "stride.stakeibc.MsgSetCommunityPoolRebate.liquid_staked_st_token_amount":
		return x.LiquidStakedStTokenAmount != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgSetCommunityPoolRebate"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgSetCommunityPoolRebate does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetCommunityPoolRebate) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgSetCommunityPoolRebate.creator":
		x.Creator = ""
	case "stride.stakeibc.MsgSetCommunityPoolRebate.chain_id":
		x.ChainId = ""
	case "stride.stakeibc.MsgSetCommunityPoolRebate.rebate_rate":
		x.RebateRate = ""
	case "stride.stakeibc.MsgSetCommunityPoolRebate.liquid_staked_st_token_amount":
		x.LiquidStakedStTokenAmount = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgSetCommunityPoolRebate"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgSetCommunityPoolRebate does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgSetCommunityPoolRebate) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.MsgSetCommunityPoolRebate.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgSetCommunityPoolRebate.chain_id":
		value := x.ChainId
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgSetCommunityPoolRebate.rebate_rate":
		value := x.RebateRate
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgSetCommunityPoolRebate.liquid_staked_st_token_amount":
		value := x.LiquidStakedStTokenAmount
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgSetCommunityPoolRebate"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgSetCommunityPoolRebate does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetCommunityPoolRebate) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgSetCommunityPoolRebate.creator":
		x.Creator = value.Interface().(string)
	case "stride.stakeibc.MsgSetCommunityPoolRebate.chain_id":
		x.ChainId = value.Interface().(string)
	case "stride.stakeibc.MsgSetCommunityPoolRebate.rebate_rate":
		x.RebateRate = value.Interface().(string)
	case "stride.stakeibc.MsgSetCommunityPoolRebate.liquid_staked_st_token_amount":
		x.LiquidStakedStTokenAmount = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgSetCommunityPoolRebate"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgSetCommunityPoolRebate does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetCommunityPoolRebate) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgSetCommunityPoolRebate.creator":
		panic(fmt.Errorf("field creator of message stride.stakeibc.MsgSetCommunityPoolRebate is not mutable"))
	case "stride.stakeibc.MsgSetCommunityPoolRebate.chain_id":
		panic(fmt.Errorf("field chain_id of message stride.stakeibc.MsgSetCommunityPoolRebate is not mutable"))
	case "stride.stakeibc.MsgSetCommunityPoolRebate.rebate_rate":
		panic(fmt.Errorf("field rebate_rate of message stride.stakeibc.MsgSetCommunityPoolRebate is not mutable"))
	case "stride.stakeibc.MsgSetCommunityPoolRebate.liquid_staked_st_token_amount":
		panic(fmt.Errorf("field liquid_staked_st_token_amount of message stride.stakeibc.MsgSetCommunityPoolRebate is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgSetCommunityPoolRebate"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgSetCommunityPoolRebate does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgSetCommunityPoolRebate) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgSetCommunityPoolRebate.creator":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgSetCommunityPoolRebate.chain_id":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgSetCommunityPoolRebate.rebate_rate":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgSetCommunityPoolRebate.liquid_staked_st_token_amount":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgSetCommunityPoolRebate"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgSetCommunityPoolRebate does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgSetCommunityPoolRebate) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgSetCommunityPoolRebate", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgSetCommunityPoolRebate) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetCommunityPoolRebate) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgSetCommunityPoolRebate) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgSetCommunityPoolRebate) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgSetCommunityPoolRebate)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChainId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RebateRate)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.LiquidStakedStTokenAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgSetCommunityPoolRebate)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.LiquidStakedStTokenAmount) > 0 {
			i -= len(x.LiquidStakedStTokenAmount)
			copy(dAtA[i:], x.LiquidStakedStTokenAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.LiquidStakedStTokenAmount)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.RebateRate) > 0 {
			i -= len(x.RebateRate)
			copy(dAtA[i:], x.RebateRate)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RebateRate)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ChainId) > 0 {
			i -= len(x.ChainId)
			copy(dAtA[i:], x.ChainId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgSetCommunityPoolRebate)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSetCommunityPoolRebate: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSetCommunityPoolRebate: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RebateRate", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RebateRate = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LiquidStakedStTokenAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LiquidStakedStTokenAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgSetCommunityPoolRebateResponse protoreflect.MessageDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgSetCommunityPoolRebateResponse = File_stride_stakeibc_tx_proto.Messages().ByName("MsgSetCommunityPoolRebateResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgSetCommunityPoolRebateResponse)(nil)

type fastReflection_MsgSetCommunityPoolRebateResponse MsgSetCommunityPoolRebateResponse

func (x *MsgSetCommunityPoolRebateResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgSetCommunityPoolRebateResponse)(x)
}

func (x *MsgSetCommunityPoolRebateResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgSetCommunityPoolRebateResponse_messageType fastReflection_MsgSetCommunityPoolRebateResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgSetCommunityPoolRebateResponse_messageType{}

type fastReflection_MsgSetCommunityPoolRebateResponse_messageType struct{}

func (x fastReflection_MsgSetCommunityPoolRebateResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgSetCommunityPoolRebateResponse)(nil)
}
func (x fastReflection_MsgSetCommunityPoolRebateResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgSetCommunityPoolRebateResponse)
}
func (x fastReflection_MsgSetCommunityPoolRebateResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSetCommunityPoolRebateResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgSetCommunityPoolRebateResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSetCommunityPoolRebateResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgSetCommunityPoolRebateResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgSetCommunityPoolRebateResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgSetCommunityPoolRebateResponse) New() protoreflect.Message {
	return new(fastReflection_MsgSetCommunityPoolRebateResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgSetCommunityPoolRebateResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgSetCommunityPoolRebateResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgSetCommunityPoolRebateResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgSetCommunityPoolRebateResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgSetCommunityPoolRebateResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgSetCommunityPoolRebateResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetCommunityPoolRebateResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgSetCommunityPoolRebateResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgSetCommunityPoolRebateResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgSetCommunityPoolRebateResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgSetCommunityPoolRebateResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgSetCommunityPoolRebateResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetCommunityPoolRebateResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgSetCommunityPoolRebateResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgSetCommunityPoolRebateResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetCommunityPoolRebateResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgSetCommunityPoolRebateResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgSetCommunityPoolRebateResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgSetCommunityPoolRebateResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgSetCommunityPoolRebateResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgSetCommunityPoolRebateResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgSetCommunityPoolRebateResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgSetCommunityPoolRebateResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgSetCommunityPoolRebateResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetCommunityPoolRebateResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgSetCommunityPoolRebateResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgSetCommunityPoolRebateResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgSetCommunityPoolRebateResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgSetCommunityPoolRebateResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgSetCommunityPoolRebateResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSetCommunityPoolRebateResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSetCommunityPoolRebateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgToggleTradeController                   protoreflect.MessageDescriptor
	fd_MsgToggleTradeController_creator           protoreflect.FieldDescriptor
	fd_MsgToggleTradeController_chain_id          protoreflect.FieldDescriptor
	fd_MsgToggleTradeController_permission_change protoreflect.FieldDescriptor
	fd_MsgToggleTradeController_address           protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgToggleTradeController = File_stride_stakeibc_tx_proto.Messages().ByName("MsgToggleTradeController")
	fd_MsgToggleTradeController_creator = md_MsgToggleTradeController.Fields().ByName("creator")
	fd_MsgToggleTradeController_chain_id = md_MsgToggleTradeController.Fields().ByName("chain_id")
	fd_MsgToggleTradeController_permission_change = md_MsgToggleTradeController.Fields().ByName("permission_change")
	fd_MsgToggleTradeController_address = md_MsgToggleTradeController.Fields().ByName("address")
}

var _ protoreflect.Message = (*fastReflection_MsgToggleTradeController)(nil)

type fastReflection_MsgToggleTradeController MsgToggleTradeController

func (x *MsgToggleTradeController) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgToggleTradeController)(x)
}

func (x *MsgToggleTradeController) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgToggleTradeController_messageType fastReflection_MsgToggleTradeController_messageType
var _ protoreflect.MessageType = fastReflection_MsgToggleTradeController_messageType{}

type fastReflection_MsgToggleTradeController_messageType struct{}

func (x fastReflection_MsgToggleTradeController_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgToggleTradeController)(nil)
}
func (x fastReflection_MsgToggleTradeController_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgToggleTradeController)
}
func (x fastReflection_MsgToggleTradeController_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgToggleTradeController
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgToggleTradeController) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgToggleTradeController
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgToggleTradeController) Type() protoreflect.MessageType {
	return _fastReflection_MsgToggleTradeController_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgToggleTradeController) New() protoreflect.Message {
	return new(fastReflection_MsgToggleTradeController)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgToggleTradeController) Interface() protoreflect.ProtoMessage {
	return (*MsgToggleTradeController)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgToggleTradeController) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgToggleTradeController_creator, value) {
			return
		}
	}
	if x.ChainId != "" {
		value := protoreflect.ValueOfString(x.ChainId)
		if !f(fd_MsgToggleTradeController_chain_id, value) {
			return
		}
	}
	if x.PermissionChange != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.PermissionChange))
		if !f(fd_MsgToggleTradeController_permission_change, value) {
			return
		}
	}
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_MsgToggleTradeController_address, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgToggleTradeController) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.MsgToggleTradeController.creator":
		return x.Creator != ""
	case "stride.stakeibc.MsgToggleTradeController.chain_id":
		return x.ChainId != ""
	case "stride.stakeibc.MsgToggleTradeController.permission_change":
		return x.PermissionChange != 0
	case "stride.stakeibc.MsgToggleTradeController.address":
		return x.Address != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgToggleTradeController"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgToggleTradeController does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgToggleTradeController) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgToggleTradeController.creator":
		x.Creator = ""
	case "stride.stakeibc.MsgToggleTradeController.chain_id":
		x.ChainId = ""
	case "stride.stakeibc.MsgToggleTradeController.permission_change":
		x.PermissionChange = 0
	case "stride.stakeibc.MsgToggleTradeController.address":
		x.Address = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgToggleTradeController"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgToggleTradeController does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgToggleTradeController) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.MsgToggleTradeController.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgToggleTradeController.chain_id":
		value := x.ChainId
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgToggleTradeController.permission_change":
		value := x.PermissionChange
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "stride.stakeibc.MsgToggleTradeController.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgToggleTradeController"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgToggleTradeController does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgToggleTradeController) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgToggleTradeController.creator":
		x.Creator = value.Interface().(string)
	case "stride.stakeibc.MsgToggleTradeController.chain_id":
		x.ChainId = value.Interface().(string)
	case "stride.stakeibc.MsgToggleTradeController.permission_change":
		x.PermissionChange = (AuthzPermissionChange)(value.Enum())
	case "stride.stakeibc.MsgToggleTradeController.address":
		x.Address = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgToggleTradeController"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgToggleTradeController does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgToggleTradeController) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgToggleTradeController.creator":
		panic(fmt.Errorf("field creator of message stride.stakeibc.MsgToggleTradeController is not mutable"))
	case "stride.stakeibc.MsgToggleTradeController.chain_id":
		panic(fmt.Errorf("field chain_id of message stride.stakeibc.MsgToggleTradeController is not mutable"))
	case "stride.stakeibc.MsgToggleTradeController.permission_change":
		panic(fmt.Errorf("field permission_change of message stride.stakeibc.MsgToggleTradeController is not mutable"))
	case "stride.stakeibc.MsgToggleTradeController.address":
		panic(fmt.Errorf("field address of message stride.stakeibc.MsgToggleTradeController is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgToggleTradeController"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgToggleTradeController does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgToggleTradeController) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgToggleTradeController.creator":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgToggleTradeController.chain_id":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgToggleTradeController.permission_change":
		return protoreflect.ValueOfEnum(0)
	case "stride.stakeibc.MsgToggleTradeController.address":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgToggleTradeController"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgToggleTradeController does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgToggleTradeController) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgToggleTradeController", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgToggleTradeController) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgToggleTradeController) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgToggleTradeController) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgToggleTradeController) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgToggleTradeController)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChainId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.PermissionChange != 0 {
			n += 1 + runtime.Sov(uint64(x.PermissionChange))
		}
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgToggleTradeController)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0x22
		}
		if x.PermissionChange != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PermissionChange))
			i--
			dAtA[i] = 0x18
		}
		if len(x.ChainId) > 0 {
			i -= len(x.ChainId)
			copy(dAtA[i:], x.ChainId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgToggleTradeController)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgToggleTradeController: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgToggleTradeController: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PermissionChange", wireType)
				}
				x.PermissionChange = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PermissionChange |= AuthzPermissionChange(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgToggleTradeControllerResponse protoreflect.MessageDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgToggleTradeControllerResponse = File_stride_stakeibc_tx_proto.Messages().ByName("MsgToggleTradeControllerResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgToggleTradeControllerResponse)(nil)

type fastReflection_MsgToggleTradeControllerResponse MsgToggleTradeControllerResponse

func (x *MsgToggleTradeControllerResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgToggleTradeControllerResponse)(x)
}

func (x *MsgToggleTradeControllerResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgToggleTradeControllerResponse_messageType fastReflection_MsgToggleTradeControllerResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgToggleTradeControllerResponse_messageType{}

type fastReflection_MsgToggleTradeControllerResponse_messageType struct{}

func (x fastReflection_MsgToggleTradeControllerResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgToggleTradeControllerResponse)(nil)
}
func (x fastReflection_MsgToggleTradeControllerResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgToggleTradeControllerResponse)
}
func (x fastReflection_MsgToggleTradeControllerResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgToggleTradeControllerResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgToggleTradeControllerResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgToggleTradeControllerResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgToggleTradeControllerResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgToggleTradeControllerResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgToggleTradeControllerResponse) New() protoreflect.Message {
	return new(fastReflection_MsgToggleTradeControllerResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgToggleTradeControllerResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgToggleTradeControllerResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgToggleTradeControllerResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgToggleTradeControllerResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgToggleTradeControllerResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgToggleTradeControllerResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgToggleTradeControllerResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgToggleTradeControllerResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgToggleTradeControllerResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgToggleTradeControllerResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgToggleTradeControllerResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgToggleTradeControllerResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgToggleTradeControllerResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgToggleTradeControllerResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgToggleTradeControllerResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgToggleTradeControllerResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgToggleTradeControllerResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgToggleTradeControllerResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgToggleTradeControllerResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgToggleTradeControllerResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgToggleTradeControllerResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgToggleTradeControllerResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgToggleTradeControllerResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgToggleTradeControllerResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgToggleTradeControllerResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgToggleTradeControllerResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgToggleTradeControllerResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgToggleTradeControllerResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgToggleTradeControllerResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgToggleTradeControllerResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgToggleTradeControllerResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgToggleTradeControllerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUpdateHostZoneParams                         protoreflect.MessageDescriptor
	fd_MsgUpdateHostZoneParams_authority               protoreflect.FieldDescriptor
	fd_MsgUpdateHostZoneParams_chain_id                protoreflect.FieldDescriptor
	fd_MsgUpdateHostZoneParams_max_messages_per_ica_tx protoreflect.FieldDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgUpdateHostZoneParams = File_stride_stakeibc_tx_proto.Messages().ByName("MsgUpdateHostZoneParams")
	fd_MsgUpdateHostZoneParams_authority = md_MsgUpdateHostZoneParams.Fields().ByName("authority")
	fd_MsgUpdateHostZoneParams_chain_id = md_MsgUpdateHostZoneParams.Fields().ByName("chain_id")
	fd_MsgUpdateHostZoneParams_max_messages_per_ica_tx = md_MsgUpdateHostZoneParams.Fields().ByName("max_messages_per_ica_tx")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateHostZoneParams)(nil)

type fastReflection_MsgUpdateHostZoneParams MsgUpdateHostZoneParams

func (x *MsgUpdateHostZoneParams) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateHostZoneParams)(x)
}

func (x *MsgUpdateHostZoneParams) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateHostZoneParams_messageType fastReflection_MsgUpdateHostZoneParams_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateHostZoneParams_messageType{}

type fastReflection_MsgUpdateHostZoneParams_messageType struct{}

func (x fastReflection_MsgUpdateHostZoneParams_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateHostZoneParams)(nil)
}
func (x fastReflection_MsgUpdateHostZoneParams_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateHostZoneParams)
}
func (x fastReflection_MsgUpdateHostZoneParams_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateHostZoneParams
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateHostZoneParams) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateHostZoneParams
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateHostZoneParams) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateHostZoneParams_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateHostZoneParams) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateHostZoneParams)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateHostZoneParams) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateHostZoneParams)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateHostZoneParams) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Authority != "" {
		value := protoreflect.ValueOfString(x.Authority)
		if !f(fd_MsgUpdateHostZoneParams_authority, value) {
			return
		}
	}
	if x.ChainId != "" {
		value := protoreflect.ValueOfString(x.ChainId)
		if !f(fd_MsgUpdateHostZoneParams_chain_id, value) {
			return
		}
	}
	if x.MaxMessagesPerIcaTx != uint64(0) {
		value := protoreflect.ValueOfUint64(x.MaxMessagesPerIcaTx)
		if !f(fd_MsgUpdateHostZoneParams_max_messages_per_ica_tx, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateHostZoneParams) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.stakeibc.MsgUpdateHostZoneParams.authority":
		return x.Authority != ""
	case "stride.stakeibc.MsgUpdateHostZoneParams.chain_id":
		return x.ChainId != ""
	case "stride.stakeibc.MsgUpdateHostZoneParams.max_messages_per_ica_tx":
		return x.MaxMessagesPerIcaTx != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateHostZoneParams"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateHostZoneParams does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateHostZoneParams) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgUpdateHostZoneParams.authority":
		x.Authority = ""
	case "stride.stakeibc.MsgUpdateHostZoneParams.chain_id":
		x.ChainId = ""
	case "stride.stakeibc.MsgUpdateHostZoneParams.max_messages_per_ica_tx":
		x.MaxMessagesPerIcaTx = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateHostZoneParams"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateHostZoneParams does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateHostZoneParams) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.stakeibc.MsgUpdateHostZoneParams.authority":
		value := x.Authority
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgUpdateHostZoneParams.chain_id":
		value := x.ChainId
		return protoreflect.ValueOfString(value)
	case "stride.stakeibc.MsgUpdateHostZoneParams.max_messages_per_ica_tx":
		value := x.MaxMessagesPerIcaTx
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateHostZoneParams"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateHostZoneParams does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateHostZoneParams) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.stakeibc.MsgUpdateHostZoneParams.authority":
		x.Authority = value.Interface().(string)
	case "stride.stakeibc.MsgUpdateHostZoneParams.chain_id":
		x.ChainId = value.Interface().(string)
	case "stride.stakeibc.MsgUpdateHostZoneParams.max_messages_per_ica_tx":
		x.MaxMessagesPerIcaTx = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateHostZoneParams"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateHostZoneParams does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateHostZoneParams) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgUpdateHostZoneParams.authority":
		panic(fmt.Errorf("field authority of message stride.stakeibc.MsgUpdateHostZoneParams is not mutable"))
	case "stride.stakeibc.MsgUpdateHostZoneParams.chain_id":
		panic(fmt.Errorf("field chain_id of message stride.stakeibc.MsgUpdateHostZoneParams is not mutable"))
	case "stride.stakeibc.MsgUpdateHostZoneParams.max_messages_per_ica_tx":
		panic(fmt.Errorf("field max_messages_per_ica_tx of message stride.stakeibc.MsgUpdateHostZoneParams is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateHostZoneParams"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateHostZoneParams does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateHostZoneParams) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.stakeibc.MsgUpdateHostZoneParams.authority":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgUpdateHostZoneParams.chain_id":
		return protoreflect.ValueOfString("")
	case "stride.stakeibc.MsgUpdateHostZoneParams.max_messages_per_ica_tx":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateHostZoneParams"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateHostZoneParams does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateHostZoneParams) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgUpdateHostZoneParams", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateHostZoneParams) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateHostZoneParams) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateHostZoneParams) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateHostZoneParams) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateHostZoneParams)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Authority)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChainId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.MaxMessagesPerIcaTx != 0 {
			n += 1 + runtime.Sov(uint64(x.MaxMessagesPerIcaTx))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateHostZoneParams)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.MaxMessagesPerIcaTx != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.MaxMessagesPerIcaTx))
			i--
			dAtA[i] = 0x18
		}
		if len(x.ChainId) > 0 {
			i -= len(x.ChainId)
			copy(dAtA[i:], x.ChainId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Authority) > 0 {
			i -= len(x.Authority)
			copy(dAtA[i:], x.Authority)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Authority)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateHostZoneParams)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateHostZoneParams: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateHostZoneParams: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Authority = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MaxMessagesPerIcaTx", wireType)
				}
				x.MaxMessagesPerIcaTx = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.MaxMessagesPerIcaTx |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUpdateHostZoneParamsResponse protoreflect.MessageDescriptor
)

func init() {
	file_stride_stakeibc_tx_proto_init()
	md_MsgUpdateHostZoneParamsResponse = File_stride_stakeibc_tx_proto.Messages().ByName("MsgUpdateHostZoneParamsResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateHostZoneParamsResponse)(nil)

type fastReflection_MsgUpdateHostZoneParamsResponse MsgUpdateHostZoneParamsResponse

func (x *MsgUpdateHostZoneParamsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateHostZoneParamsResponse)(x)
}

func (x *MsgUpdateHostZoneParamsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_stakeibc_tx_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateHostZoneParamsResponse_messageType fastReflection_MsgUpdateHostZoneParamsResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateHostZoneParamsResponse_messageType{}

type fastReflection_MsgUpdateHostZoneParamsResponse_messageType struct{}

func (x fastReflection_MsgUpdateHostZoneParamsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateHostZoneParamsResponse)(nil)
}
func (x fastReflection_MsgUpdateHostZoneParamsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateHostZoneParamsResponse)
}
func (x fastReflection_MsgUpdateHostZoneParamsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateHostZoneParamsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateHostZoneParamsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateHostZoneParamsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateHostZoneParamsResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateHostZoneParamsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateHostZoneParamsResponse) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateHostZoneParamsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateHostZoneParamsResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateHostZoneParamsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateHostZoneParamsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateHostZoneParamsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateHostZoneParamsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateHostZoneParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateHostZoneParamsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateHostZoneParamsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateHostZoneParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateHostZoneParamsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateHostZoneParamsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateHostZoneParamsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateHostZoneParamsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateHostZoneParamsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateHostZoneParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateHostZoneParamsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateHostZoneParamsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateHostZoneParamsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateHostZoneParamsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.stakeibc.MsgUpdateHostZoneParamsResponse"))
		}
		panic(fmt.Errorf("message stride.stakeibc.MsgUpdateHostZoneParamsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateHostZoneParamsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.stakeibc.MsgUpdateHostZoneParamsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateHostZoneParamsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateHostZoneParamsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateHostZoneParamsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateHostZoneParamsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateHostZoneParamsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateHostZoneParamsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateHostZoneParamsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateHostZoneParamsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateHostZoneParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: stride/stakeibc/tx.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthzPermissionChange int32

const (
	// Grant the address trade permissions
	AuthzPermissionChange_GRANT AuthzPermissionChange = 0
	// Revoke trade permissions from the address
	AuthzPermissionChange_REVOKE AuthzPermissionChange = 1
)

// Enum value maps for AuthzPermissionChange.
var (
	AuthzPermissionChange_name = map[int32]string{
		0: "GRANT",
		1: "REVOKE",
	}
	AuthzPermissionChange_value = map[string]int32{
		"GRANT":  0,
		"REVOKE": 1,
	}
)

func (x AuthzPermissionChange) Enum() *AuthzPermissionChange {
	p := new(AuthzPermissionChange)
	*p = x
	return p
}

func (x AuthzPermissionChange) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthzPermissionChange) Descriptor() protoreflect.EnumDescriptor {
	return file_stride_stakeibc_tx_proto_enumTypes[0].Descriptor()
}

func (AuthzPermissionChange) Type() protoreflect.EnumType {
	return &file_stride_stakeibc_tx_proto_enumTypes[0]
}

func (x AuthzPermissionChange) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthzPermissionChange.Descriptor instead.
func (AuthzPermissionChange) EnumDescriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{0}
}

type MsgUpdateInnerRedemptionRateBounds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator                string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ChainId                string `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	MinInnerRedemptionRate string `protobuf:"bytes,3,opt,name=min_inner_redemption_rate,json=minInnerRedemptionRate,proto3" json:"min_inner_redemption_rate,omitempty"`
	MaxInnerRedemptionRate string `protobuf:"bytes,4,opt,name=max_inner_redemption_rate,json=maxInnerRedemptionRate,proto3" json:"max_inner_redemption_rate,omitempty"`
}

func (x *MsgUpdateInnerRedemptionRateBounds) Reset() {
	*x = MsgUpdateInnerRedemptionRateBounds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateInnerRedemptionRateBounds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateInnerRedemptionRateBounds) ProtoMessage() {}

// Deprecated: Use MsgUpdateInnerRedemptionRateBounds.ProtoReflect.Descriptor instead.
func (*MsgUpdateInnerRedemptionRateBounds) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{0}
}

func (x *MsgUpdateInnerRedemptionRateBounds) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateInnerRedemptionRateBounds) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *MsgUpdateInnerRedemptionRateBounds) GetMinInnerRedemptionRate() string {
	if x != nil {
		return x.MinInnerRedemptionRate
	}
	return ""
}

func (x *MsgUpdateInnerRedemptionRateBounds) GetMaxInnerRedemptionRate() string {
	if x != nil {
		return x.MaxInnerRedemptionRate
	}
	return ""
}

type MsgUpdateInnerRedemptionRateBoundsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateInnerRedemptionRateBoundsResponse) Reset() {
	*x = MsgUpdateInnerRedemptionRateBoundsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateInnerRedemptionRateBoundsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateInnerRedemptionRateBoundsResponse) ProtoMessage() {}

// Deprecated: Use MsgUpdateInnerRedemptionRateBoundsResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateInnerRedemptionRateBoundsResponse) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{1}
}

type MsgLiquidStake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Amount    string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	HostDenom string `protobuf:"bytes,3,opt,name=host_denom,json=hostDenom,proto3" json:"host_denom,omitempty"`
}

func (x *MsgLiquidStake) Reset() {
	*x = MsgLiquidStake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgLiquidStake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgLiquidStake) ProtoMessage() {}

// Deprecated: Use MsgLiquidStake.ProtoReflect.Descriptor instead.
func (*MsgLiquidStake) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{2}
}

func (x *MsgLiquidStake) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgLiquidStake) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *MsgLiquidStake) GetHostDenom() string {
	if x != nil {
		return x.HostDenom
	}
	return ""
}

type MsgLiquidStakeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StToken *v1beta1.Coin `protobuf:"bytes,1,opt,name=st_token,json=stToken,proto3" json:"st_token,omitempty"`
}

func (x *MsgLiquidStakeResponse) Reset() {
	*x = MsgLiquidStakeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgLiquidStakeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgLiquidStakeResponse) ProtoMessage() {}

// Deprecated: Use MsgLiquidStakeResponse.ProtoReflect.Descriptor instead.
func (*MsgLiquidStakeResponse) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{3}
}

func (x *MsgLiquidStakeResponse) GetStToken() *v1beta1.Coin {
	if x != nil {
		return x.StToken
	}
	return nil
}

type MsgLSMLiquidStake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator          string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Amount           string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	LsmTokenIbcDenom string `protobuf:"bytes,3,opt,name=lsm_token_ibc_denom,json=lsmTokenIbcDenom,proto3" json:"lsm_token_ibc_denom,omitempty"`
}

func (x *MsgLSMLiquidStake) Reset() {
	*x = MsgLSMLiquidStake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgLSMLiquidStake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgLSMLiquidStake) ProtoMessage() {}

// Deprecated: Use MsgLSMLiquidStake.ProtoReflect.Descriptor instead.
func (*MsgLSMLiquidStake) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{4}
}

func (x *MsgLSMLiquidStake) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgLSMLiquidStake) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *MsgLSMLiquidStake) GetLsmTokenIbcDenom() string {
	if x != nil {
		return x.LsmTokenIbcDenom
	}
	return ""
}

type MsgLSMLiquidStakeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionComplete bool `protobuf:"varint,1,opt,name=transaction_complete,json=transactionComplete,proto3" json:"transaction_complete,omitempty"`
}

func (x *MsgLSMLiquidStakeResponse) Reset() {
	*x = MsgLSMLiquidStakeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgLSMLiquidStakeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgLSMLiquidStakeResponse) ProtoMessage() {}

// Deprecated: Use MsgLSMLiquidStakeResponse.ProtoReflect.Descriptor instead.
func (*MsgLSMLiquidStakeResponse) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{5}
}

func (x *MsgLSMLiquidStakeResponse) GetTransactionComplete() bool {
	if x != nil {
		return x.TransactionComplete
	}
	return false
}

type MsgClearBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ChainId string `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Amount  string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Channel string `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *MsgClearBalance) Reset() {
	*x = MsgClearBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgClearBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgClearBalance) ProtoMessage() {}

// Deprecated: Use MsgClearBalance.ProtoReflect.Descriptor instead.
func (*MsgClearBalance) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{6}
}

func (x *MsgClearBalance) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgClearBalance) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *MsgClearBalance) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *MsgClearBalance) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

type MsgClearBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgClearBalanceResponse) Reset() {
	*x = MsgClearBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgClearBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgClearBalanceResponse) ProtoMessage() {}

// Deprecated: Use MsgClearBalanceResponse.ProtoReflect.Descriptor instead.
func (*MsgClearBalanceResponse) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{7}
}

type MsgRedeemStake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Amount   string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	HostZone string `protobuf:"bytes,3,opt,name=host_zone,json=hostZone,proto3" json:"host_zone,omitempty"`
	Receiver string `protobuf:"bytes,4,opt,name=receiver,proto3" json:"receiver,omitempty"`
}

func (x *MsgRedeemStake) Reset() {
	*x = MsgRedeemStake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRedeemStake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRedeemStake) ProtoMessage() {}

// Deprecated: Use MsgRedeemStake.ProtoReflect.Descriptor instead.
func (*MsgRedeemStake) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{8}
}

func (x *MsgRedeemStake) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgRedeemStake) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *MsgRedeemStake) GetHostZone() string {
	if x != nil {
		return x.HostZone
	}
	return ""
}

func (x *MsgRedeemStake) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

type MsgRedeemStakeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgRedeemStakeResponse) Reset() {
	*x = MsgRedeemStakeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRedeemStakeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRedeemStakeResponse) ProtoMessage() {}

// Deprecated: Use MsgRedeemStakeResponse.ProtoReflect.Descriptor instead.
func (*MsgRedeemStakeResponse) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{9}
}

// next: 15
type MsgRegisterHostZone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionId                 string `protobuf:"bytes,2,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	Bech32Prefix                 string `protobuf:"bytes,12,opt,name=bech32prefix,proto3" json:"bech32prefix,omitempty"`
	HostDenom                    string `protobuf:"bytes,4,opt,name=host_denom,json=hostDenom,proto3" json:"host_denom,omitempty"`
	IbcDenom                     string `protobuf:"bytes,5,opt,name=ibc_denom,json=ibcDenom,proto3" json:"ibc_denom,omitempty"`
	Creator                      string `protobuf:"bytes,6,opt,name=creator,proto3" json:"creator,omitempty"`
	TransferChannelId            string `protobuf:"bytes,10,opt,name=transfer_channel_id,json=transferChannelId,proto3" json:"transfer_channel_id,omitempty"`
	UnbondingPeriod              uint64 `protobuf:"varint,11,opt,name=unbonding_period,json=unbondingPeriod,proto3" json:"unbonding_period,omitempty"`
	MinRedemptionRate            string `protobuf:"bytes,13,opt,name=min_redemption_rate,json=minRedemptionRate,proto3" json:"min_redemption_rate,omitempty"`
	MaxRedemptionRate            string `protobuf:"bytes,14,opt,name=max_redemption_rate,json=maxRedemptionRate,proto3" json:"max_redemption_rate,omitempty"`
	LsmLiquidStakeEnabled        bool   `protobuf:"varint,15,opt,name=lsm_liquid_stake_enabled,json=lsmLiquidStakeEnabled,proto3" json:"lsm_liquid_stake_enabled,omitempty"`
	CommunityPoolTreasuryAddress string `protobuf:"bytes,16,opt,name=community_pool_treasury_address,json=communityPoolTreasuryAddress,proto3" json:"community_pool_treasury_address,omitempty"`
	MaxMessagesPerIcaTx          uint64 `protobuf:"varint,17,opt,name=max_messages_per_ica_tx,json=maxMessagesPerIcaTx,proto3" json:"max_messages_per_ica_tx,omitempty"`
}

func (x *MsgRegisterHostZone) Reset() {
	*x = MsgRegisterHostZone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRegisterHostZone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRegisterHostZone) ProtoMessage() {}

// Deprecated: Use MsgRegisterHostZone.ProtoReflect.Descriptor instead.
func (*MsgRegisterHostZone) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{10}
}

func (x *MsgRegisterHostZone) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *MsgRegisterHostZone) GetBech32Prefix() string {
	if x != nil {
		return x.Bech32Prefix
	}
	return ""
}

func (x *MsgRegisterHostZone) GetHostDenom() string {
	if x != nil {
		return x.HostDenom
	}
	return ""
}

func (x *MsgRegisterHostZone) GetIbcDenom() string {
	if x != nil {
		return x.IbcDenom
	}
	return ""
}

func (x *MsgRegisterHostZone) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgRegisterHostZone) GetTransferChannelId() string {
	if x != nil {
		return x.TransferChannelId
	}
	return ""
}

func (x *MsgRegisterHostZone) GetUnbondingPeriod() uint64 {
	if x != nil {
		return x.UnbondingPeriod
	}
	return 0
}

func (x *MsgRegisterHostZone) GetMinRedemptionRate() string {
	if x != nil {
		return x.MinRedemptionRate
	}
	return ""
}

func (x *MsgRegisterHostZone) GetMaxRedemptionRate() string {
	if x != nil {
		return x.MaxRedemptionRate
	}
	return ""
}

func (x *MsgRegisterHostZone) GetLsmLiquidStakeEnabled() bool {
	if x != nil {
		return x.LsmLiquidStakeEnabled
	}
	return false
}

func (x *MsgRegisterHostZone) GetCommunityPoolTreasuryAddress() string {
	if x != nil {
		return x.CommunityPoolTreasuryAddress
	}
	return ""
}

func (x *MsgRegisterHostZone) GetMaxMessagesPerIcaTx() uint64 {
	if x != nil {
		return x.MaxMessagesPerIcaTx
	}
	return 0
}

type MsgRegisterHostZoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgRegisterHostZoneResponse) Reset() {
	*x = MsgRegisterHostZoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRegisterHostZoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRegisterHostZoneResponse) ProtoMessage() {}

// Deprecated: Use MsgRegisterHostZoneResponse.ProtoReflect.Descriptor instead.
func (*MsgRegisterHostZoneResponse) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{11}
}

type MsgClaimUndelegatedTokens struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// UserUnbondingRecords are keyed on {chain_id}.{epoch}.{receiver}
	HostZoneId string `protobuf:"bytes,2,opt,name=host_zone_id,json=hostZoneId,proto3" json:"host_zone_id,omitempty"`
	Epoch      uint64 `protobuf:"varint,3,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Receiver   string `protobuf:"bytes,5,opt,name=receiver,proto3" json:"receiver,omitempty"`
}

func (x *MsgClaimUndelegatedTokens) Reset() {
	*x = MsgClaimUndelegatedTokens{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgClaimUndelegatedTokens) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgClaimUndelegatedTokens) ProtoMessage() {}

// Deprecated: Use MsgClaimUndelegatedTokens.ProtoReflect.Descriptor instead.
func (*MsgClaimUndelegatedTokens) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{12}
}

func (x *MsgClaimUndelegatedTokens) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgClaimUndelegatedTokens) GetHostZoneId() string {
	if x != nil {
		return x.HostZoneId
	}
	return ""
}

func (x *MsgClaimUndelegatedTokens) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *MsgClaimUndelegatedTokens) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

type MsgClaimUndelegatedTokensResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgClaimUndelegatedTokensResponse) Reset() {
	*x = MsgClaimUndelegatedTokensResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgClaimUndelegatedTokensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgClaimUndelegatedTokensResponse) ProtoMessage() {}

// Deprecated: Use MsgClaimUndelegatedTokensResponse.ProtoReflect.Descriptor instead.
func (*MsgClaimUndelegatedTokensResponse) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{13}
}

type MsgRebalanceValidators struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	HostZone     string `protobuf:"bytes,2,opt,name=host_zone,json=hostZone,proto3" json:"host_zone,omitempty"`
	NumRebalance uint64 `protobuf:"varint,3,opt,name=num_rebalance,json=numRebalance,proto3" json:"num_rebalance,omitempty"`
}

func (x *MsgRebalanceValidators) Reset() {
	*x = MsgRebalanceValidators{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRebalanceValidators) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRebalanceValidators) ProtoMessage() {}

// Deprecated: Use MsgRebalanceValidators.ProtoReflect.Descriptor instead.
func (*MsgRebalanceValidators) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{14}
}

func (x *MsgRebalanceValidators) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgRebalanceValidators) GetHostZone() string {
	if x != nil {
		return x.HostZone
	}
	return ""
}

func (x *MsgRebalanceValidators) GetNumRebalance() uint64 {
	if x != nil {
		return x.NumRebalance
	}
	return 0
}

type MsgRebalanceValidatorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgRebalanceValidatorsResponse) Reset() {
	*x = MsgRebalanceValidatorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRebalanceValidatorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRebalanceValidatorsResponse) ProtoMessage() {}

// Deprecated: Use MsgRebalanceValidatorsResponse.ProtoReflect.Descriptor instead.
func (*MsgRebalanceValidatorsResponse) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{15}
}

type MsgAddValidators struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator    string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	HostZone   string       `protobuf:"bytes,2,opt,name=host_zone,json=hostZone,proto3" json:"host_zone,omitempty"`
	Validators []*Validator `protobuf:"bytes,3,rep,name=validators,proto3" json:"validators,omitempty"`
}

func (x *MsgAddValidators) Reset() {
	*x = MsgAddValidators{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddValidators) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddValidators) ProtoMessage() {}

// Deprecated: Use MsgAddValidators.ProtoReflect.Descriptor instead.
func (*MsgAddValidators) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{16}
}

func (x *MsgAddValidators) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgAddValidators) GetHostZone() string {
	if x != nil {
		return x.HostZone
	}
	return ""
}

func (x *MsgAddValidators) GetValidators() []*Validator {
	if x != nil {
		return x.Validators
	}
	return nil
}

type MsgAddValidatorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgAddValidatorsResponse) Reset() {
	*x = MsgAddValidatorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddValidatorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddValidatorsResponse) ProtoMessage() {}

// Deprecated: Use MsgAddValidatorsResponse.ProtoReflect.Descriptor instead.
func (*MsgAddValidatorsResponse) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{17}
}

type ValidatorWeight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Weight  uint64 `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *ValidatorWeight) Reset() {
	*x = ValidatorWeight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatorWeight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorWeight) ProtoMessage() {}

// Deprecated: Use ValidatorWeight.ProtoReflect.Descriptor instead.
func (*ValidatorWeight) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{18}
}

func (x *ValidatorWeight) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ValidatorWeight) GetWeight() uint64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type MsgChangeValidatorWeights struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator          string             `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	HostZone         string             `protobuf:"bytes,2,opt,name=host_zone,json=hostZone,proto3" json:"host_zone,omitempty"`
	ValidatorWeights []*ValidatorWeight `protobuf:"bytes,3,rep,name=validator_weights,json=validatorWeights,proto3" json:"validator_weights,omitempty"`
}

func (x *MsgChangeValidatorWeights) Reset() {
	*x = MsgChangeValidatorWeights{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChangeValidatorWeights) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChangeValidatorWeights) ProtoMessage() {}

// Deprecated: Use MsgChangeValidatorWeights.ProtoReflect.Descriptor instead.
func (*MsgChangeValidatorWeights) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{19}
}

func (x *MsgChangeValidatorWeights) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgChangeValidatorWeights) GetHostZone() string {
	if x != nil {
		return x.HostZone
	}
	return ""
}

func (x *MsgChangeValidatorWeights) GetValidatorWeights() []*ValidatorWeight {
	if x != nil {
		return x.ValidatorWeights
	}
	return nil
}

type MsgChangeValidatorWeightsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgChangeValidatorWeightsResponse) Reset() {
	*x = MsgChangeValidatorWeightsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChangeValidatorWeightsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChangeValidatorWeightsResponse) ProtoMessage() {}

// Deprecated: Use MsgChangeValidatorWeightsResponse.ProtoReflect.Descriptor instead.
func (*MsgChangeValidatorWeightsResponse) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{20}
}

type MsgDeleteValidator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	HostZone string `protobuf:"bytes,2,opt,name=host_zone,json=hostZone,proto3" json:"host_zone,omitempty"`
	ValAddr  string `protobuf:"bytes,3,opt,name=val_addr,json=valAddr,proto3" json:"val_addr,omitempty"`
}

func (x *MsgDeleteValidator) Reset() {
	*x = MsgDeleteValidator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteValidator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteValidator) ProtoMessage() {}

// Deprecated: Use MsgDeleteValidator.ProtoReflect.Descriptor instead.
func (*MsgDeleteValidator) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{21}
}

func (x *MsgDeleteValidator) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgDeleteValidator) GetHostZone() string {
	if x != nil {
		return x.HostZone
	}
	return ""
}

func (x *MsgDeleteValidator) GetValAddr() string {
	if x != nil {
		return x.ValAddr
	}
	return ""
}

type MsgDeleteValidatorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDeleteValidatorResponse) Reset() {
	*x = MsgDeleteValidatorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteValidatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteValidatorResponse) ProtoMessage() {}

// Deprecated: Use MsgDeleteValidatorResponse.ProtoReflect.Descriptor instead.
func (*MsgDeleteValidatorResponse) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{22}
}

type MsgRestoreInterchainAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ChainId      string `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	ConnectionId string `protobuf:"bytes,3,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	AccountOwner string `protobuf:"bytes,4,opt,name=account_owner,json=accountOwner,proto3" json:"account_owner,omitempty"`
}

func (x *MsgRestoreInterchainAccount) Reset() {
	*x = MsgRestoreInterchainAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRestoreInterchainAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRestoreInterchainAccount) ProtoMessage() {}

// Deprecated: Use MsgRestoreInterchainAccount.ProtoReflect.Descriptor instead.
func (*MsgRestoreInterchainAccount) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{23}
}

func (x *MsgRestoreInterchainAccount) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgRestoreInterchainAccount) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *MsgRestoreInterchainAccount) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *MsgRestoreInterchainAccount) GetAccountOwner() string {
	if x != nil {
		return x.AccountOwner
	}
	return ""
}

type MsgRestoreInterchainAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgRestoreInterchainAccountResponse) Reset() {
	*x = MsgRestoreInterchainAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRestoreInterchainAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRestoreInterchainAccountResponse) ProtoMessage() {}

// Deprecated: Use MsgRestoreInterchainAccountResponse.ProtoReflect.Descriptor instead.
func (*MsgRestoreInterchainAccountResponse) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{24}
}

type MsgUpdateValidatorSharesExchRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ChainId string `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Valoper string `protobuf:"bytes,3,opt,name=valoper,proto3" json:"valoper,omitempty"`
}

func (x *MsgUpdateValidatorSharesExchRate) Reset() {
	*x = MsgUpdateValidatorSharesExchRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateValidatorSharesExchRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateValidatorSharesExchRate) ProtoMessage() {}

// Deprecated: Use MsgUpdateValidatorSharesExchRate.ProtoReflect.Descriptor instead.
func (*MsgUpdateValidatorSharesExchRate) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{25}
}

func (x *MsgUpdateValidatorSharesExchRate) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateValidatorSharesExchRate) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *MsgUpdateValidatorSharesExchRate) GetValoper() string {
	if x != nil {
		return x.Valoper
	}
	return ""
}

type MsgUpdateValidatorSharesExchRateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateValidatorSharesExchRateResponse) Reset() {
	*x = MsgUpdateValidatorSharesExchRateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateValidatorSharesExchRateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateValidatorSharesExchRateResponse) ProtoMessage() {}

// Deprecated: Use MsgUpdateValidatorSharesExchRateResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateValidatorSharesExchRateResponse) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{26}
}

type MsgCalibrateDelegation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ChainId string `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Valoper string `protobuf:"bytes,3,opt,name=valoper,proto3" json:"valoper,omitempty"`
}

func (x *MsgCalibrateDelegation) Reset() {
	*x = MsgCalibrateDelegation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCalibrateDelegation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCalibrateDelegation) ProtoMessage() {}

// Deprecated: Use MsgCalibrateDelegation.ProtoReflect.Descriptor instead.
func (*MsgCalibrateDelegation) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{27}
}

func (x *MsgCalibrateDelegation) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgCalibrateDelegation) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *MsgCalibrateDelegation) GetValoper() string {
	if x != nil {
		return x.Valoper
	}
	return ""
}

type MsgCalibrateDelegationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgCalibrateDelegationResponse) Reset() {
	*x = MsgCalibrateDelegationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCalibrateDelegationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCalibrateDelegationResponse) ProtoMessage() {}

// Deprecated: Use MsgCalibrateDelegationResponse.ProtoReflect.Descriptor instead.
func (*MsgCalibrateDelegationResponse) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{28}
}

type MsgResumeHostZone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ChainId string `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
}

func (x *MsgResumeHostZone) Reset() {
	*x = MsgResumeHostZone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgResumeHostZone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgResumeHostZone) ProtoMessage() {}

// Deprecated: Use MsgResumeHostZone.ProtoReflect.Descriptor instead.
func (*MsgResumeHostZone) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{29}
}

func (x *MsgResumeHostZone) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgResumeHostZone) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

type MsgResumeHostZoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgResumeHostZoneResponse) Reset() {
	*x = MsgResumeHostZoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgResumeHostZoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgResumeHostZoneResponse) ProtoMessage() {}

// Deprecated: Use MsgResumeHostZoneResponse.ProtoReflect.Descriptor instead.
func (*MsgResumeHostZoneResponse) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{30}
}

// Creates a new trade route
type MsgCreateTradeRoute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// authority is the address that controls the module (defaults to x/gov unless
	// overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// The chain ID of the host zone
	HostChainId string `protobuf:"bytes,2,opt,name=host_chain_id,json=hostChainId,proto3" json:"host_chain_id,omitempty"`
	// Connection IDs between stride and the other zones
	StrideToRewardConnectionId string `protobuf:"bytes,3,opt,name=stride_to_reward_connection_id,json=strideToRewardConnectionId,proto3" json:"stride_to_reward_connection_id,omitempty"`
	StrideToTradeConnectionId  string `protobuf:"bytes,4,opt,name=stride_to_trade_connection_id,json=strideToTradeConnectionId,proto3" json:"stride_to_trade_connection_id,omitempty"`
	// Transfer channels between the host, reward, and trade zones
	HostToRewardTransferChannelId  string `protobuf:"bytes,5,opt,name=host_to_reward_transfer_channel_id,json=hostToRewardTransferChannelId,proto3" json:"host_to_reward_transfer_channel_id,omitempty"`
	RewardToTradeTransferChannelId string `protobuf:"bytes,6,opt,name=reward_to_trade_transfer_channel_id,json=rewardToTradeTransferChannelId,proto3" json:"reward_to_trade_transfer_channel_id,omitempty"`
	TradeToHostTransferChannelId   string `protobuf:"bytes,7,opt,name=trade_to_host_transfer_channel_id,json=tradeToHostTransferChannelId,proto3" json:"trade_to_host_transfer_channel_id,omitempty"`
	// ibc denom for the reward token on the host zone (e.g. ibc/usdc on dYdX)
	RewardDenomOnHost string `protobuf:"bytes,8,opt,name=reward_denom_on_host,json=rewardDenomOnHost,proto3" json:"reward_denom_on_host,omitempty"`
	// native denom of reward token on the reward zone (e.g. usdc on Noble)
	RewardDenomOnReward string `protobuf:"bytes,9,opt,name=reward_denom_on_reward,json=rewardDenomOnReward,proto3" json:"reward_denom_on_reward,omitempty"`
	// ibc denom of the reward token on the trade zone (e.g. ibc/usdc on Osmosis)
	RewardDenomOnTrade string `protobuf:"bytes,10,opt,name=reward_denom_on_trade,json=rewardDenomOnTrade,proto3" json:"reward_denom_on_trade,omitempty"`
	// ibc denom of the host's token on the trade zone (e.g. ibc/dydx on Osmosis)
	HostDenomOnTrade string `protobuf:"bytes,11,opt,name=host_denom_on_trade,json=hostDenomOnTrade,proto3" json:"host_denom_on_trade,omitempty"`
	// the host zone's native denom (e.g. dydx on dYdX)
	HostDenomOnHost string `protobuf:"bytes,12,opt,name=host_denom_on_host,json=hostDenomOnHost,proto3" json:"host_denom_on_host,omitempty"`
	// The osmosis pool ID
	PoolId uint64 `protobuf:"varint,13,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	// Threshold defining the percentage of tokens that could be lost in the trade
	// This captures both the loss from slippage and from a stale price on stride
	// "0.05" means the output from the trade can be no less than a 5% deviation
	// from the current value
	MaxAllowedSwapLossRate string `protobuf:"bytes,14,opt,name=max_allowed_swap_loss_rate,json=maxAllowedSwapLossRate,proto3" json:"max_allowed_swap_loss_rate,omitempty"`
	// minimum amount of reward tokens to initate a swap
	// if not provided, defaults to 0
	MinSwapAmount string `protobuf:"bytes,15,opt,name=min_swap_amount,json=minSwapAmount,proto3" json:"min_swap_amount,omitempty"`
	// maximum amount of reward tokens in a single swap
	// if not provided, defaults to 10e24
	MaxSwapAmount string `protobuf:"bytes,16,opt,name=max_swap_amount,json=maxSwapAmount,proto3" json:"max_swap_amount,omitempty"`
}

func (x *MsgCreateTradeRoute) Reset() {
	*x = MsgCreateTradeRoute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateTradeRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateTradeRoute) ProtoMessage() {}

// Deprecated: Use MsgCreateTradeRoute.ProtoReflect.Descriptor instead.
func (*MsgCreateTradeRoute) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{31}
}

func (x *MsgCreateTradeRoute) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

func (x *MsgCreateTradeRoute) GetHostChainId() string {
	if x != nil {
		return x.HostChainId
	}
	return ""
}

func (x *MsgCreateTradeRoute) GetStrideToRewardConnectionId() string {
	if x != nil {
		return x.StrideToRewardConnectionId
	}
	return ""
}

func (x *MsgCreateTradeRoute) GetStrideToTradeConnectionId() string {
	if x != nil {
		return x.StrideToTradeConnectionId
	}
	return ""
}

func (x *MsgCreateTradeRoute) GetHostToRewardTransferChannelId() string {
	if x != nil {
		return x.HostToRewardTransferChannelId
	}
	return ""
}

func (x *MsgCreateTradeRoute) GetRewardToTradeTransferChannelId() string {
	if x != nil {
		return x.RewardToTradeTransferChannelId
	}
	return ""
}

func (x *MsgCreateTradeRoute) GetTradeToHostTransferChannelId() string {
	if x != nil {
		return x.TradeToHostTransferChannelId
	}
	return ""
}

func (x *MsgCreateTradeRoute) GetRewardDenomOnHost() string {
	if x != nil {
		return x.RewardDenomOnHost
	}
	return ""
}

func (x *MsgCreateTradeRoute) GetRewardDenomOnReward() string {
	if x != nil {
		return x.RewardDenomOnReward
	}
	return ""
}

func (x *MsgCreateTradeRoute) GetRewardDenomOnTrade() string {
	if x != nil {
		return x.RewardDenomOnTrade
	}
	return ""
}

func (x *MsgCreateTradeRoute) GetHostDenomOnTrade() string {
	if x != nil {
		return x.HostDenomOnTrade
	}
	return ""
}

func (x *MsgCreateTradeRoute) GetHostDenomOnHost() string {
	if x != nil {
		return x.HostDenomOnHost
	}
	return ""
}

func (x *MsgCreateTradeRoute) GetPoolId() uint64 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

func (x *MsgCreateTradeRoute) GetMaxAllowedSwapLossRate() string {
	if x != nil {
		return x.MaxAllowedSwapLossRate
	}
	return ""
}

func (x *MsgCreateTradeRoute) GetMinSwapAmount() string {
	if x != nil {
		return x.MinSwapAmount
	}
	return ""
}

func (x *MsgCreateTradeRoute) GetMaxSwapAmount() string {
	if x != nil {
		return x.MaxSwapAmount
	}
	return ""
}

type MsgCreateTradeRouteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgCreateTradeRouteResponse) Reset() {
	*x = MsgCreateTradeRouteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateTradeRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateTradeRouteResponse) ProtoMessage() {}

// Deprecated: Use MsgCreateTradeRouteResponse.ProtoReflect.Descriptor instead.
func (*MsgCreateTradeRouteResponse) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{32}
}

// Deletes a trade route
type MsgDeleteTradeRoute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// authority is the address that controls the module (defaults to x/gov unless
	// overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// The reward denom of the route in it's native form (e.g. usdc)
	RewardDenom string `protobuf:"bytes,2,opt,name=reward_denom,json=rewardDenom,proto3" json:"reward_denom,omitempty"`
	// The host zone's denom in it's native form (e.g. dydx)
	HostDenom string `protobuf:"bytes,3,opt,name=host_denom,json=hostDenom,proto3" json:"host_denom,omitempty"`
}

func (x *MsgDeleteTradeRoute) Reset() {
	*x = MsgDeleteTradeRoute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteTradeRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteTradeRoute) ProtoMessage() {}

// Deprecated: Use MsgDeleteTradeRoute.ProtoReflect.Descriptor instead.
func (*MsgDeleteTradeRoute) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{33}
}

func (x *MsgDeleteTradeRoute) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

func (x *MsgDeleteTradeRoute) GetRewardDenom() string {
	if x != nil {
		return x.RewardDenom
	}
	return ""
}

func (x *MsgDeleteTradeRoute) GetHostDenom() string {
	if x != nil {
		return x.HostDenom
	}
	return ""
}

type MsgDeleteTradeRouteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDeleteTradeRouteResponse) Reset() {
	*x = MsgDeleteTradeRouteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteTradeRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteTradeRouteResponse) ProtoMessage() {}

// Deprecated: Use MsgDeleteTradeRouteResponse.ProtoReflect.Descriptor instead.
func (*MsgDeleteTradeRouteResponse) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{34}
}

// Updates the config of a trade route
type MsgUpdateTradeRoute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// authority is the address that controls the module (defaults to x/gov unless
	// overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// The reward denom of the route in it's native form (e.g. usdc)
	RewardDenom string `protobuf:"bytes,2,opt,name=reward_denom,json=rewardDenom,proto3" json:"reward_denom,omitempty"`
	// The host zone's denom in it's native form (e.g. dydx)
	HostDenom string `protobuf:"bytes,3,opt,name=host_denom,json=hostDenom,proto3" json:"host_denom,omitempty"`
	// The osmosis pool ID
	PoolId uint64 `protobuf:"varint,4,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	// Threshold defining the percentage of tokens that could be lost in the trade
	// This captures both the loss from slippage and from a stale price on stride
	// "0.05" means the output from the trade can be no less than a 5% deviation
	// from the current value
	MaxAllowedSwapLossRate string `protobuf:"bytes,5,opt,name=max_allowed_swap_loss_rate,json=maxAllowedSwapLossRate,proto3" json:"max_allowed_swap_loss_rate,omitempty"`
	// minimum amount of reward tokens to initate a swap
	// if not provided, defaults to 0
	MinSwapAmount string `protobuf:"bytes,6,opt,name=min_swap_amount,json=minSwapAmount,proto3" json:"min_swap_amount,omitempty"`
	// maximum amount of reward tokens in a single swap
	// if not provided, defaults to 10e24
	MaxSwapAmount string `protobuf:"bytes,7,opt,name=max_swap_amount,json=maxSwapAmount,proto3" json:"max_swap_amount,omitempty"`
}

func (x *MsgUpdateTradeRoute) Reset() {
	*x = MsgUpdateTradeRoute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateTradeRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateTradeRoute) ProtoMessage() {}

// Deprecated: Use MsgUpdateTradeRoute.ProtoReflect.Descriptor instead.
func (*MsgUpdateTradeRoute) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{35}
}

func (x *MsgUpdateTradeRoute) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

func (x *MsgUpdateTradeRoute) GetRewardDenom() string {
	if x != nil {
		return x.RewardDenom
	}
	return ""
}

func (x *MsgUpdateTradeRoute) GetHostDenom() string {
	if x != nil {
		return x.HostDenom
	}
	return ""
}

func (x *MsgUpdateTradeRoute) GetPoolId() uint64 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

func (x *MsgUpdateTradeRoute) GetMaxAllowedSwapLossRate() string {
	if x != nil {
		return x.MaxAllowedSwapLossRate
	}
	return ""
}

func (x *MsgUpdateTradeRoute) GetMinSwapAmount() string {
	if x != nil {
		return x.MinSwapAmount
	}
	return ""
}

func (x *MsgUpdateTradeRoute) GetMaxSwapAmount() string {
	if x != nil {
		return x.MaxSwapAmount
	}
	return ""
}

type MsgUpdateTradeRouteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateTradeRouteResponse) Reset() {
	*x = MsgUpdateTradeRouteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateTradeRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateTradeRouteResponse) ProtoMessage() {}

// Deprecated: Use MsgUpdateTradeRouteResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateTradeRouteResponse) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{36}
}

// Registers or updates a community pool rebate by specifying the amount liquid
// staked
type MsgSetCommunityPoolRebate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Message signer (admin only)
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// Chain id of the chain whose community pool has a liquid staking rebate
	// arrangement with stride
	ChainId string `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// Rebate percentage represented as a decimal (e.g. 0.2 for 20%)
	RebateRate string `protobuf:"bytes,3,opt,name=rebate_rate,json=rebateRate,proto3" json:"rebate_rate,omitempty"`
	// Number of stTokens recieved by the community pool after liquid staking
	LiquidStakedStTokenAmount string `protobuf:"bytes,4,opt,name=liquid_staked_st_token_amount,json=liquidStakedStTokenAmount,proto3" json:"liquid_staked_st_token_amount,omitempty"`
}

func (x *MsgSetCommunityPoolRebate) Reset() {
	*x = MsgSetCommunityPoolRebate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSetCommunityPoolRebate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSetCommunityPoolRebate) ProtoMessage() {}

// Deprecated: Use MsgSetCommunityPoolRebate.ProtoReflect.Descriptor instead.
func (*MsgSetCommunityPoolRebate) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{37}
}

func (x *MsgSetCommunityPoolRebate) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgSetCommunityPoolRebate) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *MsgSetCommunityPoolRebate) GetRebateRate() string {
	if x != nil {
		return x.RebateRate
	}
	return ""
}

func (x *MsgSetCommunityPoolRebate) GetLiquidStakedStTokenAmount() string {
	if x != nil {
		return x.LiquidStakedStTokenAmount
	}
	return ""
}

type MsgSetCommunityPoolRebateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgSetCommunityPoolRebateResponse) Reset() {
	*x = MsgSetCommunityPoolRebateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSetCommunityPoolRebateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSetCommunityPoolRebateResponse) ProtoMessage() {}

// Deprecated: Use MsgSetCommunityPoolRebateResponse.ProtoReflect.Descriptor instead.
func (*MsgSetCommunityPoolRebateResponse) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{38}
}

// Grants or revokes trade permissions to a given address via authz
type MsgToggleTradeController struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Message signer (admin only)
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// Chain ID of the trade account
	ChainId string `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// Permission change (either grant or revoke)
	PermissionChange AuthzPermissionChange `protobuf:"varint,3,opt,name=permission_change,json=permissionChange,proto3,enum=stride.stakeibc.AuthzPermissionChange" json:"permission_change,omitempty"`
	// Address of trade operator
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *MsgToggleTradeController) Reset() {
	*x = MsgToggleTradeController{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgToggleTradeController) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgToggleTradeController) ProtoMessage() {}

// Deprecated: Use MsgToggleTradeController.ProtoReflect.Descriptor instead.
func (*MsgToggleTradeController) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{39}
}

func (x *MsgToggleTradeController) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgToggleTradeController) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *MsgToggleTradeController) GetPermissionChange() AuthzPermissionChange {
	if x != nil {
		return x.PermissionChange
	}
	return AuthzPermissionChange_GRANT
}

func (x *MsgToggleTradeController) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type MsgToggleTradeControllerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgToggleTradeControllerResponse) Reset() {
	*x = MsgToggleTradeControllerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgToggleTradeControllerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgToggleTradeControllerResponse) ProtoMessage() {}

// Deprecated: Use MsgToggleTradeControllerResponse.ProtoReflect.Descriptor instead.
func (*MsgToggleTradeControllerResponse) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{40}
}

// Updates host zone params
type MsgUpdateHostZoneParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// authority is the address that controls the module (defaults to x/gov unless
	// overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// Chain ID of the host zone
	ChainId string `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// Max messages that can be sent in a single ICA message
	MaxMessagesPerIcaTx uint64 `protobuf:"varint,3,opt,name=max_messages_per_ica_tx,json=maxMessagesPerIcaTx,proto3" json:"max_messages_per_ica_tx,omitempty"`
}

func (x *MsgUpdateHostZoneParams) Reset() {
	*x = MsgUpdateHostZoneParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateHostZoneParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateHostZoneParams) ProtoMessage() {}

// Deprecated: Use MsgUpdateHostZoneParams.ProtoReflect.Descriptor instead.
func (*MsgUpdateHostZoneParams) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{41}
}

func (x *MsgUpdateHostZoneParams) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

func (x *MsgUpdateHostZoneParams) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *MsgUpdateHostZoneParams) GetMaxMessagesPerIcaTx() uint64 {
	if x != nil {
		return x.MaxMessagesPerIcaTx
	}
	return 0
}

type MsgUpdateHostZoneParamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateHostZoneParamsResponse) Reset() {
	*x = MsgUpdateHostZoneParamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_stakeibc_tx_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateHostZoneParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateHostZoneParamsResponse) ProtoMessage() {}

// Deprecated: Use MsgUpdateHostZoneParamsResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateHostZoneParamsResponse) Descriptor() ([]byte, []int) {
	return file_stride_stakeibc_tx_proto_rawDescGZIP(), []int{42}
}

var File_stride_stakeibc_tx_proto protoreflect.FileDescriptor

var file_stride_stakeibc_tx_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62,
	0x63, 0x2f, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x73, 0x74, 0x72, 0x69,
	0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x1a, 0x1f, 0x73, 0x74, 0x72,
	0x69, 0x64, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f,
	0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x73, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2f, 0x61, 0x6d,
	0x69, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfc, 0x02, 0x0a, 0x22, 0x4d, 0x73,
	0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x64, 0x65,
	0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x6c, 0x0a, 0x19, 0x6d, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x6e,
	0x65, 0x72, 0x5f, 0x72, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x31, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde,
	0x1f, 0x1b, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d,
	0x61, 0x74, 0x68, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x44, 0x65, 0x63, 0xd2, 0xb4, 0x2d,
	0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x52, 0x16, 0x6d, 0x69, 0x6e,
	0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x6c, 0x0a, 0x19, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x5f, 0x72, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x31, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x1b,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74,
	0x68, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x44, 0x65, 0x63, 0xd2, 0xb4, 0x2d, 0x0a, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x52, 0x16, 0x6d, 0x61, 0x78, 0x49, 0x6e,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74,
	0x65, 0x3a, 0x45, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x8a,
	0xe7, 0xb0, 0x2a, 0x34, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2f, 0x78, 0x2f, 0x73, 0x74, 0x61,
	0x6b, 0x65, 0x69, 0x62, 0x63, 0x2f, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61,
	0x74, 0x65, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x22, 0x2c, 0x0a, 0x2a, 0x4d, 0x73, 0x67, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x64, 0x65, 0x6d, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb3, 0x01, 0x0a, 0x0e, 0x4d, 0x73, 0x67, 0x4c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x1d, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49,
	0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x6f,
	0x73, 0x74, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x68, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x3a, 0x31, 0x82, 0xe7, 0xb0, 0x2a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x8a, 0xe7, 0xb0, 0x2a, 0x20, 0x73, 0x74, 0x72, 0x69,
	0x64, 0x65, 0x2f, 0x78, 0x2f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2f, 0x4d, 0x73,
	0x67, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x22, 0x6f, 0x0a, 0x16,
	0x4d, 0x73, 0x67, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x08, 0x73, 0x74, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43,
	0x6f, 0x69, 0x6e, 0x42, 0x1f, 0xc8, 0xde, 0x1f, 0x00, 0xaa, 0xdf, 0x1f, 0x17, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x43,
	0x6f, 0x69, 0x6e, 0x73, 0x52, 0x07, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xc9, 0x01,
	0x0a, 0x11, 0x4d, 0x73, 0x67, 0x4c, 0x53, 0x4d, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x53, 0x74,
	0x61, 0x6b, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x35, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xc8,
	0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b,
	0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x13, 0x6c, 0x73, 0x6d, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x69, 0x62, 0x63, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x6c, 0x73, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x62, 0x63, 0x44, 0x65,
	0x6e, 0x6f, 0x6d, 0x3a, 0x34, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x8a, 0xe7, 0xb0, 0x2a, 0x23, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2f, 0x78, 0x2f, 0x73,
	0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2f, 0x4d, 0x73, 0x67, 0x4c, 0x53, 0x4d, 0x4c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x22, 0x4e, 0x0a, 0x19, 0x4d, 0x73, 0x67,
	0x4c, 0x53, 0x4d, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x0f, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x49, 0x64, 0x12, 0x35, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x1d, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e,
	0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x3a, 0x32, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x8a, 0xe7, 0xb0, 0x2a, 0x21, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2f, 0x78, 0x2f, 0x73,
	0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2f, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x65, 0x61, 0x72,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xcd, 0x01, 0x0a, 0x0e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d,
	0x53, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x35, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x1d, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73,
	0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x7a,
	0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x5a,
	0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x3a,
	0x31, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x8a, 0xe7, 0xb0,
	0x2a, 0x20, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2f, 0x78, 0x2f, 0x73, 0x74, 0x61, 0x6b, 0x65,
	0x69, 0x62, 0x63, 0x2f, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x53, 0x74, 0x61,
	0x6b, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x53,
	0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xcf, 0x06, 0x0a,
	0x13, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74,
	0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x3d, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xf2, 0xde, 0x1f,
	0x14, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x22, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x65, 0x63, 0x68, 0x33, 0x32, 0x70, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x65, 0x63, 0x68, 0x33,
	0x32, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x34, 0x0a, 0x0a, 0x68, 0x6f, 0x73, 0x74, 0x5f,
	0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15, 0xf2, 0xde, 0x1f,
	0x11, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x64, 0x65, 0x6e, 0x6f,
	0x6d, 0x22, 0x52, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x31, 0x0a,
	0x09, 0x69, 0x62, 0x63, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x14, 0xf2, 0xde, 0x1f, 0x10, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x69, 0x62, 0x63, 0x5f,
	0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x22, 0x52, 0x08, 0x69, 0x62, 0x63, 0x44, 0x65, 0x6e, 0x6f, 0x6d,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x4e, 0x0a, 0x13, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0xf2, 0xde, 0x1f, 0x1a, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x22, 0x52, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x10, 0x75, 0x6e,
	0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x1b, 0xf2, 0xde, 0x1f, 0x17, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22,
	0x75, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x22, 0x52, 0x0f, 0x75, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x12, 0x61, 0x0a, 0x13, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x64, 0x65, 0x6d, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x31, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x1b, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73,
	0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63,
	0x79, 0x44, 0x65, 0x63, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x44,
	0x65, 0x63, 0x52, 0x11, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x61, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x64,
	0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x31, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x1b, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x4c, 0x65,
	0x67, 0x61, 0x63, 0x79, 0x44, 0x65, 0x63, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x44, 0x65, 0x63, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x64, 0x65, 0x6d, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x6c, 0x73, 0x6d, 0x5f,
	0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x6c, 0x73, 0x6d, 0x4c,
	0x69, 0x71, 0x75, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x45, 0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f, 0x70,
	0x6f, 0x6f, 0x6c, 0x5f, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1c, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x34, 0x0a, 0x17, 0x6d, 0x61, 0x78, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x63, 0x61,
	0x5f, 0x74, 0x78, 0x18, 0x11, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x6d, 0x61, 0x78, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x50, 0x65, 0x72, 0x49, 0x63, 0x61, 0x54, 0x78, 0x3a, 0x3e,
	0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x8a, 0xe7, 0xb0, 0x2a, 0x25, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2f,
	0x78, 0x2f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2f, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x22, 0x1d,
	0x0a, 0x1b, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x48, 0x6f, 0x73,
	0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xcd, 0x01,
	0x0a, 0x19, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0c, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x7a, 0x6f,
	0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x6f, 0x73,
	0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x3a, 0x3c, 0x82, 0xe7, 0xb0, 0x2a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x8a, 0xe7, 0xb0, 0x2a, 0x2b, 0x73, 0x74, 0x72, 0x69,
	0x64, 0x65, 0x2f, 0x78, 0x2f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2f, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x22, 0x23, 0x0a,
	0x21, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xaf, 0x01, 0x0a, 0x16, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x5f,
	0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74,
	0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6e, 0x75, 0x6d,
	0x52, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x3a, 0x39, 0x82, 0xe7, 0xb0, 0x2a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x8a, 0xe7, 0xb0, 0x2a, 0x28, 0x73, 0x74, 0x72, 0x69,
	0x64, 0x65, 0x2f, 0x78, 0x2f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2f, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x22, 0x20, 0x0a, 0x1e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x10, 0x4d, 0x73, 0x67, 0x41, 0x64,
	0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x7a, 0x6f,
	0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x5a, 0x6f,
	0x6e, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e,
	0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x3a, 0x33,
	0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x8a, 0xe7, 0xb0, 0x2a,
	0x22, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2f, 0x78, 0x2f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69,
	0x62, 0x63, 0x2f, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x5d, 0x0a, 0x0f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x57, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xdf,
	0x01, 0x0a, 0x19, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x7a,
	0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x5a,
	0x6f, 0x6e, 0x65, 0x12, 0x4d, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63,
	0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x52, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x57, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x3a, 0x3c, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x8a, 0xe7, 0xb0, 0x2a, 0x2b, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2f, 0x78, 0x2f, 0x73, 0x74,
	0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2f, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73,
	0x22, 0x23, 0x0a, 0x21, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x12, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x7a,
	0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x5a,
	0x6f, 0x6e, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x76, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x07, 0x76, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x3a, 0x35, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x8a, 0xe7, 0xb0, 0x2a, 0x24, 0x73, 0x74, 0x72, 0x69, 0x64,
	0x65, 0x2f, 0x78, 0x2f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2f, 0x4d, 0x73, 0x67,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x22,
	0x1c, 0x0a, 0x1a, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xdc, 0x01,
	0x0a, 0x1b, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x3a, 0x3e, 0x82, 0xe7,
	0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x8a, 0xe7, 0xb0, 0x2a, 0x2d, 0x73,
	0x74, 0x72, 0x69, 0x64, 0x65, 0x2f, 0x78, 0x2f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63,
	0x2f, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x25, 0x0a, 0x23,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x20, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x45, 0x78, 0x63, 0x68, 0x52, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x61, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x61, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x3a, 0x43, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x8a, 0xe7, 0xb0, 0x2a, 0x32, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65,
	0x2f, 0x78, 0x2f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2f, 0x4d, 0x73, 0x67, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x45, 0x78, 0x63, 0x68, 0x52, 0x61, 0x74, 0x65, 0x22, 0x2a, 0x0a, 0x28,
	0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x45, 0x78, 0x63, 0x68, 0x52, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa2, 0x01, 0x0a, 0x16, 0x4d, 0x73, 0x67,
	0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x61, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x61, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x3a, 0x39, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x8a, 0xe7, 0xb0, 0x2a, 0x28, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2f, 0x78, 0x2f, 0x73, 0x74,
	0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2f, 0x4d, 0x73, 0x67, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x20, 0x0a,
	0x1e, 0x4d, 0x73, 0x67, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x7e, 0x0a, 0x11, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x48, 0x6f, 0x73, 0x74,
	0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x3a, 0x34, 0x82, 0xe7, 0xb0, 0x2a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x8a, 0xe7, 0xb0, 0x2a, 0x23, 0x73, 0x74, 0x72, 0x69,
	0x64, 0x65, 0x2f, 0x78, 0x2f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2f, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x22,
	0x1b, 0x0a, 0x19, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x48, 0x6f, 0x73, 0x74,
	0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xea, 0x07, 0x0a,
	0x13, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0d,
	0x68, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x12, 0x42, 0x0a, 0x1e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65,
	0x54, 0x6f, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x1d, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x74,
	0x6f, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x73, 0x74, 0x72,
	0x69, 0x64, 0x65, 0x54, 0x6f, 0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x22, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x74,
	0x6f, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x1d, 0x68, 0x6f, 0x73, 0x74, 0x54, 0x6f, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x64, 0x12, 0x4b, 0x0a, 0x23, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1e,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x47,
	0x0a, 0x21, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1c, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x54, 0x6f, 0x48, 0x6f, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x14, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x5f, 0x6f, 0x6e, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x6e,
	0x6f, 0x6d, 0x4f, 0x6e, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x5f, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x4f, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x31, 0x0a,
	0x15, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x5f, 0x6f, 0x6e,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x4f, 0x6e, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x12, 0x2d, 0x0a, 0x13, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x5f, 0x6f,
	0x6e, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x68,
	0x6f, 0x73, 0x74, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x4f, 0x6e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12,
	0x2b, 0x0a, 0x12, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x5f, 0x6f, 0x6e,
	0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x68, 0x6f, 0x73,
	0x74, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x4f, 0x6e, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70,
	0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x1a, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x6c, 0x6f, 0x73, 0x73, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x6d, 0x61, 0x78, 0x41, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x64, 0x53, 0x77, 0x61, 0x70, 0x4c, 0x6f, 0x73, 0x73, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x45, 0x0a, 0x0f, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xc8, 0xde, 0x1f, 0x00,
	0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f,
	0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x53, 0x77,
	0x61, 0x70, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f,
	0x73, 0x77, 0x61, 0x70, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x1d, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74,
	0x52, 0x0d, 0x6d, 0x61, 0x78, 0x53, 0x77, 0x61, 0x70, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x3a,
	0x38, 0x82, 0xe7, 0xb0, 0x2a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x8a,
	0xe7, 0xb0, 0x2a, 0x25, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2f, 0x78, 0x2f, 0x73, 0x74, 0x61,
	0x6b, 0x65, 0x69, 0x62, 0x63, 0x2f, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x4d, 0x73, 0x67,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc9, 0x01, 0x0a, 0x13, 0x4d, 0x73, 0x67,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x12, 0x36, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x68,
	0x6f, 0x73, 0x74, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x68, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x3a, 0x38, 0x82, 0xe7, 0xb0, 0x2a,
	0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x8a, 0xe7, 0xb0, 0x2a, 0x25, 0x73,
	0x74, 0x72, 0x69, 0x64, 0x65, 0x2f, 0x78, 0x2f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63,
	0x2f, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xac, 0x03, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18,
	0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x65,
	0x6e, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x64,
	0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x6f, 0x73, 0x74,
	0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x3a,
	0x0a, 0x1a, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x73, 0x77,
	0x61, 0x70, 0x5f, 0x6c, 0x6f, 0x73, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x16, 0x6d, 0x61, 0x78, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x53, 0x77,
	0x61, 0x70, 0x4c, 0x6f, 0x73, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x45, 0x0a, 0x0f, 0x6d, 0x69,
	0x6e, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x1d, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49,
	0x6e, 0x74, 0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x53, 0x77, 0x61, 0x70, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x45, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xc8, 0xde, 0x1f, 0x00,
	0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f,
	0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x53, 0x77,
	0x61, 0x70, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x38, 0x82, 0xe7, 0xb0, 0x2a, 0x09, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x8a, 0xe7, 0xb0, 0x2a, 0x25, 0x73, 0x74, 0x72,
	0x69, 0x64, 0x65, 0x2f, 0x78, 0x2f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2f, 0x4d,
	0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xcf, 0x02, 0x0a, 0x19, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x12,
	0x32, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x44,
	0x0a, 0x0b, 0x72, 0x65, 0x62, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x23, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x1b, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x4c,
	0x65, 0x67, 0x61, 0x63, 0x79, 0x44, 0x65, 0x63, 0x52, 0x0a, 0x72, 0x65, 0x62, 0x61, 0x74, 0x65,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x5f, 0x0a, 0x1d, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x5f, 0x73,
	0x74, 0x61, 0x6b, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xc8, 0xde, 0x1f,
	0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69,
	0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x19, 0x6c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x64, 0x53, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x3c, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x8a, 0xe7, 0xb0, 0x2a, 0x2b, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2f, 0x78,
	0x2f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2f, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x62,
	0x61, 0x74, 0x65, 0x22, 0x23, 0x0a, 0x21, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x95, 0x02, 0x0a, 0x18, 0x4d, 0x73, 0x67,
	0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x12, 0x53, 0x0a, 0x11, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x26, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62,
	0x63, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x7a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x10, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x3a, 0x3b, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x8a, 0xe7, 0xb0, 0x2a, 0x2a, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2f, 0x78, 0x2f, 0x73,
	0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2f, 0x4d, 0x73, 0x67, 0x54, 0x6f, 0x67, 0x67, 0x6c,
	0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x22, 0x22, 0x0a, 0x20, 0x4d, 0x73, 0x67, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xe0, 0x01, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x36, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x17, 0x6d, 0x61, 0x78, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x63, 0x61, 0x5f, 0x74, 0x78, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x6d, 0x61, 0x78, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x50, 0x65, 0x72, 0x49, 0x63, 0x61, 0x54, 0x78, 0x3a, 0x3c, 0x82, 0xe7, 0xb0, 0x2a, 0x09,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x8a, 0xe7, 0xb0, 0x2a, 0x29, 0x73, 0x74,
	0x72, 0x69, 0x64, 0x65, 0x2f, 0x78, 0x2f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2f,
	0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x5a, 0x6f, 0x6e,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x21, 0x0a, 0x1f, 0x4d, 0x73, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x2e, 0x0a, 0x15, 0x41, 0x75,
	0x74, 0x68, 0x7a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x52, 0x41, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x52, 0x45, 0x56, 0x4f, 0x4b, 0x45, 0x10, 0x01, 0x32, 0xa2, 0x12, 0x0a, 0x03, 0x4d,
	0x73, 0x67, 0x12, 0x57, 0x0a, 0x0b, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b,
	0x65, 0x12, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65,
	0x69, 0x62, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x53, 0x74, 0x61,
	0x6b, 0x65, 0x1a, 0x27, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b,
	0x65, 0x69, 0x62, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x53, 0x74,
	0x61, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x0e, 0x4c,
	0x53, 0x4d, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x22, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e,
	0x4d, 0x73, 0x67, 0x4c, 0x53, 0x4d, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6b,
	0x65, 0x1a, 0x2a, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65,
	0x69, 0x62, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x4c, 0x53, 0x4d, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64,
	0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a,
	0x0b, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x1f, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e, 0x4d,
	0x73, 0x67, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x1a, 0x27, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x24, 0x2e, 0x73, 0x74, 0x72,
	0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65,
	0x1a, 0x2c, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69,
	0x62, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x48, 0x6f,
	0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x78,
	0x0a, 0x16, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x2a, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64,
	0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x1a, 0x32, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74,
	0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x55,
	0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x13, 0x52, 0x65, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12,
	0x27, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62,
	0x63, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x1a, 0x2f, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64,
	0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0d, 0x41, 0x64, 0x64,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x21, 0x2e, 0x73, 0x74, 0x72,
	0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e, 0x4d, 0x73, 0x67,
	0x41, 0x64, 0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x1a, 0x29, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e,
	0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x57, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x2a, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65,
	0x69, 0x62, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x1a, 0x32, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e,
	0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x63, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74,
	0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x2b, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2c, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b,
	0x65, 0x69, 0x62, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x1a, 0x34, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69,
	0x62, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x45, 0x78, 0x63, 0x68, 0x52, 0x61, 0x74, 0x65, 0x12, 0x31, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64,
	0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x73, 0x45, 0x78, 0x63, 0x68, 0x52, 0x61, 0x74, 0x65, 0x1a, 0x39, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e, 0x4d, 0x73,
	0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x45, 0x78, 0x63, 0x68, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x13, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e,
	0x4d, 0x73, 0x67, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x2f, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e,
	0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x61, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0c, 0x43, 0x6c, 0x65, 0x61, 0x72,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65,
	0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x28, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x65, 0x61, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74,
	0x65, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x33, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65,
	0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x1a, 0x3b, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e, 0x4d,
	0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x64,
	0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x75, 0x6e, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x0e, 0x52, 0x65, 0x73,
	0x75, 0x6d, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x22, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x1a,
	0x2a, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62,
	0x63, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x5a,
	0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x10, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12,
	0x24, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62,
	0x63, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x1a, 0x2c, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73,
	0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65,
	0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x1a, 0x2c, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e,
	0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x10, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12,
	0x24, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62,
	0x63, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x1a, 0x2c, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73,
	0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x78, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e,
	0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x50,
	0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x1a, 0x32, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x53,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x52,
	0x65, 0x62, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a,
	0x15, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x29, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e,
	0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x6f, 0x67, 0x67,
	0x6c, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x1a, 0x31, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65,
	0x69, 0x62, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f,
	0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x28, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e, 0x4d,
	0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x30, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e,
	0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x05, 0x80, 0xe7, 0xb0, 0x2a, 0x01, 0x42,
	0xb2, 0x01, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73,
	0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0x42, 0x07, 0x54, 0x78, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d,
	0x69, 0x6c, 0x6b, 0x79, 0x77, 0x61, 0x79, 0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x6d, 0x69, 0x6c,
	0x6b, 0x79, 0x77, 0x61, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65,
	0x2f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62, 0x63, 0xa2, 0x02, 0x03, 0x53, 0x53, 0x58, 0xaa,
	0x02, 0x0f, 0x53, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x69, 0x62,
	0x63, 0xca, 0x02, 0x0f, 0x53, 0x74, 0x72, 0x69, 0x64, 0x65, 0x5c, 0x53, 0x74, 0x61, 0x6b, 0x65,
	0x69, 0x62, 0x63, 0xe2, 0x02, 0x1b, 0x53, 0x74, 0x72, 0x69, 0x64, 0x65, 0x5c, 0x53, 0x74, 0x61,
	0x6b, 0x65, 0x69, 0x62, 0x63, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x10, 0x53, 0x74, 0x72, 0x69, 0x64, 0x65, 0x3a, 0x3a, 0x53, 0x74, 0x61, 0x6b,
	0x65, 0x69, 0x62, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_stride_stakeibc_tx_proto_rawDescOnce sync.Once
	file_stride_stakeibc_tx_proto_rawDescData = file_stride_stakeibc_tx_proto_rawDesc
)

func file_stride_stakeibc_tx_proto_rawDescGZIP() []byte {
	file_stride_stakeibc_tx_proto_rawDescOnce.Do(func() {
		file_stride_stakeibc_tx_proto_rawDescData = protoimpl.X.CompressGZIP(file_stride_stakeibc_tx_proto_rawDescData)
	})
	return file_stride_stakeibc_tx_proto_rawDescData
}

var file_stride_stakeibc_tx_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_stride_stakeibc_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_stride_stakeibc_tx_proto_goTypes = []interface{}{
	(AuthzPermissionChange)(0),                         // 0: stride.stakeibc.AuthzPermissionChange
	(*MsgUpdateInnerRedemptionRateBounds)(nil),         // 1: stride.stakeibc.MsgUpdateInnerRedemptionRateBounds
	(*MsgUpdateInnerRedemptionRateBoundsResponse)(nil), // 2: stride.stakeibc.MsgUpdateInnerRedemptionRateBoundsResponse
	(*MsgLiquidStake)(nil),                             // 3: stride.stakeibc.MsgLiquidStake
	(*MsgLiquidStakeResponse)(nil),                     // 4: stride.stakeibc.MsgLiquidStakeResponse
	(*MsgLSMLiquidStake)(nil),                          // 5: stride.stakeibc.MsgLSMLiquidStake
	(*MsgLSMLiquidStakeResponse)(nil),                  // 6: stride.stakeibc.MsgLSMLiquidStakeResponse
	(*MsgClearBalance)(nil),                            // 7: stride.stakeibc.MsgClearBalance
	(*MsgClearBalanceResponse)(nil),                    // 8: stride.stakeibc.MsgClearBalanceResponse
	(*MsgRedeemStake)(nil),                             // 9: stride.stakeibc.MsgRedeemStake
	(*MsgRedeemStakeResponse)(nil),                     // 10: stride.stakeibc.MsgRedeemStakeResponse
	(*MsgRegisterHostZone)(nil),                        // 11: stride.stakeibc.MsgRegisterHostZone
	(*MsgRegisterHostZoneResponse)(nil),                // 12: stride.stakeibc.MsgRegisterHostZoneResponse
	(*MsgClaimUndelegatedTokens)(nil),                  // 13: stride.stakeibc.MsgClaimUndelegatedTokens
	(*MsgClaimUndelegatedTokensResponse)(nil),          // 14: stride.stakeibc.MsgClaimUndelegatedTokensResponse
	(*MsgRebalanceValidators)(nil),                     // 15: stride.stakeibc.MsgRebalanceValidators
	(*MsgRebalanceValidatorsResponse)(nil),             // 16: stride.stakeibc.MsgRebalanceValidatorsResponse
	(*MsgAddValidators)(nil),                           // 17: stride.stakeibc.MsgAddValidators
	(*MsgAddValidatorsResponse)(nil),                   // 18: stride.stakeibc.MsgAddValidatorsResponse
	(*ValidatorWeight)(nil),                            // 19: stride.stakeibc.ValidatorWeight
	(*MsgChangeValidatorWeights)(nil),                  // 20: stride.stakeibc.MsgChangeValidatorWeights
	(*MsgChangeValidatorWeightsResponse)(nil),          // 21: stride.stakeibc.MsgChangeValidatorWeightsResponse
	(*MsgDeleteValidator)(nil),                         // 22: stride.stakeibc.MsgDeleteValidator
	(*MsgDeleteValidatorResponse)(nil),                 // 23: stride.stakeibc.MsgDeleteValidatorResponse
	(*MsgRestoreInterchainAccount)(nil),                // 24: stride.stakeibc.MsgRestoreInterchainAccount
	(*MsgRestoreInterchainAccountResponse)(nil),        // 25: stride.stakeibc.MsgRestoreInterchainAccountResponse
	(*MsgUpdateValidatorSharesExchRate)(nil),           // 26: stride.stakeibc.MsgUpdateValidatorSharesExchRate
	(*MsgUpdateValidatorSharesExchRateResponse)(nil),   // 27: stride.stakeibc.MsgUpdateValidatorSharesExchRateResponse
	(*MsgCalibrateDelegation)(nil),                     // 28: stride.stakeibc.MsgCalibrateDelegation
	(*MsgCalibrateDelegationResponse)(nil),             // 29: stride.stakeibc.MsgCalibrateDelegationResponse
	(*MsgResumeHostZone)(nil),                          // 30: stride.stakeibc.MsgResumeHostZone
	(*MsgResumeHostZoneResponse)(nil),                  // 31: stride.stakeibc.MsgResumeHostZoneResponse
	(*MsgCreateTradeRoute)(nil),                        // 32: stride.stakeibc.MsgCreateTradeRoute
	(*MsgCreateTradeRouteResponse)(nil),                // 33: stride.stakeibc.MsgCreateTradeRouteResponse
	(*MsgDeleteTradeRoute)(nil),                        // 34: stride.stakeibc.MsgDeleteTradeRoute
	(*MsgDeleteTradeRouteResponse)(nil),                // 35: stride.stakeibc.MsgDeleteTradeRouteResponse
	(*MsgUpdateTradeRoute)(nil),                        // 36: stride.stakeibc.MsgUpdateTradeRoute
	(*MsgUpdateTradeRouteResponse)(nil),                // 37: stride.stakeibc.MsgUpdateTradeRouteResponse
	(*MsgSetCommunityPoolRebate)(nil),                  // 38: stride.stakeibc.MsgSetCommunityPoolRebate
	(*MsgSetCommunityPoolRebateResponse)(nil),          // 39: stride.stakeibc.MsgSetCommunityPoolRebateResponse
	(*MsgToggleTradeController)(nil),                   // 40: stride.stakeibc.MsgToggleTradeController
	(*MsgToggleTradeControllerResponse)(nil),           // 41: stride.stakeibc.MsgToggleTradeControllerResponse
	(*MsgUpdateHostZoneParams)(nil),                    // 42: stride.stakeibc.MsgUpdateHostZoneParams
	(*MsgUpdateHostZoneParamsResponse)(nil),            // 43: stride.stakeibc.MsgUpdateHostZoneParamsResponse
	(*v1beta1.Coin)(nil),                               // 44: cosmos.base.v1beta1.Coin
	(*Validator)(nil),                                  // 45: stride.stakeibc.Validator
}
var file_stride_stakeibc_tx_proto_depIdxs = []int32{
	44, // 0: stride.stakeibc.MsgLiquidStakeResponse.st_token:type_name -> cosmos.base.v1beta1.Coin
	45, // 1: stride.stakeibc.MsgAddValidators.validators:type_name -> stride.stakeibc.Validator
	19, // 2: stride.stakeibc.MsgChangeValidatorWeights.validator_weights:type_name -> stride.stakeibc.ValidatorWeight
	0,  // 3: stride.stakeibc.MsgToggleTradeController.permission_change:type_name -> stride.stakeibc.AuthzPermissionChange
	3,  // 4: stride.stakeibc.Msg.LiquidStake:input_type -> stride.stakeibc.MsgLiquidStake
	5,  // 5: stride.stakeibc.Msg.LSMLiquidStake:input_type -> stride.stakeibc.MsgLSMLiquidStake
	9,  // 6: stride.stakeibc.Msg.RedeemStake:input_type -> stride.stakeibc.MsgRedeemStake
	11, // 7: stride.stakeibc.Msg.RegisterHostZone:input_type -> stride.stakeibc.MsgRegisterHostZone
	13, // 8: stride.stakeibc.Msg.ClaimUndelegatedTokens:input_type -> stride.stakeibc.MsgClaimUndelegatedTokens
	15, // 9: stride.stakeibc.Msg.RebalanceValidators:input_type -> stride.stakeibc.MsgRebalanceValidators
	17, // 10: stride.stakeibc.Msg.AddValidators:input_type -> stride.stakeibc.MsgAddValidators
	20, // 11: stride.stakeibc.Msg.ChangeValidatorWeight:input_type -> stride.stakeibc.MsgChangeValidatorWeights
	22, // 12: stride.stakeibc.Msg.DeleteValidator:input_type -> stride.stakeibc.MsgDeleteValidator
	24, // 13: stride.stakeibc.Msg.RestoreInterchainAccount:input_type -> stride.stakeibc.MsgRestoreInterchainAccount
	26, // 14: stride.stakeibc.Msg.UpdateValidatorSharesExchRate:input_type -> stride.stakeibc.MsgUpdateValidatorSharesExchRate
	28, // 15: stride.stakeibc.Msg.CalibrateDelegation:input_type -> stride.stakeibc.MsgCalibrateDelegation
	7,  // 16: stride.stakeibc.Msg.ClearBalance:input_type -> stride.stakeibc.MsgClearBalance
	1,  // 17: stride.stakeibc.Msg.UpdateInnerRedemptionRateBounds:input_type -> stride.stakeibc.MsgUpdateInnerRedemptionRateBounds
	30, // 18: stride.stakeibc.Msg.ResumeHostZone:input_type -> stride.stakeibc.MsgResumeHostZone
	32, // 19: stride.stakeibc.Msg.CreateTradeRoute:input_type -> stride.stakeibc.MsgCreateTradeRoute
	34, // 20: stride.stakeibc.Msg.DeleteTradeRoute:input_type -> stride.stakeibc.MsgDeleteTradeRoute
	36, // 21: stride.stakeibc.Msg.UpdateTradeRoute:input_type -> stride.stakeibc.MsgUpdateTradeRoute
	38, // 22: stride.stakeibc.Msg.SetCommunityPoolRebate:input_type -> stride.stakeibc.MsgSetCommunityPoolRebate
	40, // 23: stride.stakeibc.Msg.ToggleTradeController:input_type -> stride.stakeibc.MsgToggleTradeController
	42, // 24: stride.stakeibc.Msg.UpdateHostZoneParams:input_type -> stride.stakeibc.MsgUpdateHostZoneParams
	4,  // 25: stride.stakeibc.Msg.LiquidStake:output_type -> stride.stakeibc.MsgLiquidStakeResponse
	6,  // 26: stride.stakeibc.Msg.LSMLiquidStake:output_type -> stride.stakeibc.MsgLSMLiquidStakeResponse
	10, // 27: stride.stakeibc.Msg.RedeemStake:output_type -> stride.stakeibc.MsgRedeemStakeResponse
	12, // 28: stride.stakeibc.Msg.RegisterHostZone:output_type -> stride.stakeibc.MsgRegisterHostZoneResponse
	14, // 29: stride.stakeibc.Msg.ClaimUndelegatedTokens:output_type -> stride.stakeibc.MsgClaimUndelegatedTokensResponse
	16, // 30: stride.stakeibc.Msg.RebalanceValidators:output_type -> stride.stakeibc.MsgRebalanceValidatorsResponse
	18, // 31: stride.stakeibc.Msg.AddValidators:output_type -> stride.stakeibc.MsgAddValidatorsResponse
	21, // 32: stride.stakeibc.Msg.ChangeValidatorWeight:output_type -> stride.stakeibc.MsgChangeValidatorWeightsResponse
	23, // 33: stride.stakeibc.Msg.DeleteValidator:output_type -> stride.stakeibc.MsgDeleteValidatorResponse
	25, // 34: stride.stakeibc.Msg.RestoreInterchainAccount:output_type -> stride.stakeibc.MsgRestoreInterchainAccountResponse
	27, // 35: stride.stakeibc.Msg.UpdateValidatorSharesExchRate:output_type -> stride.stakeibc.MsgUpdateValidatorSharesExchRateResponse
	29, // 36: stride.stakeibc.Msg.CalibrateDelegation:output_type -> stride.stakeibc.MsgCalibrateDelegationResponse
	8,  // 37: stride.stakeibc.Msg.ClearBalance:output_type -> stride.stakeibc.MsgClearBalanceResponse
	2,  // 38: stride.stakeibc.Msg.UpdateInnerRedemptionRateBounds:output_type -> stride.stakeibc.MsgUpdateInnerRedemptionRateBoundsResponse
	31, // 39: stride.stakeibc.Msg.ResumeHostZone:output_type -> stride.stakeibc.MsgResumeHostZoneResponse
	33, // 40: stride.stakeibc.Msg.CreateTradeRoute:output_type -> stride.stakeibc.MsgCreateTradeRouteResponse
	35, // 41: stride.stakeibc.Msg.DeleteTradeRoute:output_type -> stride.stakeibc.MsgDeleteTradeRouteResponse
	37, // 42: stride.stakeibc.Msg.UpdateTradeRoute:output_type -> stride.stakeibc.MsgUpdateTradeRouteResponse
	39, // 43: stride.stakeibc.Msg.SetCommunityPoolRebate:output_type -> stride.stakeibc.MsgSetCommunityPoolRebateResponse
	41, // 44: stride.stakeibc.Msg.ToggleTradeController:output_type -> stride.stakeibc.MsgToggleTradeControllerResponse
	43, // 45: stride.stakeibc.Msg.UpdateHostZoneParams:output_type -> stride.stakeibc.MsgUpdateHostZoneParamsResponse
	25, // [25:46] is the sub-list for method output_type
	4,  // [4:25] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_stride_stakeibc_tx_proto_init() }
func file_stride_stakeibc_tx_proto_init() {
	if File_stride_stakeibc_tx_proto != nil {
		return
	}
	file_stride_stakeibc_validator_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_stride_stakeibc_tx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateInnerRedemptionRateBounds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateInnerRedemptionRateBoundsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgLiquidStake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgLiquidStakeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgLSMLiquidStake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgLSMLiquidStakeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgClearBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgClearBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRedeemStake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRedeemStakeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRegisterHostZone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRegisterHostZoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgClaimUndelegatedTokens); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgClaimUndelegatedTokensResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRebalanceValidators); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRebalanceValidatorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddValidators); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddValidatorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatorWeight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChangeValidatorWeights); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChangeValidatorWeightsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteValidator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteValidatorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRestoreInterchainAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRestoreInterchainAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateValidatorSharesExchRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateValidatorSharesExchRateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCalibrateDelegation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCalibrateDelegationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgResumeHostZone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgResumeHostZoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateTradeRoute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateTradeRouteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteTradeRoute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteTradeRouteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateTradeRoute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateTradeRouteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSetCommunityPoolRebate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSetCommunityPoolRebateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgToggleTradeController); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgToggleTradeControllerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateHostZoneParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_stakeibc_tx_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateHostZoneParamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stride_stakeibc_tx_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stride_stakeibc_tx_proto_goTypes,
		DependencyIndexes: file_stride_stakeibc_tx_proto_depIdxs,
		EnumInfos:         file_stride_stakeibc_tx_proto_enumTypes,
		MessageInfos:      file_stride_stakeibc_tx_proto_msgTypes,
	}.Build()
	File_stride_stakeibc_tx_proto = out.File
	file_stride_stakeibc_tx_proto_rawDesc = nil
	file_stride_stakeibc_tx_proto_goTypes = nil
	file_stride_stakeibc_tx_proto_depIdxs = nil
}
