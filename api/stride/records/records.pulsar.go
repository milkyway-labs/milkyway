// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package records

import (
	fmt "fmt"
	io "io"
	reflect "reflect"
	sync "sync"

	v1beta1 "cosmossdk.io/api/cosmos/base/v1beta1"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

var (
	md_UserRedemptionRecord                     protoreflect.MessageDescriptor
	fd_UserRedemptionRecord_id                  protoreflect.FieldDescriptor
	fd_UserRedemptionRecord_receiver            protoreflect.FieldDescriptor
	fd_UserRedemptionRecord_native_token_amount protoreflect.FieldDescriptor
	fd_UserRedemptionRecord_denom               protoreflect.FieldDescriptor
	fd_UserRedemptionRecord_host_zone_id        protoreflect.FieldDescriptor
	fd_UserRedemptionRecord_epoch_number        protoreflect.FieldDescriptor
	fd_UserRedemptionRecord_claim_is_pending    protoreflect.FieldDescriptor
	fd_UserRedemptionRecord_st_token_amount     protoreflect.FieldDescriptor
)

func init() {
	file_stride_records_records_proto_init()
	md_UserRedemptionRecord = File_stride_records_records_proto.Messages().ByName("UserRedemptionRecord")
	fd_UserRedemptionRecord_id = md_UserRedemptionRecord.Fields().ByName("id")
	fd_UserRedemptionRecord_receiver = md_UserRedemptionRecord.Fields().ByName("receiver")
	fd_UserRedemptionRecord_native_token_amount = md_UserRedemptionRecord.Fields().ByName("native_token_amount")
	fd_UserRedemptionRecord_denom = md_UserRedemptionRecord.Fields().ByName("denom")
	fd_UserRedemptionRecord_host_zone_id = md_UserRedemptionRecord.Fields().ByName("host_zone_id")
	fd_UserRedemptionRecord_epoch_number = md_UserRedemptionRecord.Fields().ByName("epoch_number")
	fd_UserRedemptionRecord_claim_is_pending = md_UserRedemptionRecord.Fields().ByName("claim_is_pending")
	fd_UserRedemptionRecord_st_token_amount = md_UserRedemptionRecord.Fields().ByName("st_token_amount")
}

var _ protoreflect.Message = (*fastReflection_UserRedemptionRecord)(nil)

type fastReflection_UserRedemptionRecord UserRedemptionRecord

func (x *UserRedemptionRecord) ProtoReflect() protoreflect.Message {
	return (*fastReflection_UserRedemptionRecord)(x)
}

func (x *UserRedemptionRecord) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_records_records_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_UserRedemptionRecord_messageType fastReflection_UserRedemptionRecord_messageType
var _ protoreflect.MessageType = fastReflection_UserRedemptionRecord_messageType{}

type fastReflection_UserRedemptionRecord_messageType struct{}

func (x fastReflection_UserRedemptionRecord_messageType) Zero() protoreflect.Message {
	return (*fastReflection_UserRedemptionRecord)(nil)
}
func (x fastReflection_UserRedemptionRecord_messageType) New() protoreflect.Message {
	return new(fastReflection_UserRedemptionRecord)
}
func (x fastReflection_UserRedemptionRecord_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_UserRedemptionRecord
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_UserRedemptionRecord) Descriptor() protoreflect.MessageDescriptor {
	return md_UserRedemptionRecord
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_UserRedemptionRecord) Type() protoreflect.MessageType {
	return _fastReflection_UserRedemptionRecord_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_UserRedemptionRecord) New() protoreflect.Message {
	return new(fastReflection_UserRedemptionRecord)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_UserRedemptionRecord) Interface() protoreflect.ProtoMessage {
	return (*UserRedemptionRecord)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_UserRedemptionRecord) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != "" {
		value := protoreflect.ValueOfString(x.Id)
		if !f(fd_UserRedemptionRecord_id, value) {
			return
		}
	}
	if x.Receiver != "" {
		value := protoreflect.ValueOfString(x.Receiver)
		if !f(fd_UserRedemptionRecord_receiver, value) {
			return
		}
	}
	if x.NativeTokenAmount != "" {
		value := protoreflect.ValueOfString(x.NativeTokenAmount)
		if !f(fd_UserRedemptionRecord_native_token_amount, value) {
			return
		}
	}
	if x.Denom != "" {
		value := protoreflect.ValueOfString(x.Denom)
		if !f(fd_UserRedemptionRecord_denom, value) {
			return
		}
	}
	if x.HostZoneId != "" {
		value := protoreflect.ValueOfString(x.HostZoneId)
		if !f(fd_UserRedemptionRecord_host_zone_id, value) {
			return
		}
	}
	if x.EpochNumber != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EpochNumber)
		if !f(fd_UserRedemptionRecord_epoch_number, value) {
			return
		}
	}
	if x.ClaimIsPending != false {
		value := protoreflect.ValueOfBool(x.ClaimIsPending)
		if !f(fd_UserRedemptionRecord_claim_is_pending, value) {
			return
		}
	}
	if x.StTokenAmount != "" {
		value := protoreflect.ValueOfString(x.StTokenAmount)
		if !f(fd_UserRedemptionRecord_st_token_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_UserRedemptionRecord) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.records.UserRedemptionRecord.id":
		return x.Id != ""
	case "stride.records.UserRedemptionRecord.receiver":
		return x.Receiver != ""
	case "stride.records.UserRedemptionRecord.native_token_amount":
		return x.NativeTokenAmount != ""
	case "stride.records.UserRedemptionRecord.denom":
		return x.Denom != ""
	case "stride.records.UserRedemptionRecord.host_zone_id":
		return x.HostZoneId != ""
	case "stride.records.UserRedemptionRecord.epoch_number":
		return x.EpochNumber != uint64(0)
	case "stride.records.UserRedemptionRecord.claim_is_pending":
		return x.ClaimIsPending != false
	case "stride.records.UserRedemptionRecord.st_token_amount":
		return x.StTokenAmount != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.UserRedemptionRecord"))
		}
		panic(fmt.Errorf("message stride.records.UserRedemptionRecord does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UserRedemptionRecord) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.records.UserRedemptionRecord.id":
		x.Id = ""
	case "stride.records.UserRedemptionRecord.receiver":
		x.Receiver = ""
	case "stride.records.UserRedemptionRecord.native_token_amount":
		x.NativeTokenAmount = ""
	case "stride.records.UserRedemptionRecord.denom":
		x.Denom = ""
	case "stride.records.UserRedemptionRecord.host_zone_id":
		x.HostZoneId = ""
	case "stride.records.UserRedemptionRecord.epoch_number":
		x.EpochNumber = uint64(0)
	case "stride.records.UserRedemptionRecord.claim_is_pending":
		x.ClaimIsPending = false
	case "stride.records.UserRedemptionRecord.st_token_amount":
		x.StTokenAmount = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.UserRedemptionRecord"))
		}
		panic(fmt.Errorf("message stride.records.UserRedemptionRecord does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_UserRedemptionRecord) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.records.UserRedemptionRecord.id":
		value := x.Id
		return protoreflect.ValueOfString(value)
	case "stride.records.UserRedemptionRecord.receiver":
		value := x.Receiver
		return protoreflect.ValueOfString(value)
	case "stride.records.UserRedemptionRecord.native_token_amount":
		value := x.NativeTokenAmount
		return protoreflect.ValueOfString(value)
	case "stride.records.UserRedemptionRecord.denom":
		value := x.Denom
		return protoreflect.ValueOfString(value)
	case "stride.records.UserRedemptionRecord.host_zone_id":
		value := x.HostZoneId
		return protoreflect.ValueOfString(value)
	case "stride.records.UserRedemptionRecord.epoch_number":
		value := x.EpochNumber
		return protoreflect.ValueOfUint64(value)
	case "stride.records.UserRedemptionRecord.claim_is_pending":
		value := x.ClaimIsPending
		return protoreflect.ValueOfBool(value)
	case "stride.records.UserRedemptionRecord.st_token_amount":
		value := x.StTokenAmount
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.UserRedemptionRecord"))
		}
		panic(fmt.Errorf("message stride.records.UserRedemptionRecord does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UserRedemptionRecord) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.records.UserRedemptionRecord.id":
		x.Id = value.Interface().(string)
	case "stride.records.UserRedemptionRecord.receiver":
		x.Receiver = value.Interface().(string)
	case "stride.records.UserRedemptionRecord.native_token_amount":
		x.NativeTokenAmount = value.Interface().(string)
	case "stride.records.UserRedemptionRecord.denom":
		x.Denom = value.Interface().(string)
	case "stride.records.UserRedemptionRecord.host_zone_id":
		x.HostZoneId = value.Interface().(string)
	case "stride.records.UserRedemptionRecord.epoch_number":
		x.EpochNumber = value.Uint()
	case "stride.records.UserRedemptionRecord.claim_is_pending":
		x.ClaimIsPending = value.Bool()
	case "stride.records.UserRedemptionRecord.st_token_amount":
		x.StTokenAmount = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.UserRedemptionRecord"))
		}
		panic(fmt.Errorf("message stride.records.UserRedemptionRecord does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UserRedemptionRecord) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.records.UserRedemptionRecord.id":
		panic(fmt.Errorf("field id of message stride.records.UserRedemptionRecord is not mutable"))
	case "stride.records.UserRedemptionRecord.receiver":
		panic(fmt.Errorf("field receiver of message stride.records.UserRedemptionRecord is not mutable"))
	case "stride.records.UserRedemptionRecord.native_token_amount":
		panic(fmt.Errorf("field native_token_amount of message stride.records.UserRedemptionRecord is not mutable"))
	case "stride.records.UserRedemptionRecord.denom":
		panic(fmt.Errorf("field denom of message stride.records.UserRedemptionRecord is not mutable"))
	case "stride.records.UserRedemptionRecord.host_zone_id":
		panic(fmt.Errorf("field host_zone_id of message stride.records.UserRedemptionRecord is not mutable"))
	case "stride.records.UserRedemptionRecord.epoch_number":
		panic(fmt.Errorf("field epoch_number of message stride.records.UserRedemptionRecord is not mutable"))
	case "stride.records.UserRedemptionRecord.claim_is_pending":
		panic(fmt.Errorf("field claim_is_pending of message stride.records.UserRedemptionRecord is not mutable"))
	case "stride.records.UserRedemptionRecord.st_token_amount":
		panic(fmt.Errorf("field st_token_amount of message stride.records.UserRedemptionRecord is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.UserRedemptionRecord"))
		}
		panic(fmt.Errorf("message stride.records.UserRedemptionRecord does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_UserRedemptionRecord) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.records.UserRedemptionRecord.id":
		return protoreflect.ValueOfString("")
	case "stride.records.UserRedemptionRecord.receiver":
		return protoreflect.ValueOfString("")
	case "stride.records.UserRedemptionRecord.native_token_amount":
		return protoreflect.ValueOfString("")
	case "stride.records.UserRedemptionRecord.denom":
		return protoreflect.ValueOfString("")
	case "stride.records.UserRedemptionRecord.host_zone_id":
		return protoreflect.ValueOfString("")
	case "stride.records.UserRedemptionRecord.epoch_number":
		return protoreflect.ValueOfUint64(uint64(0))
	case "stride.records.UserRedemptionRecord.claim_is_pending":
		return protoreflect.ValueOfBool(false)
	case "stride.records.UserRedemptionRecord.st_token_amount":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.UserRedemptionRecord"))
		}
		panic(fmt.Errorf("message stride.records.UserRedemptionRecord does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_UserRedemptionRecord) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.records.UserRedemptionRecord", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_UserRedemptionRecord) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UserRedemptionRecord) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_UserRedemptionRecord) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_UserRedemptionRecord) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*UserRedemptionRecord)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Id)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Receiver)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.NativeTokenAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Denom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.HostZoneId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.EpochNumber != 0 {
			n += 1 + runtime.Sov(uint64(x.EpochNumber))
		}
		if x.ClaimIsPending {
			n += 2
		}
		l = len(x.StTokenAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*UserRedemptionRecord)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.StTokenAmount) > 0 {
			i -= len(x.StTokenAmount)
			copy(dAtA[i:], x.StTokenAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.StTokenAmount)))
			i--
			dAtA[i] = 0x4a
		}
		if x.ClaimIsPending {
			i--
			if x.ClaimIsPending {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x40
		}
		if x.EpochNumber != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EpochNumber))
			i--
			dAtA[i] = 0x38
		}
		if len(x.HostZoneId) > 0 {
			i -= len(x.HostZoneId)
			copy(dAtA[i:], x.HostZoneId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HostZoneId)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.Denom) > 0 {
			i -= len(x.Denom)
			copy(dAtA[i:], x.Denom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Denom)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.NativeTokenAmount) > 0 {
			i -= len(x.NativeTokenAmount)
			copy(dAtA[i:], x.NativeTokenAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.NativeTokenAmount)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Receiver) > 0 {
			i -= len(x.Receiver)
			copy(dAtA[i:], x.Receiver)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Receiver)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Id) > 0 {
			i -= len(x.Id)
			copy(dAtA[i:], x.Id)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Id)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*UserRedemptionRecord)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UserRedemptionRecord: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UserRedemptionRecord: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Id = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Receiver = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NativeTokenAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NativeTokenAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Denom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HostZoneId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HostZoneId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EpochNumber", wireType)
				}
				x.EpochNumber = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EpochNumber |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ClaimIsPending", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.ClaimIsPending = bool(v != 0)
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StTokenAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.StTokenAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_DepositRecord                      protoreflect.MessageDescriptor
	fd_DepositRecord_id                   protoreflect.FieldDescriptor
	fd_DepositRecord_amount               protoreflect.FieldDescriptor
	fd_DepositRecord_denom                protoreflect.FieldDescriptor
	fd_DepositRecord_host_zone_id         protoreflect.FieldDescriptor
	fd_DepositRecord_status               protoreflect.FieldDescriptor
	fd_DepositRecord_deposit_epoch_number protoreflect.FieldDescriptor
	fd_DepositRecord_source               protoreflect.FieldDescriptor
)

func init() {
	file_stride_records_records_proto_init()
	md_DepositRecord = File_stride_records_records_proto.Messages().ByName("DepositRecord")
	fd_DepositRecord_id = md_DepositRecord.Fields().ByName("id")
	fd_DepositRecord_amount = md_DepositRecord.Fields().ByName("amount")
	fd_DepositRecord_denom = md_DepositRecord.Fields().ByName("denom")
	fd_DepositRecord_host_zone_id = md_DepositRecord.Fields().ByName("host_zone_id")
	fd_DepositRecord_status = md_DepositRecord.Fields().ByName("status")
	fd_DepositRecord_deposit_epoch_number = md_DepositRecord.Fields().ByName("deposit_epoch_number")
	fd_DepositRecord_source = md_DepositRecord.Fields().ByName("source")
}

var _ protoreflect.Message = (*fastReflection_DepositRecord)(nil)

type fastReflection_DepositRecord DepositRecord

func (x *DepositRecord) ProtoReflect() protoreflect.Message {
	return (*fastReflection_DepositRecord)(x)
}

func (x *DepositRecord) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_records_records_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_DepositRecord_messageType fastReflection_DepositRecord_messageType
var _ protoreflect.MessageType = fastReflection_DepositRecord_messageType{}

type fastReflection_DepositRecord_messageType struct{}

func (x fastReflection_DepositRecord_messageType) Zero() protoreflect.Message {
	return (*fastReflection_DepositRecord)(nil)
}
func (x fastReflection_DepositRecord_messageType) New() protoreflect.Message {
	return new(fastReflection_DepositRecord)
}
func (x fastReflection_DepositRecord_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_DepositRecord
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_DepositRecord) Descriptor() protoreflect.MessageDescriptor {
	return md_DepositRecord
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_DepositRecord) Type() protoreflect.MessageType {
	return _fastReflection_DepositRecord_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_DepositRecord) New() protoreflect.Message {
	return new(fastReflection_DepositRecord)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_DepositRecord) Interface() protoreflect.ProtoMessage {
	return (*DepositRecord)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_DepositRecord) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_DepositRecord_id, value) {
			return
		}
	}
	if x.Amount != "" {
		value := protoreflect.ValueOfString(x.Amount)
		if !f(fd_DepositRecord_amount, value) {
			return
		}
	}
	if x.Denom != "" {
		value := protoreflect.ValueOfString(x.Denom)
		if !f(fd_DepositRecord_denom, value) {
			return
		}
	}
	if x.HostZoneId != "" {
		value := protoreflect.ValueOfString(x.HostZoneId)
		if !f(fd_DepositRecord_host_zone_id, value) {
			return
		}
	}
	if x.Status != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Status))
		if !f(fd_DepositRecord_status, value) {
			return
		}
	}
	if x.DepositEpochNumber != uint64(0) {
		value := protoreflect.ValueOfUint64(x.DepositEpochNumber)
		if !f(fd_DepositRecord_deposit_epoch_number, value) {
			return
		}
	}
	if x.Source != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Source))
		if !f(fd_DepositRecord_source, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_DepositRecord) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.records.DepositRecord.id":
		return x.Id != uint64(0)
	case "stride.records.DepositRecord.amount":
		return x.Amount != ""
	case "stride.records.DepositRecord.denom":
		return x.Denom != ""
	case "stride.records.DepositRecord.host_zone_id":
		return x.HostZoneId != ""
	case "stride.records.DepositRecord.status":
		return x.Status != 0
	case "stride.records.DepositRecord.deposit_epoch_number":
		return x.DepositEpochNumber != uint64(0)
	case "stride.records.DepositRecord.source":
		return x.Source != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.DepositRecord"))
		}
		panic(fmt.Errorf("message stride.records.DepositRecord does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DepositRecord) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.records.DepositRecord.id":
		x.Id = uint64(0)
	case "stride.records.DepositRecord.amount":
		x.Amount = ""
	case "stride.records.DepositRecord.denom":
		x.Denom = ""
	case "stride.records.DepositRecord.host_zone_id":
		x.HostZoneId = ""
	case "stride.records.DepositRecord.status":
		x.Status = 0
	case "stride.records.DepositRecord.deposit_epoch_number":
		x.DepositEpochNumber = uint64(0)
	case "stride.records.DepositRecord.source":
		x.Source = 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.DepositRecord"))
		}
		panic(fmt.Errorf("message stride.records.DepositRecord does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_DepositRecord) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.records.DepositRecord.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "stride.records.DepositRecord.amount":
		value := x.Amount
		return protoreflect.ValueOfString(value)
	case "stride.records.DepositRecord.denom":
		value := x.Denom
		return protoreflect.ValueOfString(value)
	case "stride.records.DepositRecord.host_zone_id":
		value := x.HostZoneId
		return protoreflect.ValueOfString(value)
	case "stride.records.DepositRecord.status":
		value := x.Status
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "stride.records.DepositRecord.deposit_epoch_number":
		value := x.DepositEpochNumber
		return protoreflect.ValueOfUint64(value)
	case "stride.records.DepositRecord.source":
		value := x.Source
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.DepositRecord"))
		}
		panic(fmt.Errorf("message stride.records.DepositRecord does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DepositRecord) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.records.DepositRecord.id":
		x.Id = value.Uint()
	case "stride.records.DepositRecord.amount":
		x.Amount = value.Interface().(string)
	case "stride.records.DepositRecord.denom":
		x.Denom = value.Interface().(string)
	case "stride.records.DepositRecord.host_zone_id":
		x.HostZoneId = value.Interface().(string)
	case "stride.records.DepositRecord.status":
		x.Status = (DepositRecord_Status)(value.Enum())
	case "stride.records.DepositRecord.deposit_epoch_number":
		x.DepositEpochNumber = value.Uint()
	case "stride.records.DepositRecord.source":
		x.Source = (DepositRecord_Source)(value.Enum())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.DepositRecord"))
		}
		panic(fmt.Errorf("message stride.records.DepositRecord does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DepositRecord) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.records.DepositRecord.id":
		panic(fmt.Errorf("field id of message stride.records.DepositRecord is not mutable"))
	case "stride.records.DepositRecord.amount":
		panic(fmt.Errorf("field amount of message stride.records.DepositRecord is not mutable"))
	case "stride.records.DepositRecord.denom":
		panic(fmt.Errorf("field denom of message stride.records.DepositRecord is not mutable"))
	case "stride.records.DepositRecord.host_zone_id":
		panic(fmt.Errorf("field host_zone_id of message stride.records.DepositRecord is not mutable"))
	case "stride.records.DepositRecord.status":
		panic(fmt.Errorf("field status of message stride.records.DepositRecord is not mutable"))
	case "stride.records.DepositRecord.deposit_epoch_number":
		panic(fmt.Errorf("field deposit_epoch_number of message stride.records.DepositRecord is not mutable"))
	case "stride.records.DepositRecord.source":
		panic(fmt.Errorf("field source of message stride.records.DepositRecord is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.DepositRecord"))
		}
		panic(fmt.Errorf("message stride.records.DepositRecord does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_DepositRecord) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.records.DepositRecord.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "stride.records.DepositRecord.amount":
		return protoreflect.ValueOfString("")
	case "stride.records.DepositRecord.denom":
		return protoreflect.ValueOfString("")
	case "stride.records.DepositRecord.host_zone_id":
		return protoreflect.ValueOfString("")
	case "stride.records.DepositRecord.status":
		return protoreflect.ValueOfEnum(0)
	case "stride.records.DepositRecord.deposit_epoch_number":
		return protoreflect.ValueOfUint64(uint64(0))
	case "stride.records.DepositRecord.source":
		return protoreflect.ValueOfEnum(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.DepositRecord"))
		}
		panic(fmt.Errorf("message stride.records.DepositRecord does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_DepositRecord) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.records.DepositRecord", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_DepositRecord) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DepositRecord) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_DepositRecord) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_DepositRecord) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*DepositRecord)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		l = len(x.Amount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Denom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.HostZoneId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Status != 0 {
			n += 1 + runtime.Sov(uint64(x.Status))
		}
		if x.DepositEpochNumber != 0 {
			n += 1 + runtime.Sov(uint64(x.DepositEpochNumber))
		}
		if x.Source != 0 {
			n += 1 + runtime.Sov(uint64(x.Source))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*DepositRecord)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Source != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Source))
			i--
			dAtA[i] = 0x40
		}
		if x.DepositEpochNumber != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.DepositEpochNumber))
			i--
			dAtA[i] = 0x38
		}
		if x.Status != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Status))
			i--
			dAtA[i] = 0x30
		}
		if len(x.HostZoneId) > 0 {
			i -= len(x.HostZoneId)
			copy(dAtA[i:], x.HostZoneId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HostZoneId)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Denom) > 0 {
			i -= len(x.Denom)
			copy(dAtA[i:], x.Denom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Denom)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Amount) > 0 {
			i -= len(x.Amount)
			copy(dAtA[i:], x.Amount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Amount)))
			i--
			dAtA[i] = 0x12
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*DepositRecord)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DepositRecord: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DepositRecord: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Amount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Denom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HostZoneId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HostZoneId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				x.Status = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Status |= DepositRecord_Status(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DepositEpochNumber", wireType)
				}
				x.DepositEpochNumber = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.DepositEpochNumber |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Source", wireType)
				}
				x.Source = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Source |= DepositRecord_Source(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_HostZoneUnbonding_7_list)(nil)

type _HostZoneUnbonding_7_list struct {
	list *[]string
}

func (x *_HostZoneUnbonding_7_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_HostZoneUnbonding_7_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_HostZoneUnbonding_7_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_HostZoneUnbonding_7_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_HostZoneUnbonding_7_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message HostZoneUnbonding at list field UserRedemptionRecords as it is not of Message kind"))
}

func (x *_HostZoneUnbonding_7_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_HostZoneUnbonding_7_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_HostZoneUnbonding_7_list) IsValid() bool {
	return x.list != nil
}

var (
	md_HostZoneUnbonding                         protoreflect.MessageDescriptor
	fd_HostZoneUnbonding_st_token_amount         protoreflect.FieldDescriptor
	fd_HostZoneUnbonding_native_token_amount     protoreflect.FieldDescriptor
	fd_HostZoneUnbonding_denom                   protoreflect.FieldDescriptor
	fd_HostZoneUnbonding_host_zone_id            protoreflect.FieldDescriptor
	fd_HostZoneUnbonding_unbonding_time          protoreflect.FieldDescriptor
	fd_HostZoneUnbonding_status                  protoreflect.FieldDescriptor
	fd_HostZoneUnbonding_user_redemption_records protoreflect.FieldDescriptor
)

func init() {
	file_stride_records_records_proto_init()
	md_HostZoneUnbonding = File_stride_records_records_proto.Messages().ByName("HostZoneUnbonding")
	fd_HostZoneUnbonding_st_token_amount = md_HostZoneUnbonding.Fields().ByName("st_token_amount")
	fd_HostZoneUnbonding_native_token_amount = md_HostZoneUnbonding.Fields().ByName("native_token_amount")
	fd_HostZoneUnbonding_denom = md_HostZoneUnbonding.Fields().ByName("denom")
	fd_HostZoneUnbonding_host_zone_id = md_HostZoneUnbonding.Fields().ByName("host_zone_id")
	fd_HostZoneUnbonding_unbonding_time = md_HostZoneUnbonding.Fields().ByName("unbonding_time")
	fd_HostZoneUnbonding_status = md_HostZoneUnbonding.Fields().ByName("status")
	fd_HostZoneUnbonding_user_redemption_records = md_HostZoneUnbonding.Fields().ByName("user_redemption_records")
}

var _ protoreflect.Message = (*fastReflection_HostZoneUnbonding)(nil)

type fastReflection_HostZoneUnbonding HostZoneUnbonding

func (x *HostZoneUnbonding) ProtoReflect() protoreflect.Message {
	return (*fastReflection_HostZoneUnbonding)(x)
}

func (x *HostZoneUnbonding) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_records_records_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_HostZoneUnbonding_messageType fastReflection_HostZoneUnbonding_messageType
var _ protoreflect.MessageType = fastReflection_HostZoneUnbonding_messageType{}

type fastReflection_HostZoneUnbonding_messageType struct{}

func (x fastReflection_HostZoneUnbonding_messageType) Zero() protoreflect.Message {
	return (*fastReflection_HostZoneUnbonding)(nil)
}
func (x fastReflection_HostZoneUnbonding_messageType) New() protoreflect.Message {
	return new(fastReflection_HostZoneUnbonding)
}
func (x fastReflection_HostZoneUnbonding_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_HostZoneUnbonding
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_HostZoneUnbonding) Descriptor() protoreflect.MessageDescriptor {
	return md_HostZoneUnbonding
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_HostZoneUnbonding) Type() protoreflect.MessageType {
	return _fastReflection_HostZoneUnbonding_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_HostZoneUnbonding) New() protoreflect.Message {
	return new(fastReflection_HostZoneUnbonding)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_HostZoneUnbonding) Interface() protoreflect.ProtoMessage {
	return (*HostZoneUnbonding)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_HostZoneUnbonding) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.StTokenAmount != "" {
		value := protoreflect.ValueOfString(x.StTokenAmount)
		if !f(fd_HostZoneUnbonding_st_token_amount, value) {
			return
		}
	}
	if x.NativeTokenAmount != "" {
		value := protoreflect.ValueOfString(x.NativeTokenAmount)
		if !f(fd_HostZoneUnbonding_native_token_amount, value) {
			return
		}
	}
	if x.Denom != "" {
		value := protoreflect.ValueOfString(x.Denom)
		if !f(fd_HostZoneUnbonding_denom, value) {
			return
		}
	}
	if x.HostZoneId != "" {
		value := protoreflect.ValueOfString(x.HostZoneId)
		if !f(fd_HostZoneUnbonding_host_zone_id, value) {
			return
		}
	}
	if x.UnbondingTime != uint64(0) {
		value := protoreflect.ValueOfUint64(x.UnbondingTime)
		if !f(fd_HostZoneUnbonding_unbonding_time, value) {
			return
		}
	}
	if x.Status != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Status))
		if !f(fd_HostZoneUnbonding_status, value) {
			return
		}
	}
	if len(x.UserRedemptionRecords) != 0 {
		value := protoreflect.ValueOfList(&_HostZoneUnbonding_7_list{list: &x.UserRedemptionRecords})
		if !f(fd_HostZoneUnbonding_user_redemption_records, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_HostZoneUnbonding) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.records.HostZoneUnbonding.st_token_amount":
		return x.StTokenAmount != ""
	case "stride.records.HostZoneUnbonding.native_token_amount":
		return x.NativeTokenAmount != ""
	case "stride.records.HostZoneUnbonding.denom":
		return x.Denom != ""
	case "stride.records.HostZoneUnbonding.host_zone_id":
		return x.HostZoneId != ""
	case "stride.records.HostZoneUnbonding.unbonding_time":
		return x.UnbondingTime != uint64(0)
	case "stride.records.HostZoneUnbonding.status":
		return x.Status != 0
	case "stride.records.HostZoneUnbonding.user_redemption_records":
		return len(x.UserRedemptionRecords) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.HostZoneUnbonding"))
		}
		panic(fmt.Errorf("message stride.records.HostZoneUnbonding does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_HostZoneUnbonding) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.records.HostZoneUnbonding.st_token_amount":
		x.StTokenAmount = ""
	case "stride.records.HostZoneUnbonding.native_token_amount":
		x.NativeTokenAmount = ""
	case "stride.records.HostZoneUnbonding.denom":
		x.Denom = ""
	case "stride.records.HostZoneUnbonding.host_zone_id":
		x.HostZoneId = ""
	case "stride.records.HostZoneUnbonding.unbonding_time":
		x.UnbondingTime = uint64(0)
	case "stride.records.HostZoneUnbonding.status":
		x.Status = 0
	case "stride.records.HostZoneUnbonding.user_redemption_records":
		x.UserRedemptionRecords = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.HostZoneUnbonding"))
		}
		panic(fmt.Errorf("message stride.records.HostZoneUnbonding does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_HostZoneUnbonding) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.records.HostZoneUnbonding.st_token_amount":
		value := x.StTokenAmount
		return protoreflect.ValueOfString(value)
	case "stride.records.HostZoneUnbonding.native_token_amount":
		value := x.NativeTokenAmount
		return protoreflect.ValueOfString(value)
	case "stride.records.HostZoneUnbonding.denom":
		value := x.Denom
		return protoreflect.ValueOfString(value)
	case "stride.records.HostZoneUnbonding.host_zone_id":
		value := x.HostZoneId
		return protoreflect.ValueOfString(value)
	case "stride.records.HostZoneUnbonding.unbonding_time":
		value := x.UnbondingTime
		return protoreflect.ValueOfUint64(value)
	case "stride.records.HostZoneUnbonding.status":
		value := x.Status
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "stride.records.HostZoneUnbonding.user_redemption_records":
		if len(x.UserRedemptionRecords) == 0 {
			return protoreflect.ValueOfList(&_HostZoneUnbonding_7_list{})
		}
		listValue := &_HostZoneUnbonding_7_list{list: &x.UserRedemptionRecords}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.HostZoneUnbonding"))
		}
		panic(fmt.Errorf("message stride.records.HostZoneUnbonding does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_HostZoneUnbonding) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.records.HostZoneUnbonding.st_token_amount":
		x.StTokenAmount = value.Interface().(string)
	case "stride.records.HostZoneUnbonding.native_token_amount":
		x.NativeTokenAmount = value.Interface().(string)
	case "stride.records.HostZoneUnbonding.denom":
		x.Denom = value.Interface().(string)
	case "stride.records.HostZoneUnbonding.host_zone_id":
		x.HostZoneId = value.Interface().(string)
	case "stride.records.HostZoneUnbonding.unbonding_time":
		x.UnbondingTime = value.Uint()
	case "stride.records.HostZoneUnbonding.status":
		x.Status = (HostZoneUnbonding_Status)(value.Enum())
	case "stride.records.HostZoneUnbonding.user_redemption_records":
		lv := value.List()
		clv := lv.(*_HostZoneUnbonding_7_list)
		x.UserRedemptionRecords = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.HostZoneUnbonding"))
		}
		panic(fmt.Errorf("message stride.records.HostZoneUnbonding does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_HostZoneUnbonding) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.records.HostZoneUnbonding.user_redemption_records":
		if x.UserRedemptionRecords == nil {
			x.UserRedemptionRecords = []string{}
		}
		value := &_HostZoneUnbonding_7_list{list: &x.UserRedemptionRecords}
		return protoreflect.ValueOfList(value)
	case "stride.records.HostZoneUnbonding.st_token_amount":
		panic(fmt.Errorf("field st_token_amount of message stride.records.HostZoneUnbonding is not mutable"))
	case "stride.records.HostZoneUnbonding.native_token_amount":
		panic(fmt.Errorf("field native_token_amount of message stride.records.HostZoneUnbonding is not mutable"))
	case "stride.records.HostZoneUnbonding.denom":
		panic(fmt.Errorf("field denom of message stride.records.HostZoneUnbonding is not mutable"))
	case "stride.records.HostZoneUnbonding.host_zone_id":
		panic(fmt.Errorf("field host_zone_id of message stride.records.HostZoneUnbonding is not mutable"))
	case "stride.records.HostZoneUnbonding.unbonding_time":
		panic(fmt.Errorf("field unbonding_time of message stride.records.HostZoneUnbonding is not mutable"))
	case "stride.records.HostZoneUnbonding.status":
		panic(fmt.Errorf("field status of message stride.records.HostZoneUnbonding is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.HostZoneUnbonding"))
		}
		panic(fmt.Errorf("message stride.records.HostZoneUnbonding does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_HostZoneUnbonding) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.records.HostZoneUnbonding.st_token_amount":
		return protoreflect.ValueOfString("")
	case "stride.records.HostZoneUnbonding.native_token_amount":
		return protoreflect.ValueOfString("")
	case "stride.records.HostZoneUnbonding.denom":
		return protoreflect.ValueOfString("")
	case "stride.records.HostZoneUnbonding.host_zone_id":
		return protoreflect.ValueOfString("")
	case "stride.records.HostZoneUnbonding.unbonding_time":
		return protoreflect.ValueOfUint64(uint64(0))
	case "stride.records.HostZoneUnbonding.status":
		return protoreflect.ValueOfEnum(0)
	case "stride.records.HostZoneUnbonding.user_redemption_records":
		list := []string{}
		return protoreflect.ValueOfList(&_HostZoneUnbonding_7_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.HostZoneUnbonding"))
		}
		panic(fmt.Errorf("message stride.records.HostZoneUnbonding does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_HostZoneUnbonding) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.records.HostZoneUnbonding", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_HostZoneUnbonding) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_HostZoneUnbonding) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_HostZoneUnbonding) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_HostZoneUnbonding) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*HostZoneUnbonding)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.StTokenAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.NativeTokenAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Denom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.HostZoneId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.UnbondingTime != 0 {
			n += 1 + runtime.Sov(uint64(x.UnbondingTime))
		}
		if x.Status != 0 {
			n += 1 + runtime.Sov(uint64(x.Status))
		}
		if len(x.UserRedemptionRecords) > 0 {
			for _, s := range x.UserRedemptionRecords {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*HostZoneUnbonding)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.UserRedemptionRecords) > 0 {
			for iNdEx := len(x.UserRedemptionRecords) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.UserRedemptionRecords[iNdEx])
				copy(dAtA[i:], x.UserRedemptionRecords[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.UserRedemptionRecords[iNdEx])))
				i--
				dAtA[i] = 0x3a
			}
		}
		if x.Status != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Status))
			i--
			dAtA[i] = 0x30
		}
		if x.UnbondingTime != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.UnbondingTime))
			i--
			dAtA[i] = 0x28
		}
		if len(x.HostZoneId) > 0 {
			i -= len(x.HostZoneId)
			copy(dAtA[i:], x.HostZoneId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HostZoneId)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Denom) > 0 {
			i -= len(x.Denom)
			copy(dAtA[i:], x.Denom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Denom)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.NativeTokenAmount) > 0 {
			i -= len(x.NativeTokenAmount)
			copy(dAtA[i:], x.NativeTokenAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.NativeTokenAmount)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.StTokenAmount) > 0 {
			i -= len(x.StTokenAmount)
			copy(dAtA[i:], x.StTokenAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.StTokenAmount)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*HostZoneUnbonding)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: HostZoneUnbonding: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: HostZoneUnbonding: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StTokenAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.StTokenAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NativeTokenAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NativeTokenAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Denom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HostZoneId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HostZoneId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UnbondingTime", wireType)
				}
				x.UnbondingTime = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.UnbondingTime |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				x.Status = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Status |= HostZoneUnbonding_Status(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UserRedemptionRecords", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.UserRedemptionRecords = append(x.UserRedemptionRecords, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_EpochUnbondingRecord_3_list)(nil)

type _EpochUnbondingRecord_3_list struct {
	list *[]*HostZoneUnbonding
}

func (x *_EpochUnbondingRecord_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_EpochUnbondingRecord_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_EpochUnbondingRecord_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*HostZoneUnbonding)
	(*x.list)[i] = concreteValue
}

func (x *_EpochUnbondingRecord_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*HostZoneUnbonding)
	*x.list = append(*x.list, concreteValue)
}

func (x *_EpochUnbondingRecord_3_list) AppendMutable() protoreflect.Value {
	v := new(HostZoneUnbonding)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_EpochUnbondingRecord_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_EpochUnbondingRecord_3_list) NewElement() protoreflect.Value {
	v := new(HostZoneUnbonding)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_EpochUnbondingRecord_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_EpochUnbondingRecord                      protoreflect.MessageDescriptor
	fd_EpochUnbondingRecord_epoch_number         protoreflect.FieldDescriptor
	fd_EpochUnbondingRecord_host_zone_unbondings protoreflect.FieldDescriptor
)

func init() {
	file_stride_records_records_proto_init()
	md_EpochUnbondingRecord = File_stride_records_records_proto.Messages().ByName("EpochUnbondingRecord")
	fd_EpochUnbondingRecord_epoch_number = md_EpochUnbondingRecord.Fields().ByName("epoch_number")
	fd_EpochUnbondingRecord_host_zone_unbondings = md_EpochUnbondingRecord.Fields().ByName("host_zone_unbondings")
}

var _ protoreflect.Message = (*fastReflection_EpochUnbondingRecord)(nil)

type fastReflection_EpochUnbondingRecord EpochUnbondingRecord

func (x *EpochUnbondingRecord) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EpochUnbondingRecord)(x)
}

func (x *EpochUnbondingRecord) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_records_records_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EpochUnbondingRecord_messageType fastReflection_EpochUnbondingRecord_messageType
var _ protoreflect.MessageType = fastReflection_EpochUnbondingRecord_messageType{}

type fastReflection_EpochUnbondingRecord_messageType struct{}

func (x fastReflection_EpochUnbondingRecord_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EpochUnbondingRecord)(nil)
}
func (x fastReflection_EpochUnbondingRecord_messageType) New() protoreflect.Message {
	return new(fastReflection_EpochUnbondingRecord)
}
func (x fastReflection_EpochUnbondingRecord_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EpochUnbondingRecord
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EpochUnbondingRecord) Descriptor() protoreflect.MessageDescriptor {
	return md_EpochUnbondingRecord
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EpochUnbondingRecord) Type() protoreflect.MessageType {
	return _fastReflection_EpochUnbondingRecord_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EpochUnbondingRecord) New() protoreflect.Message {
	return new(fastReflection_EpochUnbondingRecord)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EpochUnbondingRecord) Interface() protoreflect.ProtoMessage {
	return (*EpochUnbondingRecord)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EpochUnbondingRecord) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.EpochNumber != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EpochNumber)
		if !f(fd_EpochUnbondingRecord_epoch_number, value) {
			return
		}
	}
	if len(x.HostZoneUnbondings) != 0 {
		value := protoreflect.ValueOfList(&_EpochUnbondingRecord_3_list{list: &x.HostZoneUnbondings})
		if !f(fd_EpochUnbondingRecord_host_zone_unbondings, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EpochUnbondingRecord) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.records.EpochUnbondingRecord.epoch_number":
		return x.EpochNumber != uint64(0)
	case "stride.records.EpochUnbondingRecord.host_zone_unbondings":
		return len(x.HostZoneUnbondings) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.EpochUnbondingRecord"))
		}
		panic(fmt.Errorf("message stride.records.EpochUnbondingRecord does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EpochUnbondingRecord) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.records.EpochUnbondingRecord.epoch_number":
		x.EpochNumber = uint64(0)
	case "stride.records.EpochUnbondingRecord.host_zone_unbondings":
		x.HostZoneUnbondings = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.EpochUnbondingRecord"))
		}
		panic(fmt.Errorf("message stride.records.EpochUnbondingRecord does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EpochUnbondingRecord) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.records.EpochUnbondingRecord.epoch_number":
		value := x.EpochNumber
		return protoreflect.ValueOfUint64(value)
	case "stride.records.EpochUnbondingRecord.host_zone_unbondings":
		if len(x.HostZoneUnbondings) == 0 {
			return protoreflect.ValueOfList(&_EpochUnbondingRecord_3_list{})
		}
		listValue := &_EpochUnbondingRecord_3_list{list: &x.HostZoneUnbondings}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.EpochUnbondingRecord"))
		}
		panic(fmt.Errorf("message stride.records.EpochUnbondingRecord does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EpochUnbondingRecord) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.records.EpochUnbondingRecord.epoch_number":
		x.EpochNumber = value.Uint()
	case "stride.records.EpochUnbondingRecord.host_zone_unbondings":
		lv := value.List()
		clv := lv.(*_EpochUnbondingRecord_3_list)
		x.HostZoneUnbondings = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.EpochUnbondingRecord"))
		}
		panic(fmt.Errorf("message stride.records.EpochUnbondingRecord does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EpochUnbondingRecord) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.records.EpochUnbondingRecord.host_zone_unbondings":
		if x.HostZoneUnbondings == nil {
			x.HostZoneUnbondings = []*HostZoneUnbonding{}
		}
		value := &_EpochUnbondingRecord_3_list{list: &x.HostZoneUnbondings}
		return protoreflect.ValueOfList(value)
	case "stride.records.EpochUnbondingRecord.epoch_number":
		panic(fmt.Errorf("field epoch_number of message stride.records.EpochUnbondingRecord is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.EpochUnbondingRecord"))
		}
		panic(fmt.Errorf("message stride.records.EpochUnbondingRecord does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EpochUnbondingRecord) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.records.EpochUnbondingRecord.epoch_number":
		return protoreflect.ValueOfUint64(uint64(0))
	case "stride.records.EpochUnbondingRecord.host_zone_unbondings":
		list := []*HostZoneUnbonding{}
		return protoreflect.ValueOfList(&_EpochUnbondingRecord_3_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.EpochUnbondingRecord"))
		}
		panic(fmt.Errorf("message stride.records.EpochUnbondingRecord does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EpochUnbondingRecord) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.records.EpochUnbondingRecord", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EpochUnbondingRecord) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EpochUnbondingRecord) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EpochUnbondingRecord) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EpochUnbondingRecord) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EpochUnbondingRecord)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.EpochNumber != 0 {
			n += 1 + runtime.Sov(uint64(x.EpochNumber))
		}
		if len(x.HostZoneUnbondings) > 0 {
			for _, e := range x.HostZoneUnbondings {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EpochUnbondingRecord)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.HostZoneUnbondings) > 0 {
			for iNdEx := len(x.HostZoneUnbondings) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.HostZoneUnbondings[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if x.EpochNumber != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EpochNumber))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EpochUnbondingRecord)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EpochUnbondingRecord: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EpochUnbondingRecord: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EpochNumber", wireType)
				}
				x.EpochNumber = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EpochNumber |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HostZoneUnbondings", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HostZoneUnbondings = append(x.HostZoneUnbondings, &HostZoneUnbonding{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.HostZoneUnbondings[len(x.HostZoneUnbondings)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_LSMTokenDeposit                   protoreflect.MessageDescriptor
	fd_LSMTokenDeposit_deposit_id        protoreflect.FieldDescriptor
	fd_LSMTokenDeposit_chain_id          protoreflect.FieldDescriptor
	fd_LSMTokenDeposit_denom             protoreflect.FieldDescriptor
	fd_LSMTokenDeposit_ibc_denom         protoreflect.FieldDescriptor
	fd_LSMTokenDeposit_staker_address    protoreflect.FieldDescriptor
	fd_LSMTokenDeposit_validator_address protoreflect.FieldDescriptor
	fd_LSMTokenDeposit_amount            protoreflect.FieldDescriptor
	fd_LSMTokenDeposit_st_token          protoreflect.FieldDescriptor
	fd_LSMTokenDeposit_status            protoreflect.FieldDescriptor
)

func init() {
	file_stride_records_records_proto_init()
	md_LSMTokenDeposit = File_stride_records_records_proto.Messages().ByName("LSMTokenDeposit")
	fd_LSMTokenDeposit_deposit_id = md_LSMTokenDeposit.Fields().ByName("deposit_id")
	fd_LSMTokenDeposit_chain_id = md_LSMTokenDeposit.Fields().ByName("chain_id")
	fd_LSMTokenDeposit_denom = md_LSMTokenDeposit.Fields().ByName("denom")
	fd_LSMTokenDeposit_ibc_denom = md_LSMTokenDeposit.Fields().ByName("ibc_denom")
	fd_LSMTokenDeposit_staker_address = md_LSMTokenDeposit.Fields().ByName("staker_address")
	fd_LSMTokenDeposit_validator_address = md_LSMTokenDeposit.Fields().ByName("validator_address")
	fd_LSMTokenDeposit_amount = md_LSMTokenDeposit.Fields().ByName("amount")
	fd_LSMTokenDeposit_st_token = md_LSMTokenDeposit.Fields().ByName("st_token")
	fd_LSMTokenDeposit_status = md_LSMTokenDeposit.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_LSMTokenDeposit)(nil)

type fastReflection_LSMTokenDeposit LSMTokenDeposit

func (x *LSMTokenDeposit) ProtoReflect() protoreflect.Message {
	return (*fastReflection_LSMTokenDeposit)(x)
}

func (x *LSMTokenDeposit) slowProtoReflect() protoreflect.Message {
	mi := &file_stride_records_records_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_LSMTokenDeposit_messageType fastReflection_LSMTokenDeposit_messageType
var _ protoreflect.MessageType = fastReflection_LSMTokenDeposit_messageType{}

type fastReflection_LSMTokenDeposit_messageType struct{}

func (x fastReflection_LSMTokenDeposit_messageType) Zero() protoreflect.Message {
	return (*fastReflection_LSMTokenDeposit)(nil)
}
func (x fastReflection_LSMTokenDeposit_messageType) New() protoreflect.Message {
	return new(fastReflection_LSMTokenDeposit)
}
func (x fastReflection_LSMTokenDeposit_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_LSMTokenDeposit
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_LSMTokenDeposit) Descriptor() protoreflect.MessageDescriptor {
	return md_LSMTokenDeposit
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_LSMTokenDeposit) Type() protoreflect.MessageType {
	return _fastReflection_LSMTokenDeposit_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_LSMTokenDeposit) New() protoreflect.Message {
	return new(fastReflection_LSMTokenDeposit)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_LSMTokenDeposit) Interface() protoreflect.ProtoMessage {
	return (*LSMTokenDeposit)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_LSMTokenDeposit) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.DepositId != "" {
		value := protoreflect.ValueOfString(x.DepositId)
		if !f(fd_LSMTokenDeposit_deposit_id, value) {
			return
		}
	}
	if x.ChainId != "" {
		value := protoreflect.ValueOfString(x.ChainId)
		if !f(fd_LSMTokenDeposit_chain_id, value) {
			return
		}
	}
	if x.Denom != "" {
		value := protoreflect.ValueOfString(x.Denom)
		if !f(fd_LSMTokenDeposit_denom, value) {
			return
		}
	}
	if x.IbcDenom != "" {
		value := protoreflect.ValueOfString(x.IbcDenom)
		if !f(fd_LSMTokenDeposit_ibc_denom, value) {
			return
		}
	}
	if x.StakerAddress != "" {
		value := protoreflect.ValueOfString(x.StakerAddress)
		if !f(fd_LSMTokenDeposit_staker_address, value) {
			return
		}
	}
	if x.ValidatorAddress != "" {
		value := protoreflect.ValueOfString(x.ValidatorAddress)
		if !f(fd_LSMTokenDeposit_validator_address, value) {
			return
		}
	}
	if x.Amount != "" {
		value := protoreflect.ValueOfString(x.Amount)
		if !f(fd_LSMTokenDeposit_amount, value) {
			return
		}
	}
	if x.StToken != nil {
		value := protoreflect.ValueOfMessage(x.StToken.ProtoReflect())
		if !f(fd_LSMTokenDeposit_st_token, value) {
			return
		}
	}
	if x.Status != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Status))
		if !f(fd_LSMTokenDeposit_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_LSMTokenDeposit) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stride.records.LSMTokenDeposit.deposit_id":
		return x.DepositId != ""
	case "stride.records.LSMTokenDeposit.chain_id":
		return x.ChainId != ""
	case "stride.records.LSMTokenDeposit.denom":
		return x.Denom != ""
	case "stride.records.LSMTokenDeposit.ibc_denom":
		return x.IbcDenom != ""
	case "stride.records.LSMTokenDeposit.staker_address":
		return x.StakerAddress != ""
	case "stride.records.LSMTokenDeposit.validator_address":
		return x.ValidatorAddress != ""
	case "stride.records.LSMTokenDeposit.amount":
		return x.Amount != ""
	case "stride.records.LSMTokenDeposit.st_token":
		return x.StToken != nil
	case "stride.records.LSMTokenDeposit.status":
		return x.Status != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.LSMTokenDeposit"))
		}
		panic(fmt.Errorf("message stride.records.LSMTokenDeposit does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LSMTokenDeposit) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stride.records.LSMTokenDeposit.deposit_id":
		x.DepositId = ""
	case "stride.records.LSMTokenDeposit.chain_id":
		x.ChainId = ""
	case "stride.records.LSMTokenDeposit.denom":
		x.Denom = ""
	case "stride.records.LSMTokenDeposit.ibc_denom":
		x.IbcDenom = ""
	case "stride.records.LSMTokenDeposit.staker_address":
		x.StakerAddress = ""
	case "stride.records.LSMTokenDeposit.validator_address":
		x.ValidatorAddress = ""
	case "stride.records.LSMTokenDeposit.amount":
		x.Amount = ""
	case "stride.records.LSMTokenDeposit.st_token":
		x.StToken = nil
	case "stride.records.LSMTokenDeposit.status":
		x.Status = 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.LSMTokenDeposit"))
		}
		panic(fmt.Errorf("message stride.records.LSMTokenDeposit does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_LSMTokenDeposit) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stride.records.LSMTokenDeposit.deposit_id":
		value := x.DepositId
		return protoreflect.ValueOfString(value)
	case "stride.records.LSMTokenDeposit.chain_id":
		value := x.ChainId
		return protoreflect.ValueOfString(value)
	case "stride.records.LSMTokenDeposit.denom":
		value := x.Denom
		return protoreflect.ValueOfString(value)
	case "stride.records.LSMTokenDeposit.ibc_denom":
		value := x.IbcDenom
		return protoreflect.ValueOfString(value)
	case "stride.records.LSMTokenDeposit.staker_address":
		value := x.StakerAddress
		return protoreflect.ValueOfString(value)
	case "stride.records.LSMTokenDeposit.validator_address":
		value := x.ValidatorAddress
		return protoreflect.ValueOfString(value)
	case "stride.records.LSMTokenDeposit.amount":
		value := x.Amount
		return protoreflect.ValueOfString(value)
	case "stride.records.LSMTokenDeposit.st_token":
		value := x.StToken
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "stride.records.LSMTokenDeposit.status":
		value := x.Status
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.LSMTokenDeposit"))
		}
		panic(fmt.Errorf("message stride.records.LSMTokenDeposit does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LSMTokenDeposit) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stride.records.LSMTokenDeposit.deposit_id":
		x.DepositId = value.Interface().(string)
	case "stride.records.LSMTokenDeposit.chain_id":
		x.ChainId = value.Interface().(string)
	case "stride.records.LSMTokenDeposit.denom":
		x.Denom = value.Interface().(string)
	case "stride.records.LSMTokenDeposit.ibc_denom":
		x.IbcDenom = value.Interface().(string)
	case "stride.records.LSMTokenDeposit.staker_address":
		x.StakerAddress = value.Interface().(string)
	case "stride.records.LSMTokenDeposit.validator_address":
		x.ValidatorAddress = value.Interface().(string)
	case "stride.records.LSMTokenDeposit.amount":
		x.Amount = value.Interface().(string)
	case "stride.records.LSMTokenDeposit.st_token":
		x.StToken = value.Message().Interface().(*v1beta1.Coin)
	case "stride.records.LSMTokenDeposit.status":
		x.Status = (LSMTokenDeposit_Status)(value.Enum())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.LSMTokenDeposit"))
		}
		panic(fmt.Errorf("message stride.records.LSMTokenDeposit does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LSMTokenDeposit) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.records.LSMTokenDeposit.st_token":
		if x.StToken == nil {
			x.StToken = new(v1beta1.Coin)
		}
		return protoreflect.ValueOfMessage(x.StToken.ProtoReflect())
	case "stride.records.LSMTokenDeposit.deposit_id":
		panic(fmt.Errorf("field deposit_id of message stride.records.LSMTokenDeposit is not mutable"))
	case "stride.records.LSMTokenDeposit.chain_id":
		panic(fmt.Errorf("field chain_id of message stride.records.LSMTokenDeposit is not mutable"))
	case "stride.records.LSMTokenDeposit.denom":
		panic(fmt.Errorf("field denom of message stride.records.LSMTokenDeposit is not mutable"))
	case "stride.records.LSMTokenDeposit.ibc_denom":
		panic(fmt.Errorf("field ibc_denom of message stride.records.LSMTokenDeposit is not mutable"))
	case "stride.records.LSMTokenDeposit.staker_address":
		panic(fmt.Errorf("field staker_address of message stride.records.LSMTokenDeposit is not mutable"))
	case "stride.records.LSMTokenDeposit.validator_address":
		panic(fmt.Errorf("field validator_address of message stride.records.LSMTokenDeposit is not mutable"))
	case "stride.records.LSMTokenDeposit.amount":
		panic(fmt.Errorf("field amount of message stride.records.LSMTokenDeposit is not mutable"))
	case "stride.records.LSMTokenDeposit.status":
		panic(fmt.Errorf("field status of message stride.records.LSMTokenDeposit is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.LSMTokenDeposit"))
		}
		panic(fmt.Errorf("message stride.records.LSMTokenDeposit does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_LSMTokenDeposit) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stride.records.LSMTokenDeposit.deposit_id":
		return protoreflect.ValueOfString("")
	case "stride.records.LSMTokenDeposit.chain_id":
		return protoreflect.ValueOfString("")
	case "stride.records.LSMTokenDeposit.denom":
		return protoreflect.ValueOfString("")
	case "stride.records.LSMTokenDeposit.ibc_denom":
		return protoreflect.ValueOfString("")
	case "stride.records.LSMTokenDeposit.staker_address":
		return protoreflect.ValueOfString("")
	case "stride.records.LSMTokenDeposit.validator_address":
		return protoreflect.ValueOfString("")
	case "stride.records.LSMTokenDeposit.amount":
		return protoreflect.ValueOfString("")
	case "stride.records.LSMTokenDeposit.st_token":
		m := new(v1beta1.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "stride.records.LSMTokenDeposit.status":
		return protoreflect.ValueOfEnum(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stride.records.LSMTokenDeposit"))
		}
		panic(fmt.Errorf("message stride.records.LSMTokenDeposit does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_LSMTokenDeposit) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stride.records.LSMTokenDeposit", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_LSMTokenDeposit) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LSMTokenDeposit) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_LSMTokenDeposit) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_LSMTokenDeposit) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*LSMTokenDeposit)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.DepositId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChainId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Denom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.IbcDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.StakerAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ValidatorAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Amount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.StToken != nil {
			l = options.Size(x.StToken)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Status != 0 {
			n += 1 + runtime.Sov(uint64(x.Status))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*LSMTokenDeposit)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Status))
			i--
			dAtA[i] = 0x48
		}
		if x.StToken != nil {
			encoded, err := options.Marshal(x.StToken)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x42
		}
		if len(x.Amount) > 0 {
			i -= len(x.Amount)
			copy(dAtA[i:], x.Amount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Amount)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.ValidatorAddress) > 0 {
			i -= len(x.ValidatorAddress)
			copy(dAtA[i:], x.ValidatorAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ValidatorAddress)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.StakerAddress) > 0 {
			i -= len(x.StakerAddress)
			copy(dAtA[i:], x.StakerAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.StakerAddress)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.IbcDenom) > 0 {
			i -= len(x.IbcDenom)
			copy(dAtA[i:], x.IbcDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.IbcDenom)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Denom) > 0 {
			i -= len(x.Denom)
			copy(dAtA[i:], x.Denom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Denom)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ChainId) > 0 {
			i -= len(x.ChainId)
			copy(dAtA[i:], x.ChainId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.DepositId) > 0 {
			i -= len(x.DepositId)
			copy(dAtA[i:], x.DepositId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DepositId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*LSMTokenDeposit)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: LSMTokenDeposit: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: LSMTokenDeposit: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DepositId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DepositId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Denom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IbcDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.IbcDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StakerAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.StakerAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValidatorAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ValidatorAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Amount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StToken", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.StToken == nil {
					x.StToken = &v1beta1.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.StToken); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 9:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				x.Status = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Status |= LSMTokenDeposit_Status(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: stride/records/records.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DepositRecord_Status int32

const (
	// in transfer queue to be sent to the delegation ICA
	DepositRecord_TRANSFER_QUEUE DepositRecord_Status = 0
	// transfer in progress (IBC packet sent, ack not received)
	DepositRecord_TRANSFER_IN_PROGRESS DepositRecord_Status = 2
	// in staking queue on delegation ICA
	DepositRecord_DELEGATION_QUEUE DepositRecord_Status = 1
	// staking in progress (ICA packet sent, ack not received)
	DepositRecord_DELEGATION_IN_PROGRESS DepositRecord_Status = 3
)

// Enum value maps for DepositRecord_Status.
var (
	DepositRecord_Status_name = map[int32]string{
		0: "TRANSFER_QUEUE",
		2: "TRANSFER_IN_PROGRESS",
		1: "DELEGATION_QUEUE",
		3: "DELEGATION_IN_PROGRESS",
	}
	DepositRecord_Status_value = map[string]int32{
		"TRANSFER_QUEUE":         0,
		"TRANSFER_IN_PROGRESS":   2,
		"DELEGATION_QUEUE":       1,
		"DELEGATION_IN_PROGRESS": 3,
	}
)

func (x DepositRecord_Status) Enum() *DepositRecord_Status {
	p := new(DepositRecord_Status)
	*p = x
	return p
}

func (x DepositRecord_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DepositRecord_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_stride_records_records_proto_enumTypes[0].Descriptor()
}

func (DepositRecord_Status) Type() protoreflect.EnumType {
	return &file_stride_records_records_proto_enumTypes[0]
}

func (x DepositRecord_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DepositRecord_Status.Descriptor instead.
func (DepositRecord_Status) EnumDescriptor() ([]byte, []int) {
	return file_stride_records_records_proto_rawDescGZIP(), []int{1, 0}
}

type DepositRecord_Source int32

const (
	DepositRecord_STRIDE         DepositRecord_Source = 0
	DepositRecord_WITHDRAWAL_ICA DepositRecord_Source = 1
)

// Enum value maps for DepositRecord_Source.
var (
	DepositRecord_Source_name = map[int32]string{
		0: "STRIDE",
		1: "WITHDRAWAL_ICA",
	}
	DepositRecord_Source_value = map[string]int32{
		"STRIDE":         0,
		"WITHDRAWAL_ICA": 1,
	}
)

func (x DepositRecord_Source) Enum() *DepositRecord_Source {
	p := new(DepositRecord_Source)
	*p = x
	return p
}

func (x DepositRecord_Source) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DepositRecord_Source) Descriptor() protoreflect.EnumDescriptor {
	return file_stride_records_records_proto_enumTypes[1].Descriptor()
}

func (DepositRecord_Source) Type() protoreflect.EnumType {
	return &file_stride_records_records_proto_enumTypes[1]
}

func (x DepositRecord_Source) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DepositRecord_Source.Descriptor instead.
func (DepositRecord_Source) EnumDescriptor() ([]byte, []int) {
	return file_stride_records_records_proto_rawDescGZIP(), []int{1, 1}
}

type HostZoneUnbonding_Status int32

const (
	// tokens bonded on delegate account
	HostZoneUnbonding_UNBONDING_QUEUE       HostZoneUnbonding_Status = 0
	HostZoneUnbonding_UNBONDING_IN_PROGRESS HostZoneUnbonding_Status = 3
	// unbonding completed on delegate account
	HostZoneUnbonding_EXIT_TRANSFER_QUEUE       HostZoneUnbonding_Status = 1
	HostZoneUnbonding_EXIT_TRANSFER_IN_PROGRESS HostZoneUnbonding_Status = 4
	// transfer success
	HostZoneUnbonding_CLAIMABLE HostZoneUnbonding_Status = 2
)

// Enum value maps for HostZoneUnbonding_Status.
var (
	HostZoneUnbonding_Status_name = map[int32]string{
		0: "UNBONDING_QUEUE",
		3: "UNBONDING_IN_PROGRESS",
		1: "EXIT_TRANSFER_QUEUE",
		4: "EXIT_TRANSFER_IN_PROGRESS",
		2: "CLAIMABLE",
	}
	HostZoneUnbonding_Status_value = map[string]int32{
		"UNBONDING_QUEUE":           0,
		"UNBONDING_IN_PROGRESS":     3,
		"EXIT_TRANSFER_QUEUE":       1,
		"EXIT_TRANSFER_IN_PROGRESS": 4,
		"CLAIMABLE":                 2,
	}
)

func (x HostZoneUnbonding_Status) Enum() *HostZoneUnbonding_Status {
	p := new(HostZoneUnbonding_Status)
	*p = x
	return p
}

func (x HostZoneUnbonding_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HostZoneUnbonding_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_stride_records_records_proto_enumTypes[2].Descriptor()
}

func (HostZoneUnbonding_Status) Type() protoreflect.EnumType {
	return &file_stride_records_records_proto_enumTypes[2]
}

func (x HostZoneUnbonding_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HostZoneUnbonding_Status.Descriptor instead.
func (HostZoneUnbonding_Status) EnumDescriptor() ([]byte, []int) {
	return file_stride_records_records_proto_rawDescGZIP(), []int{2, 0}
}

type LSMTokenDeposit_Status int32

const (
	LSMTokenDeposit_DEPOSIT_PENDING            LSMTokenDeposit_Status = 0
	LSMTokenDeposit_TRANSFER_QUEUE             LSMTokenDeposit_Status = 1
	LSMTokenDeposit_TRANSFER_IN_PROGRESS       LSMTokenDeposit_Status = 2
	LSMTokenDeposit_TRANSFER_FAILED            LSMTokenDeposit_Status = 3
	LSMTokenDeposit_DETOKENIZATION_QUEUE       LSMTokenDeposit_Status = 4
	LSMTokenDeposit_DETOKENIZATION_IN_PROGRESS LSMTokenDeposit_Status = 5
	LSMTokenDeposit_DETOKENIZATION_FAILED      LSMTokenDeposit_Status = 6
)

// Enum value maps for LSMTokenDeposit_Status.
var (
	LSMTokenDeposit_Status_name = map[int32]string{
		0: "DEPOSIT_PENDING",
		1: "TRANSFER_QUEUE",
		2: "TRANSFER_IN_PROGRESS",
		3: "TRANSFER_FAILED",
		4: "DETOKENIZATION_QUEUE",
		5: "DETOKENIZATION_IN_PROGRESS",
		6: "DETOKENIZATION_FAILED",
	}
	LSMTokenDeposit_Status_value = map[string]int32{
		"DEPOSIT_PENDING":            0,
		"TRANSFER_QUEUE":             1,
		"TRANSFER_IN_PROGRESS":       2,
		"TRANSFER_FAILED":            3,
		"DETOKENIZATION_QUEUE":       4,
		"DETOKENIZATION_IN_PROGRESS": 5,
		"DETOKENIZATION_FAILED":      6,
	}
)

func (x LSMTokenDeposit_Status) Enum() *LSMTokenDeposit_Status {
	p := new(LSMTokenDeposit_Status)
	*p = x
	return p
}

func (x LSMTokenDeposit_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LSMTokenDeposit_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_stride_records_records_proto_enumTypes[3].Descriptor()
}

func (LSMTokenDeposit_Status) Type() protoreflect.EnumType {
	return &file_stride_records_records_proto_enumTypes[3]
}

func (x LSMTokenDeposit_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LSMTokenDeposit_Status.Descriptor instead.
func (LSMTokenDeposit_Status) EnumDescriptor() ([]byte, []int) {
	return file_stride_records_records_proto_rawDescGZIP(), []int{4, 0}
}

type UserRedemptionRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // {chain_id}.{epoch}.{receiver}
	Receiver          string `protobuf:"bytes,3,opt,name=receiver,proto3" json:"receiver,omitempty"`
	NativeTokenAmount string `protobuf:"bytes,4,opt,name=native_token_amount,json=nativeTokenAmount,proto3" json:"native_token_amount,omitempty"`
	Denom             string `protobuf:"bytes,5,opt,name=denom,proto3" json:"denom,omitempty"`
	HostZoneId        string `protobuf:"bytes,6,opt,name=host_zone_id,json=hostZoneId,proto3" json:"host_zone_id,omitempty"`
	EpochNumber       uint64 `protobuf:"varint,7,opt,name=epoch_number,json=epochNumber,proto3" json:"epoch_number,omitempty"`
	ClaimIsPending    bool   `protobuf:"varint,8,opt,name=claim_is_pending,json=claimIsPending,proto3" json:"claim_is_pending,omitempty"`
	StTokenAmount     string `protobuf:"bytes,9,opt,name=st_token_amount,json=stTokenAmount,proto3" json:"st_token_amount,omitempty"`
}

func (x *UserRedemptionRecord) Reset() {
	*x = UserRedemptionRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_records_records_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRedemptionRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRedemptionRecord) ProtoMessage() {}

// Deprecated: Use UserRedemptionRecord.ProtoReflect.Descriptor instead.
func (*UserRedemptionRecord) Descriptor() ([]byte, []int) {
	return file_stride_records_records_proto_rawDescGZIP(), []int{0}
}

func (x *UserRedemptionRecord) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserRedemptionRecord) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *UserRedemptionRecord) GetNativeTokenAmount() string {
	if x != nil {
		return x.NativeTokenAmount
	}
	return ""
}

func (x *UserRedemptionRecord) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *UserRedemptionRecord) GetHostZoneId() string {
	if x != nil {
		return x.HostZoneId
	}
	return ""
}

func (x *UserRedemptionRecord) GetEpochNumber() uint64 {
	if x != nil {
		return x.EpochNumber
	}
	return 0
}

func (x *UserRedemptionRecord) GetClaimIsPending() bool {
	if x != nil {
		return x.ClaimIsPending
	}
	return false
}

func (x *UserRedemptionRecord) GetStTokenAmount() string {
	if x != nil {
		return x.StTokenAmount
	}
	return ""
}

type DepositRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 uint64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Amount             string               `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Denom              string               `protobuf:"bytes,3,opt,name=denom,proto3" json:"denom,omitempty"`
	HostZoneId         string               `protobuf:"bytes,4,opt,name=host_zone_id,json=hostZoneId,proto3" json:"host_zone_id,omitempty"`
	Status             DepositRecord_Status `protobuf:"varint,6,opt,name=status,proto3,enum=stride.records.DepositRecord_Status" json:"status,omitempty"`
	DepositEpochNumber uint64               `protobuf:"varint,7,opt,name=deposit_epoch_number,json=depositEpochNumber,proto3" json:"deposit_epoch_number,omitempty"`
	Source             DepositRecord_Source `protobuf:"varint,8,opt,name=source,proto3,enum=stride.records.DepositRecord_Source" json:"source,omitempty"`
}

func (x *DepositRecord) Reset() {
	*x = DepositRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_records_records_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositRecord) ProtoMessage() {}

// Deprecated: Use DepositRecord.ProtoReflect.Descriptor instead.
func (*DepositRecord) Descriptor() ([]byte, []int) {
	return file_stride_records_records_proto_rawDescGZIP(), []int{1}
}

func (x *DepositRecord) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DepositRecord) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *DepositRecord) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *DepositRecord) GetHostZoneId() string {
	if x != nil {
		return x.HostZoneId
	}
	return ""
}

func (x *DepositRecord) GetStatus() DepositRecord_Status {
	if x != nil {
		return x.Status
	}
	return DepositRecord_TRANSFER_QUEUE
}

func (x *DepositRecord) GetDepositEpochNumber() uint64 {
	if x != nil {
		return x.DepositEpochNumber
	}
	return 0
}

func (x *DepositRecord) GetSource() DepositRecord_Source {
	if x != nil {
		return x.Source
	}
	return DepositRecord_STRIDE
}

type HostZoneUnbonding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StTokenAmount         string                   `protobuf:"bytes,1,opt,name=st_token_amount,json=stTokenAmount,proto3" json:"st_token_amount,omitempty"`
	NativeTokenAmount     string                   `protobuf:"bytes,2,opt,name=native_token_amount,json=nativeTokenAmount,proto3" json:"native_token_amount,omitempty"`
	Denom                 string                   `protobuf:"bytes,3,opt,name=denom,proto3" json:"denom,omitempty"`
	HostZoneId            string                   `protobuf:"bytes,4,opt,name=host_zone_id,json=hostZoneId,proto3" json:"host_zone_id,omitempty"`
	UnbondingTime         uint64                   `protobuf:"varint,5,opt,name=unbonding_time,json=unbondingTime,proto3" json:"unbonding_time,omitempty"`
	Status                HostZoneUnbonding_Status `protobuf:"varint,6,opt,name=status,proto3,enum=stride.records.HostZoneUnbonding_Status" json:"status,omitempty"`
	UserRedemptionRecords []string                 `protobuf:"bytes,7,rep,name=user_redemption_records,json=userRedemptionRecords,proto3" json:"user_redemption_records,omitempty"`
}

func (x *HostZoneUnbonding) Reset() {
	*x = HostZoneUnbonding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_records_records_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostZoneUnbonding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostZoneUnbonding) ProtoMessage() {}

// Deprecated: Use HostZoneUnbonding.ProtoReflect.Descriptor instead.
func (*HostZoneUnbonding) Descriptor() ([]byte, []int) {
	return file_stride_records_records_proto_rawDescGZIP(), []int{2}
}

func (x *HostZoneUnbonding) GetStTokenAmount() string {
	if x != nil {
		return x.StTokenAmount
	}
	return ""
}

func (x *HostZoneUnbonding) GetNativeTokenAmount() string {
	if x != nil {
		return x.NativeTokenAmount
	}
	return ""
}

func (x *HostZoneUnbonding) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *HostZoneUnbonding) GetHostZoneId() string {
	if x != nil {
		return x.HostZoneId
	}
	return ""
}

func (x *HostZoneUnbonding) GetUnbondingTime() uint64 {
	if x != nil {
		return x.UnbondingTime
	}
	return 0
}

func (x *HostZoneUnbonding) GetStatus() HostZoneUnbonding_Status {
	if x != nil {
		return x.Status
	}
	return HostZoneUnbonding_UNBONDING_QUEUE
}

func (x *HostZoneUnbonding) GetUserRedemptionRecords() []string {
	if x != nil {
		return x.UserRedemptionRecords
	}
	return nil
}

type EpochUnbondingRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EpochNumber        uint64               `protobuf:"varint,1,opt,name=epoch_number,json=epochNumber,proto3" json:"epoch_number,omitempty"`
	HostZoneUnbondings []*HostZoneUnbonding `protobuf:"bytes,3,rep,name=host_zone_unbondings,json=hostZoneUnbondings,proto3" json:"host_zone_unbondings,omitempty"`
}

func (x *EpochUnbondingRecord) Reset() {
	*x = EpochUnbondingRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_records_records_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpochUnbondingRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpochUnbondingRecord) ProtoMessage() {}

// Deprecated: Use EpochUnbondingRecord.ProtoReflect.Descriptor instead.
func (*EpochUnbondingRecord) Descriptor() ([]byte, []int) {
	return file_stride_records_records_proto_rawDescGZIP(), []int{3}
}

func (x *EpochUnbondingRecord) GetEpochNumber() uint64 {
	if x != nil {
		return x.EpochNumber
	}
	return 0
}

func (x *EpochUnbondingRecord) GetHostZoneUnbondings() []*HostZoneUnbonding {
	if x != nil {
		return x.HostZoneUnbondings
	}
	return nil
}

type LSMTokenDeposit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepositId        string                 `protobuf:"bytes,1,opt,name=deposit_id,json=depositId,proto3" json:"deposit_id,omitempty"`
	ChainId          string                 `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Denom            string                 `protobuf:"bytes,3,opt,name=denom,proto3" json:"denom,omitempty"`
	IbcDenom         string                 `protobuf:"bytes,4,opt,name=ibc_denom,json=ibcDenom,proto3" json:"ibc_denom,omitempty"`
	StakerAddress    string                 `protobuf:"bytes,5,opt,name=staker_address,json=stakerAddress,proto3" json:"staker_address,omitempty"`
	ValidatorAddress string                 `protobuf:"bytes,6,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address,omitempty"`
	Amount           string                 `protobuf:"bytes,7,opt,name=amount,proto3" json:"amount,omitempty"`
	StToken          *v1beta1.Coin          `protobuf:"bytes,8,opt,name=st_token,json=stToken,proto3" json:"st_token,omitempty"`
	Status           LSMTokenDeposit_Status `protobuf:"varint,9,opt,name=status,proto3,enum=stride.records.LSMTokenDeposit_Status" json:"status,omitempty"`
}

func (x *LSMTokenDeposit) Reset() {
	*x = LSMTokenDeposit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stride_records_records_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LSMTokenDeposit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LSMTokenDeposit) ProtoMessage() {}

// Deprecated: Use LSMTokenDeposit.ProtoReflect.Descriptor instead.
func (*LSMTokenDeposit) Descriptor() ([]byte, []int) {
	return file_stride_records_records_proto_rawDescGZIP(), []int{4}
}

func (x *LSMTokenDeposit) GetDepositId() string {
	if x != nil {
		return x.DepositId
	}
	return ""
}

func (x *LSMTokenDeposit) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *LSMTokenDeposit) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *LSMTokenDeposit) GetIbcDenom() string {
	if x != nil {
		return x.IbcDenom
	}
	return ""
}

func (x *LSMTokenDeposit) GetStakerAddress() string {
	if x != nil {
		return x.StakerAddress
	}
	return ""
}

func (x *LSMTokenDeposit) GetValidatorAddress() string {
	if x != nil {
		return x.ValidatorAddress
	}
	return ""
}

func (x *LSMTokenDeposit) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *LSMTokenDeposit) GetStToken() *v1beta1.Coin {
	if x != nil {
		return x.StToken
	}
	return nil
}

func (x *LSMTokenDeposit) GetStatus() LSMTokenDeposit_Status {
	if x != nil {
		return x.Status
	}
	return LSMTokenDeposit_DEPOSIT_PENDING
}

var File_stride_records_records_proto protoreflect.FileDescriptor

var file_stride_records_records_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x1a, 0x1e,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14,
	0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe3, 0x02, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x64,
	0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x13, 0x6e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74,
	0x68, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x11, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f,
	0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x20,
	0x0a, 0x0c, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x6f, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x69, 0x73, 0x5f,
	0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x63,
	0x6c, 0x61, 0x69, 0x6d, 0x49, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x45, 0x0a,
	0x0f, 0x73, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74,
	0x68, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x0d, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0xd6, 0x03, 0x0a, 0x0d, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xc8, 0xde,
	0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e,
	0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x20, 0x0a, 0x0c, 0x68, 0x6f, 0x73,
	0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x68, 0x6f, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x64, 0x65, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x2e, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x45, 0x70, 0x6f, 0x63, 0x68, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x64, 0x65, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x2e, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x68, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x5f,
	0x51, 0x55, 0x45, 0x55, 0x45, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x52, 0x41, 0x4e, 0x53,
	0x46, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10,
	0x02, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x45, 0x4c, 0x45, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x51, 0x55, 0x45, 0x55, 0x45, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x45, 0x4c, 0x45, 0x47,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53,
	0x53, 0x10, 0x03, 0x22, 0x28, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0a, 0x0a,
	0x06, 0x53, 0x54, 0x52, 0x49, 0x44, 0x45, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x57, 0x49, 0x54,
	0x48, 0x44, 0x52, 0x41, 0x57, 0x41, 0x4c, 0x5f, 0x49, 0x43, 0x41, 0x10, 0x01, 0x4a, 0x04, 0x08,
	0x05, 0x10, 0x06, 0x22, 0x83, 0x04, 0x0a, 0x11, 0x48, 0x6f, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65,
	0x55, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x45, 0x0a, 0x0f, 0x73, 0x74, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x1d, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e,
	0x74, 0x52, 0x0d, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x4d, 0x0a, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xc8,
	0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b,
	0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x11, 0x6e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x20, 0x0a, 0x0c, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x7a, 0x6f,
	0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x6f, 0x73,
	0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e, 0x62, 0x6f, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x75, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x40,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x2e,
	0x48, 0x6f, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x55, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x36, 0x0a, 0x17, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x15, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x7f, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x4e, 0x42, 0x4f, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f,
	0x51, 0x55, 0x45, 0x55, 0x45, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x4e, 0x42, 0x4f, 0x4e,
	0x44, 0x49, 0x4e, 0x47, 0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53,
	0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x58, 0x49, 0x54, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53,
	0x46, 0x45, 0x52, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x45,
	0x58, 0x49, 0x54, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x5f,
	0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4c,
	0x41, 0x49, 0x4d, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x02, 0x22, 0x94, 0x01, 0x0a, 0x14, 0x45, 0x70,
	0x6f, 0x63, 0x68, 0x55, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x53, 0x0a, 0x14, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x7a, 0x6f,
	0x6e, 0x65, 0x5f, 0x75, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x55, 0x6e, 0x62,
	0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x12, 0x68, 0x6f, 0x73, 0x74, 0x5a, 0x6f, 0x6e, 0x65,
	0x55, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03,
	0x22, 0xbd, 0x04, 0x0a, 0x0f, 0x4c, 0x53, 0x4d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64,
	0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x62, 0x63, 0x5f, 0x64, 0x65, 0x6e, 0x6f,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x62, 0x63, 0x44, 0x65, 0x6e, 0x6f,
	0x6d, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x6b, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x35, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68,
	0x2e, 0x49, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x08,
	0x73, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52,
	0x07, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64,
	0x65, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x2e, 0x4c, 0x53, 0x4d, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xb5, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x50,
	0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x52, 0x41, 0x4e,
	0x53, 0x46, 0x45, 0x52, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14,
	0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47,
	0x52, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46,
	0x45, 0x52, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x44,
	0x45, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x51, 0x55,
	0x45, 0x55, 0x45, 0x10, 0x04, 0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x45, 0x54, 0x4f, 0x4b, 0x45, 0x4e,
	0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52,
	0x45, 0x53, 0x53, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x45, 0x54, 0x4f, 0x4b, 0x45, 0x4e,
	0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x06,
	0x42, 0xb1, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x42, 0x0c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x69, 0x6c, 0x6b, 0x79, 0x77, 0x61, 0x79, 0x2d, 0x6c, 0x61, 0x62,
	0x73, 0x2f, 0x6d, 0x69, 0x6c, 0x6b, 0x79, 0x77, 0x61, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73,
	0x74, 0x72, 0x69, 0x64, 0x65, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0xa2, 0x02, 0x03,
	0x53, 0x52, 0x58, 0xaa, 0x02, 0x0e, 0x53, 0x74, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0xca, 0x02, 0x0e, 0x53, 0x74, 0x72, 0x69, 0x64, 0x65, 0x5c, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0xe2, 0x02, 0x1a, 0x53, 0x74, 0x72, 0x69, 0x64, 0x65, 0x5c, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x0f, 0x53, 0x74, 0x72, 0x69, 0x64, 0x65, 0x3a, 0x3a, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_stride_records_records_proto_rawDescOnce sync.Once
	file_stride_records_records_proto_rawDescData = file_stride_records_records_proto_rawDesc
)

func file_stride_records_records_proto_rawDescGZIP() []byte {
	file_stride_records_records_proto_rawDescOnce.Do(func() {
		file_stride_records_records_proto_rawDescData = protoimpl.X.CompressGZIP(file_stride_records_records_proto_rawDescData)
	})
	return file_stride_records_records_proto_rawDescData
}

var file_stride_records_records_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_stride_records_records_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_stride_records_records_proto_goTypes = []interface{}{
	(DepositRecord_Status)(0),     // 0: stride.records.DepositRecord.Status
	(DepositRecord_Source)(0),     // 1: stride.records.DepositRecord.Source
	(HostZoneUnbonding_Status)(0), // 2: stride.records.HostZoneUnbonding.Status
	(LSMTokenDeposit_Status)(0),   // 3: stride.records.LSMTokenDeposit.Status
	(*UserRedemptionRecord)(nil),  // 4: stride.records.UserRedemptionRecord
	(*DepositRecord)(nil),         // 5: stride.records.DepositRecord
	(*HostZoneUnbonding)(nil),     // 6: stride.records.HostZoneUnbonding
	(*EpochUnbondingRecord)(nil),  // 7: stride.records.EpochUnbondingRecord
	(*LSMTokenDeposit)(nil),       // 8: stride.records.LSMTokenDeposit
	(*v1beta1.Coin)(nil),          // 9: cosmos.base.v1beta1.Coin
}
var file_stride_records_records_proto_depIdxs = []int32{
	0, // 0: stride.records.DepositRecord.status:type_name -> stride.records.DepositRecord.Status
	1, // 1: stride.records.DepositRecord.source:type_name -> stride.records.DepositRecord.Source
	2, // 2: stride.records.HostZoneUnbonding.status:type_name -> stride.records.HostZoneUnbonding.Status
	6, // 3: stride.records.EpochUnbondingRecord.host_zone_unbondings:type_name -> stride.records.HostZoneUnbonding
	9, // 4: stride.records.LSMTokenDeposit.st_token:type_name -> cosmos.base.v1beta1.Coin
	3, // 5: stride.records.LSMTokenDeposit.status:type_name -> stride.records.LSMTokenDeposit.Status
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_stride_records_records_proto_init() }
func file_stride_records_records_proto_init() {
	if File_stride_records_records_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_stride_records_records_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRedemptionRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_records_records_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_records_records_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostZoneUnbonding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_records_records_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpochUnbondingRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stride_records_records_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LSMTokenDeposit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stride_records_records_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_stride_records_records_proto_goTypes,
		DependencyIndexes: file_stride_records_records_proto_depIdxs,
		EnumInfos:         file_stride_records_records_proto_enumTypes,
		MessageInfos:      file_stride_records_records_proto_msgTypes,
	}.Build()
	File_stride_records_records_proto = out.File
	file_stride_records_records_proto_rawDesc = nil
	file_stride_records_records_proto_goTypes = nil
	file_stride_records_records_proto_depIdxs = nil
}
