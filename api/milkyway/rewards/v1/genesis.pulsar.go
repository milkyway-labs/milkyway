// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package rewardsv1

import (
	_ "cosmossdk.io/api/amino"
	_ "cosmossdk.io/api/cosmos/base/v1beta1"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_DelegatorWithdrawInfo                   protoreflect.MessageDescriptor
	fd_DelegatorWithdrawInfo_delegator_address protoreflect.FieldDescriptor
	fd_DelegatorWithdrawInfo_withdraw_address  protoreflect.FieldDescriptor
)

func init() {
	file_milkyway_rewards_v1_genesis_proto_init()
	md_DelegatorWithdrawInfo = File_milkyway_rewards_v1_genesis_proto.Messages().ByName("DelegatorWithdrawInfo")
	fd_DelegatorWithdrawInfo_delegator_address = md_DelegatorWithdrawInfo.Fields().ByName("delegator_address")
	fd_DelegatorWithdrawInfo_withdraw_address = md_DelegatorWithdrawInfo.Fields().ByName("withdraw_address")
}

var _ protoreflect.Message = (*fastReflection_DelegatorWithdrawInfo)(nil)

type fastReflection_DelegatorWithdrawInfo DelegatorWithdrawInfo

func (x *DelegatorWithdrawInfo) ProtoReflect() protoreflect.Message {
	return (*fastReflection_DelegatorWithdrawInfo)(x)
}

func (x *DelegatorWithdrawInfo) slowProtoReflect() protoreflect.Message {
	mi := &file_milkyway_rewards_v1_genesis_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_DelegatorWithdrawInfo_messageType fastReflection_DelegatorWithdrawInfo_messageType
var _ protoreflect.MessageType = fastReflection_DelegatorWithdrawInfo_messageType{}

type fastReflection_DelegatorWithdrawInfo_messageType struct{}

func (x fastReflection_DelegatorWithdrawInfo_messageType) Zero() protoreflect.Message {
	return (*fastReflection_DelegatorWithdrawInfo)(nil)
}
func (x fastReflection_DelegatorWithdrawInfo_messageType) New() protoreflect.Message {
	return new(fastReflection_DelegatorWithdrawInfo)
}
func (x fastReflection_DelegatorWithdrawInfo_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_DelegatorWithdrawInfo
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_DelegatorWithdrawInfo) Descriptor() protoreflect.MessageDescriptor {
	return md_DelegatorWithdrawInfo
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_DelegatorWithdrawInfo) Type() protoreflect.MessageType {
	return _fastReflection_DelegatorWithdrawInfo_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_DelegatorWithdrawInfo) New() protoreflect.Message {
	return new(fastReflection_DelegatorWithdrawInfo)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_DelegatorWithdrawInfo) Interface() protoreflect.ProtoMessage {
	return (*DelegatorWithdrawInfo)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_DelegatorWithdrawInfo) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.DelegatorAddress != "" {
		value := protoreflect.ValueOfString(x.DelegatorAddress)
		if !f(fd_DelegatorWithdrawInfo_delegator_address, value) {
			return
		}
	}
	if x.WithdrawAddress != "" {
		value := protoreflect.ValueOfString(x.WithdrawAddress)
		if !f(fd_DelegatorWithdrawInfo_withdraw_address, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_DelegatorWithdrawInfo) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "milkyway.rewards.v1.DelegatorWithdrawInfo.delegator_address":
		return x.DelegatorAddress != ""
	case "milkyway.rewards.v1.DelegatorWithdrawInfo.withdraw_address":
		return x.WithdrawAddress != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.DelegatorWithdrawInfo"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.DelegatorWithdrawInfo does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegatorWithdrawInfo) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "milkyway.rewards.v1.DelegatorWithdrawInfo.delegator_address":
		x.DelegatorAddress = ""
	case "milkyway.rewards.v1.DelegatorWithdrawInfo.withdraw_address":
		x.WithdrawAddress = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.DelegatorWithdrawInfo"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.DelegatorWithdrawInfo does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_DelegatorWithdrawInfo) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "milkyway.rewards.v1.DelegatorWithdrawInfo.delegator_address":
		value := x.DelegatorAddress
		return protoreflect.ValueOfString(value)
	case "milkyway.rewards.v1.DelegatorWithdrawInfo.withdraw_address":
		value := x.WithdrawAddress
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.DelegatorWithdrawInfo"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.DelegatorWithdrawInfo does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegatorWithdrawInfo) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "milkyway.rewards.v1.DelegatorWithdrawInfo.delegator_address":
		x.DelegatorAddress = value.Interface().(string)
	case "milkyway.rewards.v1.DelegatorWithdrawInfo.withdraw_address":
		x.WithdrawAddress = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.DelegatorWithdrawInfo"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.DelegatorWithdrawInfo does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegatorWithdrawInfo) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "milkyway.rewards.v1.DelegatorWithdrawInfo.delegator_address":
		panic(fmt.Errorf("field delegator_address of message milkyway.rewards.v1.DelegatorWithdrawInfo is not mutable"))
	case "milkyway.rewards.v1.DelegatorWithdrawInfo.withdraw_address":
		panic(fmt.Errorf("field withdraw_address of message milkyway.rewards.v1.DelegatorWithdrawInfo is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.DelegatorWithdrawInfo"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.DelegatorWithdrawInfo does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_DelegatorWithdrawInfo) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "milkyway.rewards.v1.DelegatorWithdrawInfo.delegator_address":
		return protoreflect.ValueOfString("")
	case "milkyway.rewards.v1.DelegatorWithdrawInfo.withdraw_address":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.DelegatorWithdrawInfo"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.DelegatorWithdrawInfo does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_DelegatorWithdrawInfo) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in milkyway.rewards.v1.DelegatorWithdrawInfo", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_DelegatorWithdrawInfo) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegatorWithdrawInfo) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_DelegatorWithdrawInfo) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_DelegatorWithdrawInfo) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*DelegatorWithdrawInfo)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.DelegatorAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.WithdrawAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*DelegatorWithdrawInfo)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.WithdrawAddress) > 0 {
			i -= len(x.WithdrawAddress)
			copy(dAtA[i:], x.WithdrawAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.WithdrawAddress)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.DelegatorAddress) > 0 {
			i -= len(x.DelegatorAddress)
			copy(dAtA[i:], x.DelegatorAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DelegatorAddress)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*DelegatorWithdrawInfo)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DelegatorWithdrawInfo: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DelegatorWithdrawInfo: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DelegatorAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DelegatorAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field WithdrawAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.WithdrawAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_OutstandingRewardsRecord_2_list)(nil)

type _OutstandingRewardsRecord_2_list struct {
	list *[]*DecPool
}

func (x *_OutstandingRewardsRecord_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_OutstandingRewardsRecord_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_OutstandingRewardsRecord_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*DecPool)
	(*x.list)[i] = concreteValue
}

func (x *_OutstandingRewardsRecord_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*DecPool)
	*x.list = append(*x.list, concreteValue)
}

func (x *_OutstandingRewardsRecord_2_list) AppendMutable() protoreflect.Value {
	v := new(DecPool)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_OutstandingRewardsRecord_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_OutstandingRewardsRecord_2_list) NewElement() protoreflect.Value {
	v := new(DecPool)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_OutstandingRewardsRecord_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_OutstandingRewardsRecord                      protoreflect.MessageDescriptor
	fd_OutstandingRewardsRecord_delegation_target_id protoreflect.FieldDescriptor
	fd_OutstandingRewardsRecord_outstanding_rewards  protoreflect.FieldDescriptor
)

func init() {
	file_milkyway_rewards_v1_genesis_proto_init()
	md_OutstandingRewardsRecord = File_milkyway_rewards_v1_genesis_proto.Messages().ByName("OutstandingRewardsRecord")
	fd_OutstandingRewardsRecord_delegation_target_id = md_OutstandingRewardsRecord.Fields().ByName("delegation_target_id")
	fd_OutstandingRewardsRecord_outstanding_rewards = md_OutstandingRewardsRecord.Fields().ByName("outstanding_rewards")
}

var _ protoreflect.Message = (*fastReflection_OutstandingRewardsRecord)(nil)

type fastReflection_OutstandingRewardsRecord OutstandingRewardsRecord

func (x *OutstandingRewardsRecord) ProtoReflect() protoreflect.Message {
	return (*fastReflection_OutstandingRewardsRecord)(x)
}

func (x *OutstandingRewardsRecord) slowProtoReflect() protoreflect.Message {
	mi := &file_milkyway_rewards_v1_genesis_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_OutstandingRewardsRecord_messageType fastReflection_OutstandingRewardsRecord_messageType
var _ protoreflect.MessageType = fastReflection_OutstandingRewardsRecord_messageType{}

type fastReflection_OutstandingRewardsRecord_messageType struct{}

func (x fastReflection_OutstandingRewardsRecord_messageType) Zero() protoreflect.Message {
	return (*fastReflection_OutstandingRewardsRecord)(nil)
}
func (x fastReflection_OutstandingRewardsRecord_messageType) New() protoreflect.Message {
	return new(fastReflection_OutstandingRewardsRecord)
}
func (x fastReflection_OutstandingRewardsRecord_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_OutstandingRewardsRecord
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_OutstandingRewardsRecord) Descriptor() protoreflect.MessageDescriptor {
	return md_OutstandingRewardsRecord
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_OutstandingRewardsRecord) Type() protoreflect.MessageType {
	return _fastReflection_OutstandingRewardsRecord_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_OutstandingRewardsRecord) New() protoreflect.Message {
	return new(fastReflection_OutstandingRewardsRecord)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_OutstandingRewardsRecord) Interface() protoreflect.ProtoMessage {
	return (*OutstandingRewardsRecord)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_OutstandingRewardsRecord) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.DelegationTargetId != uint32(0) {
		value := protoreflect.ValueOfUint32(x.DelegationTargetId)
		if !f(fd_OutstandingRewardsRecord_delegation_target_id, value) {
			return
		}
	}
	if len(x.OutstandingRewards) != 0 {
		value := protoreflect.ValueOfList(&_OutstandingRewardsRecord_2_list{list: &x.OutstandingRewards})
		if !f(fd_OutstandingRewardsRecord_outstanding_rewards, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_OutstandingRewardsRecord) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "milkyway.rewards.v1.OutstandingRewardsRecord.delegation_target_id":
		return x.DelegationTargetId != uint32(0)
	case "milkyway.rewards.v1.OutstandingRewardsRecord.outstanding_rewards":
		return len(x.OutstandingRewards) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.OutstandingRewardsRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.OutstandingRewardsRecord does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OutstandingRewardsRecord) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "milkyway.rewards.v1.OutstandingRewardsRecord.delegation_target_id":
		x.DelegationTargetId = uint32(0)
	case "milkyway.rewards.v1.OutstandingRewardsRecord.outstanding_rewards":
		x.OutstandingRewards = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.OutstandingRewardsRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.OutstandingRewardsRecord does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_OutstandingRewardsRecord) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "milkyway.rewards.v1.OutstandingRewardsRecord.delegation_target_id":
		value := x.DelegationTargetId
		return protoreflect.ValueOfUint32(value)
	case "milkyway.rewards.v1.OutstandingRewardsRecord.outstanding_rewards":
		if len(x.OutstandingRewards) == 0 {
			return protoreflect.ValueOfList(&_OutstandingRewardsRecord_2_list{})
		}
		listValue := &_OutstandingRewardsRecord_2_list{list: &x.OutstandingRewards}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.OutstandingRewardsRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.OutstandingRewardsRecord does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OutstandingRewardsRecord) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "milkyway.rewards.v1.OutstandingRewardsRecord.delegation_target_id":
		x.DelegationTargetId = uint32(value.Uint())
	case "milkyway.rewards.v1.OutstandingRewardsRecord.outstanding_rewards":
		lv := value.List()
		clv := lv.(*_OutstandingRewardsRecord_2_list)
		x.OutstandingRewards = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.OutstandingRewardsRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.OutstandingRewardsRecord does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OutstandingRewardsRecord) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "milkyway.rewards.v1.OutstandingRewardsRecord.outstanding_rewards":
		if x.OutstandingRewards == nil {
			x.OutstandingRewards = []*DecPool{}
		}
		value := &_OutstandingRewardsRecord_2_list{list: &x.OutstandingRewards}
		return protoreflect.ValueOfList(value)
	case "milkyway.rewards.v1.OutstandingRewardsRecord.delegation_target_id":
		panic(fmt.Errorf("field delegation_target_id of message milkyway.rewards.v1.OutstandingRewardsRecord is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.OutstandingRewardsRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.OutstandingRewardsRecord does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_OutstandingRewardsRecord) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "milkyway.rewards.v1.OutstandingRewardsRecord.delegation_target_id":
		return protoreflect.ValueOfUint32(uint32(0))
	case "milkyway.rewards.v1.OutstandingRewardsRecord.outstanding_rewards":
		list := []*DecPool{}
		return protoreflect.ValueOfList(&_OutstandingRewardsRecord_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.OutstandingRewardsRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.OutstandingRewardsRecord does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_OutstandingRewardsRecord) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in milkyway.rewards.v1.OutstandingRewardsRecord", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_OutstandingRewardsRecord) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OutstandingRewardsRecord) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_OutstandingRewardsRecord) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_OutstandingRewardsRecord) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*OutstandingRewardsRecord)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.DelegationTargetId != 0 {
			n += 1 + runtime.Sov(uint64(x.DelegationTargetId))
		}
		if len(x.OutstandingRewards) > 0 {
			for _, e := range x.OutstandingRewards {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*OutstandingRewardsRecord)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.OutstandingRewards) > 0 {
			for iNdEx := len(x.OutstandingRewards) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.OutstandingRewards[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if x.DelegationTargetId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.DelegationTargetId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*OutstandingRewardsRecord)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: OutstandingRewardsRecord: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: OutstandingRewardsRecord: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DelegationTargetId", wireType)
				}
				x.DelegationTargetId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.DelegationTargetId |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OutstandingRewards", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OutstandingRewards = append(x.OutstandingRewards, &DecPool{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.OutstandingRewards[len(x.OutstandingRewards)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_HistoricalRewardsRecord                      protoreflect.MessageDescriptor
	fd_HistoricalRewardsRecord_delegation_target_id protoreflect.FieldDescriptor
	fd_HistoricalRewardsRecord_period               protoreflect.FieldDescriptor
	fd_HistoricalRewardsRecord_rewards              protoreflect.FieldDescriptor
)

func init() {
	file_milkyway_rewards_v1_genesis_proto_init()
	md_HistoricalRewardsRecord = File_milkyway_rewards_v1_genesis_proto.Messages().ByName("HistoricalRewardsRecord")
	fd_HistoricalRewardsRecord_delegation_target_id = md_HistoricalRewardsRecord.Fields().ByName("delegation_target_id")
	fd_HistoricalRewardsRecord_period = md_HistoricalRewardsRecord.Fields().ByName("period")
	fd_HistoricalRewardsRecord_rewards = md_HistoricalRewardsRecord.Fields().ByName("rewards")
}

var _ protoreflect.Message = (*fastReflection_HistoricalRewardsRecord)(nil)

type fastReflection_HistoricalRewardsRecord HistoricalRewardsRecord

func (x *HistoricalRewardsRecord) ProtoReflect() protoreflect.Message {
	return (*fastReflection_HistoricalRewardsRecord)(x)
}

func (x *HistoricalRewardsRecord) slowProtoReflect() protoreflect.Message {
	mi := &file_milkyway_rewards_v1_genesis_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_HistoricalRewardsRecord_messageType fastReflection_HistoricalRewardsRecord_messageType
var _ protoreflect.MessageType = fastReflection_HistoricalRewardsRecord_messageType{}

type fastReflection_HistoricalRewardsRecord_messageType struct{}

func (x fastReflection_HistoricalRewardsRecord_messageType) Zero() protoreflect.Message {
	return (*fastReflection_HistoricalRewardsRecord)(nil)
}
func (x fastReflection_HistoricalRewardsRecord_messageType) New() protoreflect.Message {
	return new(fastReflection_HistoricalRewardsRecord)
}
func (x fastReflection_HistoricalRewardsRecord_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_HistoricalRewardsRecord
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_HistoricalRewardsRecord) Descriptor() protoreflect.MessageDescriptor {
	return md_HistoricalRewardsRecord
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_HistoricalRewardsRecord) Type() protoreflect.MessageType {
	return _fastReflection_HistoricalRewardsRecord_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_HistoricalRewardsRecord) New() protoreflect.Message {
	return new(fastReflection_HistoricalRewardsRecord)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_HistoricalRewardsRecord) Interface() protoreflect.ProtoMessage {
	return (*HistoricalRewardsRecord)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_HistoricalRewardsRecord) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.DelegationTargetId != uint32(0) {
		value := protoreflect.ValueOfUint32(x.DelegationTargetId)
		if !f(fd_HistoricalRewardsRecord_delegation_target_id, value) {
			return
		}
	}
	if x.Period != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Period)
		if !f(fd_HistoricalRewardsRecord_period, value) {
			return
		}
	}
	if x.Rewards != nil {
		value := protoreflect.ValueOfMessage(x.Rewards.ProtoReflect())
		if !f(fd_HistoricalRewardsRecord_rewards, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_HistoricalRewardsRecord) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "milkyway.rewards.v1.HistoricalRewardsRecord.delegation_target_id":
		return x.DelegationTargetId != uint32(0)
	case "milkyway.rewards.v1.HistoricalRewardsRecord.period":
		return x.Period != uint64(0)
	case "milkyway.rewards.v1.HistoricalRewardsRecord.rewards":
		return x.Rewards != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.HistoricalRewardsRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.HistoricalRewardsRecord does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_HistoricalRewardsRecord) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "milkyway.rewards.v1.HistoricalRewardsRecord.delegation_target_id":
		x.DelegationTargetId = uint32(0)
	case "milkyway.rewards.v1.HistoricalRewardsRecord.period":
		x.Period = uint64(0)
	case "milkyway.rewards.v1.HistoricalRewardsRecord.rewards":
		x.Rewards = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.HistoricalRewardsRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.HistoricalRewardsRecord does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_HistoricalRewardsRecord) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "milkyway.rewards.v1.HistoricalRewardsRecord.delegation_target_id":
		value := x.DelegationTargetId
		return protoreflect.ValueOfUint32(value)
	case "milkyway.rewards.v1.HistoricalRewardsRecord.period":
		value := x.Period
		return protoreflect.ValueOfUint64(value)
	case "milkyway.rewards.v1.HistoricalRewardsRecord.rewards":
		value := x.Rewards
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.HistoricalRewardsRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.HistoricalRewardsRecord does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_HistoricalRewardsRecord) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "milkyway.rewards.v1.HistoricalRewardsRecord.delegation_target_id":
		x.DelegationTargetId = uint32(value.Uint())
	case "milkyway.rewards.v1.HistoricalRewardsRecord.period":
		x.Period = value.Uint()
	case "milkyway.rewards.v1.HistoricalRewardsRecord.rewards":
		x.Rewards = value.Message().Interface().(*HistoricalRewards)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.HistoricalRewardsRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.HistoricalRewardsRecord does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_HistoricalRewardsRecord) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "milkyway.rewards.v1.HistoricalRewardsRecord.rewards":
		if x.Rewards == nil {
			x.Rewards = new(HistoricalRewards)
		}
		return protoreflect.ValueOfMessage(x.Rewards.ProtoReflect())
	case "milkyway.rewards.v1.HistoricalRewardsRecord.delegation_target_id":
		panic(fmt.Errorf("field delegation_target_id of message milkyway.rewards.v1.HistoricalRewardsRecord is not mutable"))
	case "milkyway.rewards.v1.HistoricalRewardsRecord.period":
		panic(fmt.Errorf("field period of message milkyway.rewards.v1.HistoricalRewardsRecord is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.HistoricalRewardsRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.HistoricalRewardsRecord does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_HistoricalRewardsRecord) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "milkyway.rewards.v1.HistoricalRewardsRecord.delegation_target_id":
		return protoreflect.ValueOfUint32(uint32(0))
	case "milkyway.rewards.v1.HistoricalRewardsRecord.period":
		return protoreflect.ValueOfUint64(uint64(0))
	case "milkyway.rewards.v1.HistoricalRewardsRecord.rewards":
		m := new(HistoricalRewards)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.HistoricalRewardsRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.HistoricalRewardsRecord does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_HistoricalRewardsRecord) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in milkyway.rewards.v1.HistoricalRewardsRecord", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_HistoricalRewardsRecord) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_HistoricalRewardsRecord) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_HistoricalRewardsRecord) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_HistoricalRewardsRecord) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*HistoricalRewardsRecord)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.DelegationTargetId != 0 {
			n += 1 + runtime.Sov(uint64(x.DelegationTargetId))
		}
		if x.Period != 0 {
			n += 1 + runtime.Sov(uint64(x.Period))
		}
		if x.Rewards != nil {
			l = options.Size(x.Rewards)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*HistoricalRewardsRecord)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Rewards != nil {
			encoded, err := options.Marshal(x.Rewards)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.Period != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Period))
			i--
			dAtA[i] = 0x10
		}
		if x.DelegationTargetId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.DelegationTargetId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*HistoricalRewardsRecord)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: HistoricalRewardsRecord: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: HistoricalRewardsRecord: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DelegationTargetId", wireType)
				}
				x.DelegationTargetId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.DelegationTargetId |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Period", wireType)
				}
				x.Period = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Period |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Rewards", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Rewards == nil {
					x.Rewards = &HistoricalRewards{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Rewards); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_CurrentRewardsRecord                      protoreflect.MessageDescriptor
	fd_CurrentRewardsRecord_delegation_target_id protoreflect.FieldDescriptor
	fd_CurrentRewardsRecord_rewards              protoreflect.FieldDescriptor
)

func init() {
	file_milkyway_rewards_v1_genesis_proto_init()
	md_CurrentRewardsRecord = File_milkyway_rewards_v1_genesis_proto.Messages().ByName("CurrentRewardsRecord")
	fd_CurrentRewardsRecord_delegation_target_id = md_CurrentRewardsRecord.Fields().ByName("delegation_target_id")
	fd_CurrentRewardsRecord_rewards = md_CurrentRewardsRecord.Fields().ByName("rewards")
}

var _ protoreflect.Message = (*fastReflection_CurrentRewardsRecord)(nil)

type fastReflection_CurrentRewardsRecord CurrentRewardsRecord

func (x *CurrentRewardsRecord) ProtoReflect() protoreflect.Message {
	return (*fastReflection_CurrentRewardsRecord)(x)
}

func (x *CurrentRewardsRecord) slowProtoReflect() protoreflect.Message {
	mi := &file_milkyway_rewards_v1_genesis_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_CurrentRewardsRecord_messageType fastReflection_CurrentRewardsRecord_messageType
var _ protoreflect.MessageType = fastReflection_CurrentRewardsRecord_messageType{}

type fastReflection_CurrentRewardsRecord_messageType struct{}

func (x fastReflection_CurrentRewardsRecord_messageType) Zero() protoreflect.Message {
	return (*fastReflection_CurrentRewardsRecord)(nil)
}
func (x fastReflection_CurrentRewardsRecord_messageType) New() protoreflect.Message {
	return new(fastReflection_CurrentRewardsRecord)
}
func (x fastReflection_CurrentRewardsRecord_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_CurrentRewardsRecord
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_CurrentRewardsRecord) Descriptor() protoreflect.MessageDescriptor {
	return md_CurrentRewardsRecord
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_CurrentRewardsRecord) Type() protoreflect.MessageType {
	return _fastReflection_CurrentRewardsRecord_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_CurrentRewardsRecord) New() protoreflect.Message {
	return new(fastReflection_CurrentRewardsRecord)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_CurrentRewardsRecord) Interface() protoreflect.ProtoMessage {
	return (*CurrentRewardsRecord)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_CurrentRewardsRecord) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.DelegationTargetId != uint32(0) {
		value := protoreflect.ValueOfUint32(x.DelegationTargetId)
		if !f(fd_CurrentRewardsRecord_delegation_target_id, value) {
			return
		}
	}
	if x.Rewards != nil {
		value := protoreflect.ValueOfMessage(x.Rewards.ProtoReflect())
		if !f(fd_CurrentRewardsRecord_rewards, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_CurrentRewardsRecord) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "milkyway.rewards.v1.CurrentRewardsRecord.delegation_target_id":
		return x.DelegationTargetId != uint32(0)
	case "milkyway.rewards.v1.CurrentRewardsRecord.rewards":
		return x.Rewards != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.CurrentRewardsRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.CurrentRewardsRecord does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CurrentRewardsRecord) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "milkyway.rewards.v1.CurrentRewardsRecord.delegation_target_id":
		x.DelegationTargetId = uint32(0)
	case "milkyway.rewards.v1.CurrentRewardsRecord.rewards":
		x.Rewards = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.CurrentRewardsRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.CurrentRewardsRecord does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_CurrentRewardsRecord) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "milkyway.rewards.v1.CurrentRewardsRecord.delegation_target_id":
		value := x.DelegationTargetId
		return protoreflect.ValueOfUint32(value)
	case "milkyway.rewards.v1.CurrentRewardsRecord.rewards":
		value := x.Rewards
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.CurrentRewardsRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.CurrentRewardsRecord does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CurrentRewardsRecord) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "milkyway.rewards.v1.CurrentRewardsRecord.delegation_target_id":
		x.DelegationTargetId = uint32(value.Uint())
	case "milkyway.rewards.v1.CurrentRewardsRecord.rewards":
		x.Rewards = value.Message().Interface().(*CurrentRewards)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.CurrentRewardsRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.CurrentRewardsRecord does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CurrentRewardsRecord) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "milkyway.rewards.v1.CurrentRewardsRecord.rewards":
		if x.Rewards == nil {
			x.Rewards = new(CurrentRewards)
		}
		return protoreflect.ValueOfMessage(x.Rewards.ProtoReflect())
	case "milkyway.rewards.v1.CurrentRewardsRecord.delegation_target_id":
		panic(fmt.Errorf("field delegation_target_id of message milkyway.rewards.v1.CurrentRewardsRecord is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.CurrentRewardsRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.CurrentRewardsRecord does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_CurrentRewardsRecord) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "milkyway.rewards.v1.CurrentRewardsRecord.delegation_target_id":
		return protoreflect.ValueOfUint32(uint32(0))
	case "milkyway.rewards.v1.CurrentRewardsRecord.rewards":
		m := new(CurrentRewards)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.CurrentRewardsRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.CurrentRewardsRecord does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_CurrentRewardsRecord) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in milkyway.rewards.v1.CurrentRewardsRecord", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_CurrentRewardsRecord) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CurrentRewardsRecord) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_CurrentRewardsRecord) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_CurrentRewardsRecord) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*CurrentRewardsRecord)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.DelegationTargetId != 0 {
			n += 1 + runtime.Sov(uint64(x.DelegationTargetId))
		}
		if x.Rewards != nil {
			l = options.Size(x.Rewards)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*CurrentRewardsRecord)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Rewards != nil {
			encoded, err := options.Marshal(x.Rewards)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.DelegationTargetId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.DelegationTargetId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*CurrentRewardsRecord)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: CurrentRewardsRecord: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: CurrentRewardsRecord: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DelegationTargetId", wireType)
				}
				x.DelegationTargetId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.DelegationTargetId |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Rewards", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Rewards == nil {
					x.Rewards = &CurrentRewards{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Rewards); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_DelegatorStartingInfoRecord                      protoreflect.MessageDescriptor
	fd_DelegatorStartingInfoRecord_delegator_address    protoreflect.FieldDescriptor
	fd_DelegatorStartingInfoRecord_delegation_target_id protoreflect.FieldDescriptor
	fd_DelegatorStartingInfoRecord_starting_info        protoreflect.FieldDescriptor
)

func init() {
	file_milkyway_rewards_v1_genesis_proto_init()
	md_DelegatorStartingInfoRecord = File_milkyway_rewards_v1_genesis_proto.Messages().ByName("DelegatorStartingInfoRecord")
	fd_DelegatorStartingInfoRecord_delegator_address = md_DelegatorStartingInfoRecord.Fields().ByName("delegator_address")
	fd_DelegatorStartingInfoRecord_delegation_target_id = md_DelegatorStartingInfoRecord.Fields().ByName("delegation_target_id")
	fd_DelegatorStartingInfoRecord_starting_info = md_DelegatorStartingInfoRecord.Fields().ByName("starting_info")
}

var _ protoreflect.Message = (*fastReflection_DelegatorStartingInfoRecord)(nil)

type fastReflection_DelegatorStartingInfoRecord DelegatorStartingInfoRecord

func (x *DelegatorStartingInfoRecord) ProtoReflect() protoreflect.Message {
	return (*fastReflection_DelegatorStartingInfoRecord)(x)
}

func (x *DelegatorStartingInfoRecord) slowProtoReflect() protoreflect.Message {
	mi := &file_milkyway_rewards_v1_genesis_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_DelegatorStartingInfoRecord_messageType fastReflection_DelegatorStartingInfoRecord_messageType
var _ protoreflect.MessageType = fastReflection_DelegatorStartingInfoRecord_messageType{}

type fastReflection_DelegatorStartingInfoRecord_messageType struct{}

func (x fastReflection_DelegatorStartingInfoRecord_messageType) Zero() protoreflect.Message {
	return (*fastReflection_DelegatorStartingInfoRecord)(nil)
}
func (x fastReflection_DelegatorStartingInfoRecord_messageType) New() protoreflect.Message {
	return new(fastReflection_DelegatorStartingInfoRecord)
}
func (x fastReflection_DelegatorStartingInfoRecord_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_DelegatorStartingInfoRecord
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_DelegatorStartingInfoRecord) Descriptor() protoreflect.MessageDescriptor {
	return md_DelegatorStartingInfoRecord
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_DelegatorStartingInfoRecord) Type() protoreflect.MessageType {
	return _fastReflection_DelegatorStartingInfoRecord_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_DelegatorStartingInfoRecord) New() protoreflect.Message {
	return new(fastReflection_DelegatorStartingInfoRecord)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_DelegatorStartingInfoRecord) Interface() protoreflect.ProtoMessage {
	return (*DelegatorStartingInfoRecord)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_DelegatorStartingInfoRecord) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.DelegatorAddress != "" {
		value := protoreflect.ValueOfString(x.DelegatorAddress)
		if !f(fd_DelegatorStartingInfoRecord_delegator_address, value) {
			return
		}
	}
	if x.DelegationTargetId != uint32(0) {
		value := protoreflect.ValueOfUint32(x.DelegationTargetId)
		if !f(fd_DelegatorStartingInfoRecord_delegation_target_id, value) {
			return
		}
	}
	if x.StartingInfo != nil {
		value := protoreflect.ValueOfMessage(x.StartingInfo.ProtoReflect())
		if !f(fd_DelegatorStartingInfoRecord_starting_info, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_DelegatorStartingInfoRecord) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "milkyway.rewards.v1.DelegatorStartingInfoRecord.delegator_address":
		return x.DelegatorAddress != ""
	case "milkyway.rewards.v1.DelegatorStartingInfoRecord.delegation_target_id":
		return x.DelegationTargetId != uint32(0)
	case "milkyway.rewards.v1.DelegatorStartingInfoRecord.starting_info":
		return x.StartingInfo != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.DelegatorStartingInfoRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.DelegatorStartingInfoRecord does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegatorStartingInfoRecord) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "milkyway.rewards.v1.DelegatorStartingInfoRecord.delegator_address":
		x.DelegatorAddress = ""
	case "milkyway.rewards.v1.DelegatorStartingInfoRecord.delegation_target_id":
		x.DelegationTargetId = uint32(0)
	case "milkyway.rewards.v1.DelegatorStartingInfoRecord.starting_info":
		x.StartingInfo = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.DelegatorStartingInfoRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.DelegatorStartingInfoRecord does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_DelegatorStartingInfoRecord) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "milkyway.rewards.v1.DelegatorStartingInfoRecord.delegator_address":
		value := x.DelegatorAddress
		return protoreflect.ValueOfString(value)
	case "milkyway.rewards.v1.DelegatorStartingInfoRecord.delegation_target_id":
		value := x.DelegationTargetId
		return protoreflect.ValueOfUint32(value)
	case "milkyway.rewards.v1.DelegatorStartingInfoRecord.starting_info":
		value := x.StartingInfo
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.DelegatorStartingInfoRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.DelegatorStartingInfoRecord does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegatorStartingInfoRecord) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "milkyway.rewards.v1.DelegatorStartingInfoRecord.delegator_address":
		x.DelegatorAddress = value.Interface().(string)
	case "milkyway.rewards.v1.DelegatorStartingInfoRecord.delegation_target_id":
		x.DelegationTargetId = uint32(value.Uint())
	case "milkyway.rewards.v1.DelegatorStartingInfoRecord.starting_info":
		x.StartingInfo = value.Message().Interface().(*DelegatorStartingInfo)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.DelegatorStartingInfoRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.DelegatorStartingInfoRecord does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegatorStartingInfoRecord) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "milkyway.rewards.v1.DelegatorStartingInfoRecord.starting_info":
		if x.StartingInfo == nil {
			x.StartingInfo = new(DelegatorStartingInfo)
		}
		return protoreflect.ValueOfMessage(x.StartingInfo.ProtoReflect())
	case "milkyway.rewards.v1.DelegatorStartingInfoRecord.delegator_address":
		panic(fmt.Errorf("field delegator_address of message milkyway.rewards.v1.DelegatorStartingInfoRecord is not mutable"))
	case "milkyway.rewards.v1.DelegatorStartingInfoRecord.delegation_target_id":
		panic(fmt.Errorf("field delegation_target_id of message milkyway.rewards.v1.DelegatorStartingInfoRecord is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.DelegatorStartingInfoRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.DelegatorStartingInfoRecord does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_DelegatorStartingInfoRecord) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "milkyway.rewards.v1.DelegatorStartingInfoRecord.delegator_address":
		return protoreflect.ValueOfString("")
	case "milkyway.rewards.v1.DelegatorStartingInfoRecord.delegation_target_id":
		return protoreflect.ValueOfUint32(uint32(0))
	case "milkyway.rewards.v1.DelegatorStartingInfoRecord.starting_info":
		m := new(DelegatorStartingInfo)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.DelegatorStartingInfoRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.DelegatorStartingInfoRecord does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_DelegatorStartingInfoRecord) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in milkyway.rewards.v1.DelegatorStartingInfoRecord", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_DelegatorStartingInfoRecord) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegatorStartingInfoRecord) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_DelegatorStartingInfoRecord) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_DelegatorStartingInfoRecord) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*DelegatorStartingInfoRecord)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.DelegatorAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.DelegationTargetId != 0 {
			n += 1 + runtime.Sov(uint64(x.DelegationTargetId))
		}
		if x.StartingInfo != nil {
			l = options.Size(x.StartingInfo)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*DelegatorStartingInfoRecord)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.StartingInfo != nil {
			encoded, err := options.Marshal(x.StartingInfo)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.DelegationTargetId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.DelegationTargetId))
			i--
			dAtA[i] = 0x10
		}
		if len(x.DelegatorAddress) > 0 {
			i -= len(x.DelegatorAddress)
			copy(dAtA[i:], x.DelegatorAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DelegatorAddress)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*DelegatorStartingInfoRecord)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DelegatorStartingInfoRecord: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DelegatorStartingInfoRecord: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DelegatorAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DelegatorAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DelegationTargetId", wireType)
				}
				x.DelegationTargetId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.DelegationTargetId |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StartingInfo", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.StartingInfo == nil {
					x.StartingInfo = &DelegatorStartingInfo{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.StartingInfo); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_OperatorAccumulatedCommissionRecord             protoreflect.MessageDescriptor
	fd_OperatorAccumulatedCommissionRecord_operator_id protoreflect.FieldDescriptor
	fd_OperatorAccumulatedCommissionRecord_accumulated protoreflect.FieldDescriptor
)

func init() {
	file_milkyway_rewards_v1_genesis_proto_init()
	md_OperatorAccumulatedCommissionRecord = File_milkyway_rewards_v1_genesis_proto.Messages().ByName("OperatorAccumulatedCommissionRecord")
	fd_OperatorAccumulatedCommissionRecord_operator_id = md_OperatorAccumulatedCommissionRecord.Fields().ByName("operator_id")
	fd_OperatorAccumulatedCommissionRecord_accumulated = md_OperatorAccumulatedCommissionRecord.Fields().ByName("accumulated")
}

var _ protoreflect.Message = (*fastReflection_OperatorAccumulatedCommissionRecord)(nil)

type fastReflection_OperatorAccumulatedCommissionRecord OperatorAccumulatedCommissionRecord

func (x *OperatorAccumulatedCommissionRecord) ProtoReflect() protoreflect.Message {
	return (*fastReflection_OperatorAccumulatedCommissionRecord)(x)
}

func (x *OperatorAccumulatedCommissionRecord) slowProtoReflect() protoreflect.Message {
	mi := &file_milkyway_rewards_v1_genesis_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_OperatorAccumulatedCommissionRecord_messageType fastReflection_OperatorAccumulatedCommissionRecord_messageType
var _ protoreflect.MessageType = fastReflection_OperatorAccumulatedCommissionRecord_messageType{}

type fastReflection_OperatorAccumulatedCommissionRecord_messageType struct{}

func (x fastReflection_OperatorAccumulatedCommissionRecord_messageType) Zero() protoreflect.Message {
	return (*fastReflection_OperatorAccumulatedCommissionRecord)(nil)
}
func (x fastReflection_OperatorAccumulatedCommissionRecord_messageType) New() protoreflect.Message {
	return new(fastReflection_OperatorAccumulatedCommissionRecord)
}
func (x fastReflection_OperatorAccumulatedCommissionRecord_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_OperatorAccumulatedCommissionRecord
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_OperatorAccumulatedCommissionRecord) Descriptor() protoreflect.MessageDescriptor {
	return md_OperatorAccumulatedCommissionRecord
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_OperatorAccumulatedCommissionRecord) Type() protoreflect.MessageType {
	return _fastReflection_OperatorAccumulatedCommissionRecord_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_OperatorAccumulatedCommissionRecord) New() protoreflect.Message {
	return new(fastReflection_OperatorAccumulatedCommissionRecord)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_OperatorAccumulatedCommissionRecord) Interface() protoreflect.ProtoMessage {
	return (*OperatorAccumulatedCommissionRecord)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_OperatorAccumulatedCommissionRecord) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.OperatorId != uint32(0) {
		value := protoreflect.ValueOfUint32(x.OperatorId)
		if !f(fd_OperatorAccumulatedCommissionRecord_operator_id, value) {
			return
		}
	}
	if x.Accumulated != nil {
		value := protoreflect.ValueOfMessage(x.Accumulated.ProtoReflect())
		if !f(fd_OperatorAccumulatedCommissionRecord_accumulated, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_OperatorAccumulatedCommissionRecord) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "milkyway.rewards.v1.OperatorAccumulatedCommissionRecord.operator_id":
		return x.OperatorId != uint32(0)
	case "milkyway.rewards.v1.OperatorAccumulatedCommissionRecord.accumulated":
		return x.Accumulated != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.OperatorAccumulatedCommissionRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.OperatorAccumulatedCommissionRecord does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OperatorAccumulatedCommissionRecord) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "milkyway.rewards.v1.OperatorAccumulatedCommissionRecord.operator_id":
		x.OperatorId = uint32(0)
	case "milkyway.rewards.v1.OperatorAccumulatedCommissionRecord.accumulated":
		x.Accumulated = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.OperatorAccumulatedCommissionRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.OperatorAccumulatedCommissionRecord does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_OperatorAccumulatedCommissionRecord) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "milkyway.rewards.v1.OperatorAccumulatedCommissionRecord.operator_id":
		value := x.OperatorId
		return protoreflect.ValueOfUint32(value)
	case "milkyway.rewards.v1.OperatorAccumulatedCommissionRecord.accumulated":
		value := x.Accumulated
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.OperatorAccumulatedCommissionRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.OperatorAccumulatedCommissionRecord does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OperatorAccumulatedCommissionRecord) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "milkyway.rewards.v1.OperatorAccumulatedCommissionRecord.operator_id":
		x.OperatorId = uint32(value.Uint())
	case "milkyway.rewards.v1.OperatorAccumulatedCommissionRecord.accumulated":
		x.Accumulated = value.Message().Interface().(*AccumulatedCommission)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.OperatorAccumulatedCommissionRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.OperatorAccumulatedCommissionRecord does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OperatorAccumulatedCommissionRecord) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "milkyway.rewards.v1.OperatorAccumulatedCommissionRecord.accumulated":
		if x.Accumulated == nil {
			x.Accumulated = new(AccumulatedCommission)
		}
		return protoreflect.ValueOfMessage(x.Accumulated.ProtoReflect())
	case "milkyway.rewards.v1.OperatorAccumulatedCommissionRecord.operator_id":
		panic(fmt.Errorf("field operator_id of message milkyway.rewards.v1.OperatorAccumulatedCommissionRecord is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.OperatorAccumulatedCommissionRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.OperatorAccumulatedCommissionRecord does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_OperatorAccumulatedCommissionRecord) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "milkyway.rewards.v1.OperatorAccumulatedCommissionRecord.operator_id":
		return protoreflect.ValueOfUint32(uint32(0))
	case "milkyway.rewards.v1.OperatorAccumulatedCommissionRecord.accumulated":
		m := new(AccumulatedCommission)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.OperatorAccumulatedCommissionRecord"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.OperatorAccumulatedCommissionRecord does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_OperatorAccumulatedCommissionRecord) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in milkyway.rewards.v1.OperatorAccumulatedCommissionRecord", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_OperatorAccumulatedCommissionRecord) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OperatorAccumulatedCommissionRecord) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_OperatorAccumulatedCommissionRecord) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_OperatorAccumulatedCommissionRecord) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*OperatorAccumulatedCommissionRecord)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.OperatorId != 0 {
			n += 1 + runtime.Sov(uint64(x.OperatorId))
		}
		if x.Accumulated != nil {
			l = options.Size(x.Accumulated)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*OperatorAccumulatedCommissionRecord)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Accumulated != nil {
			encoded, err := options.Marshal(x.Accumulated)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.OperatorId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.OperatorId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*OperatorAccumulatedCommissionRecord)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: OperatorAccumulatedCommissionRecord: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: OperatorAccumulatedCommissionRecord: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OperatorId", wireType)
				}
				x.OperatorId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.OperatorId |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Accumulated", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Accumulated == nil {
					x.Accumulated = &AccumulatedCommission{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Accumulated); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_DelegationTypeRecords_1_list)(nil)

type _DelegationTypeRecords_1_list struct {
	list *[]*OutstandingRewardsRecord
}

func (x *_DelegationTypeRecords_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_DelegationTypeRecords_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_DelegationTypeRecords_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*OutstandingRewardsRecord)
	(*x.list)[i] = concreteValue
}

func (x *_DelegationTypeRecords_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*OutstandingRewardsRecord)
	*x.list = append(*x.list, concreteValue)
}

func (x *_DelegationTypeRecords_1_list) AppendMutable() protoreflect.Value {
	v := new(OutstandingRewardsRecord)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_DelegationTypeRecords_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_DelegationTypeRecords_1_list) NewElement() protoreflect.Value {
	v := new(OutstandingRewardsRecord)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_DelegationTypeRecords_1_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_DelegationTypeRecords_2_list)(nil)

type _DelegationTypeRecords_2_list struct {
	list *[]*HistoricalRewardsRecord
}

func (x *_DelegationTypeRecords_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_DelegationTypeRecords_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_DelegationTypeRecords_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*HistoricalRewardsRecord)
	(*x.list)[i] = concreteValue
}

func (x *_DelegationTypeRecords_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*HistoricalRewardsRecord)
	*x.list = append(*x.list, concreteValue)
}

func (x *_DelegationTypeRecords_2_list) AppendMutable() protoreflect.Value {
	v := new(HistoricalRewardsRecord)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_DelegationTypeRecords_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_DelegationTypeRecords_2_list) NewElement() protoreflect.Value {
	v := new(HistoricalRewardsRecord)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_DelegationTypeRecords_2_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_DelegationTypeRecords_3_list)(nil)

type _DelegationTypeRecords_3_list struct {
	list *[]*CurrentRewardsRecord
}

func (x *_DelegationTypeRecords_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_DelegationTypeRecords_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_DelegationTypeRecords_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CurrentRewardsRecord)
	(*x.list)[i] = concreteValue
}

func (x *_DelegationTypeRecords_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CurrentRewardsRecord)
	*x.list = append(*x.list, concreteValue)
}

func (x *_DelegationTypeRecords_3_list) AppendMutable() protoreflect.Value {
	v := new(CurrentRewardsRecord)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_DelegationTypeRecords_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_DelegationTypeRecords_3_list) NewElement() protoreflect.Value {
	v := new(CurrentRewardsRecord)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_DelegationTypeRecords_3_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_DelegationTypeRecords_4_list)(nil)

type _DelegationTypeRecords_4_list struct {
	list *[]*DelegatorStartingInfoRecord
}

func (x *_DelegationTypeRecords_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_DelegationTypeRecords_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_DelegationTypeRecords_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*DelegatorStartingInfoRecord)
	(*x.list)[i] = concreteValue
}

func (x *_DelegationTypeRecords_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*DelegatorStartingInfoRecord)
	*x.list = append(*x.list, concreteValue)
}

func (x *_DelegationTypeRecords_4_list) AppendMutable() protoreflect.Value {
	v := new(DelegatorStartingInfoRecord)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_DelegationTypeRecords_4_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_DelegationTypeRecords_4_list) NewElement() protoreflect.Value {
	v := new(DelegatorStartingInfoRecord)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_DelegationTypeRecords_4_list) IsValid() bool {
	return x.list != nil
}

var (
	md_DelegationTypeRecords                          protoreflect.MessageDescriptor
	fd_DelegationTypeRecords_outstanding_rewards      protoreflect.FieldDescriptor
	fd_DelegationTypeRecords_historical_rewards       protoreflect.FieldDescriptor
	fd_DelegationTypeRecords_current_rewards          protoreflect.FieldDescriptor
	fd_DelegationTypeRecords_delegator_starting_infos protoreflect.FieldDescriptor
)

func init() {
	file_milkyway_rewards_v1_genesis_proto_init()
	md_DelegationTypeRecords = File_milkyway_rewards_v1_genesis_proto.Messages().ByName("DelegationTypeRecords")
	fd_DelegationTypeRecords_outstanding_rewards = md_DelegationTypeRecords.Fields().ByName("outstanding_rewards")
	fd_DelegationTypeRecords_historical_rewards = md_DelegationTypeRecords.Fields().ByName("historical_rewards")
	fd_DelegationTypeRecords_current_rewards = md_DelegationTypeRecords.Fields().ByName("current_rewards")
	fd_DelegationTypeRecords_delegator_starting_infos = md_DelegationTypeRecords.Fields().ByName("delegator_starting_infos")
}

var _ protoreflect.Message = (*fastReflection_DelegationTypeRecords)(nil)

type fastReflection_DelegationTypeRecords DelegationTypeRecords

func (x *DelegationTypeRecords) ProtoReflect() protoreflect.Message {
	return (*fastReflection_DelegationTypeRecords)(x)
}

func (x *DelegationTypeRecords) slowProtoReflect() protoreflect.Message {
	mi := &file_milkyway_rewards_v1_genesis_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_DelegationTypeRecords_messageType fastReflection_DelegationTypeRecords_messageType
var _ protoreflect.MessageType = fastReflection_DelegationTypeRecords_messageType{}

type fastReflection_DelegationTypeRecords_messageType struct{}

func (x fastReflection_DelegationTypeRecords_messageType) Zero() protoreflect.Message {
	return (*fastReflection_DelegationTypeRecords)(nil)
}
func (x fastReflection_DelegationTypeRecords_messageType) New() protoreflect.Message {
	return new(fastReflection_DelegationTypeRecords)
}
func (x fastReflection_DelegationTypeRecords_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_DelegationTypeRecords
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_DelegationTypeRecords) Descriptor() protoreflect.MessageDescriptor {
	return md_DelegationTypeRecords
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_DelegationTypeRecords) Type() protoreflect.MessageType {
	return _fastReflection_DelegationTypeRecords_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_DelegationTypeRecords) New() protoreflect.Message {
	return new(fastReflection_DelegationTypeRecords)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_DelegationTypeRecords) Interface() protoreflect.ProtoMessage {
	return (*DelegationTypeRecords)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_DelegationTypeRecords) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.OutstandingRewards) != 0 {
		value := protoreflect.ValueOfList(&_DelegationTypeRecords_1_list{list: &x.OutstandingRewards})
		if !f(fd_DelegationTypeRecords_outstanding_rewards, value) {
			return
		}
	}
	if len(x.HistoricalRewards) != 0 {
		value := protoreflect.ValueOfList(&_DelegationTypeRecords_2_list{list: &x.HistoricalRewards})
		if !f(fd_DelegationTypeRecords_historical_rewards, value) {
			return
		}
	}
	if len(x.CurrentRewards) != 0 {
		value := protoreflect.ValueOfList(&_DelegationTypeRecords_3_list{list: &x.CurrentRewards})
		if !f(fd_DelegationTypeRecords_current_rewards, value) {
			return
		}
	}
	if len(x.DelegatorStartingInfos) != 0 {
		value := protoreflect.ValueOfList(&_DelegationTypeRecords_4_list{list: &x.DelegatorStartingInfos})
		if !f(fd_DelegationTypeRecords_delegator_starting_infos, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_DelegationTypeRecords) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "milkyway.rewards.v1.DelegationTypeRecords.outstanding_rewards":
		return len(x.OutstandingRewards) != 0
	case "milkyway.rewards.v1.DelegationTypeRecords.historical_rewards":
		return len(x.HistoricalRewards) != 0
	case "milkyway.rewards.v1.DelegationTypeRecords.current_rewards":
		return len(x.CurrentRewards) != 0
	case "milkyway.rewards.v1.DelegationTypeRecords.delegator_starting_infos":
		return len(x.DelegatorStartingInfos) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.DelegationTypeRecords"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.DelegationTypeRecords does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegationTypeRecords) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "milkyway.rewards.v1.DelegationTypeRecords.outstanding_rewards":
		x.OutstandingRewards = nil
	case "milkyway.rewards.v1.DelegationTypeRecords.historical_rewards":
		x.HistoricalRewards = nil
	case "milkyway.rewards.v1.DelegationTypeRecords.current_rewards":
		x.CurrentRewards = nil
	case "milkyway.rewards.v1.DelegationTypeRecords.delegator_starting_infos":
		x.DelegatorStartingInfos = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.DelegationTypeRecords"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.DelegationTypeRecords does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_DelegationTypeRecords) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "milkyway.rewards.v1.DelegationTypeRecords.outstanding_rewards":
		if len(x.OutstandingRewards) == 0 {
			return protoreflect.ValueOfList(&_DelegationTypeRecords_1_list{})
		}
		listValue := &_DelegationTypeRecords_1_list{list: &x.OutstandingRewards}
		return protoreflect.ValueOfList(listValue)
	case "milkyway.rewards.v1.DelegationTypeRecords.historical_rewards":
		if len(x.HistoricalRewards) == 0 {
			return protoreflect.ValueOfList(&_DelegationTypeRecords_2_list{})
		}
		listValue := &_DelegationTypeRecords_2_list{list: &x.HistoricalRewards}
		return protoreflect.ValueOfList(listValue)
	case "milkyway.rewards.v1.DelegationTypeRecords.current_rewards":
		if len(x.CurrentRewards) == 0 {
			return protoreflect.ValueOfList(&_DelegationTypeRecords_3_list{})
		}
		listValue := &_DelegationTypeRecords_3_list{list: &x.CurrentRewards}
		return protoreflect.ValueOfList(listValue)
	case "milkyway.rewards.v1.DelegationTypeRecords.delegator_starting_infos":
		if len(x.DelegatorStartingInfos) == 0 {
			return protoreflect.ValueOfList(&_DelegationTypeRecords_4_list{})
		}
		listValue := &_DelegationTypeRecords_4_list{list: &x.DelegatorStartingInfos}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.DelegationTypeRecords"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.DelegationTypeRecords does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegationTypeRecords) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "milkyway.rewards.v1.DelegationTypeRecords.outstanding_rewards":
		lv := value.List()
		clv := lv.(*_DelegationTypeRecords_1_list)
		x.OutstandingRewards = *clv.list
	case "milkyway.rewards.v1.DelegationTypeRecords.historical_rewards":
		lv := value.List()
		clv := lv.(*_DelegationTypeRecords_2_list)
		x.HistoricalRewards = *clv.list
	case "milkyway.rewards.v1.DelegationTypeRecords.current_rewards":
		lv := value.List()
		clv := lv.(*_DelegationTypeRecords_3_list)
		x.CurrentRewards = *clv.list
	case "milkyway.rewards.v1.DelegationTypeRecords.delegator_starting_infos":
		lv := value.List()
		clv := lv.(*_DelegationTypeRecords_4_list)
		x.DelegatorStartingInfos = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.DelegationTypeRecords"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.DelegationTypeRecords does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegationTypeRecords) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "milkyway.rewards.v1.DelegationTypeRecords.outstanding_rewards":
		if x.OutstandingRewards == nil {
			x.OutstandingRewards = []*OutstandingRewardsRecord{}
		}
		value := &_DelegationTypeRecords_1_list{list: &x.OutstandingRewards}
		return protoreflect.ValueOfList(value)
	case "milkyway.rewards.v1.DelegationTypeRecords.historical_rewards":
		if x.HistoricalRewards == nil {
			x.HistoricalRewards = []*HistoricalRewardsRecord{}
		}
		value := &_DelegationTypeRecords_2_list{list: &x.HistoricalRewards}
		return protoreflect.ValueOfList(value)
	case "milkyway.rewards.v1.DelegationTypeRecords.current_rewards":
		if x.CurrentRewards == nil {
			x.CurrentRewards = []*CurrentRewardsRecord{}
		}
		value := &_DelegationTypeRecords_3_list{list: &x.CurrentRewards}
		return protoreflect.ValueOfList(value)
	case "milkyway.rewards.v1.DelegationTypeRecords.delegator_starting_infos":
		if x.DelegatorStartingInfos == nil {
			x.DelegatorStartingInfos = []*DelegatorStartingInfoRecord{}
		}
		value := &_DelegationTypeRecords_4_list{list: &x.DelegatorStartingInfos}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.DelegationTypeRecords"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.DelegationTypeRecords does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_DelegationTypeRecords) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "milkyway.rewards.v1.DelegationTypeRecords.outstanding_rewards":
		list := []*OutstandingRewardsRecord{}
		return protoreflect.ValueOfList(&_DelegationTypeRecords_1_list{list: &list})
	case "milkyway.rewards.v1.DelegationTypeRecords.historical_rewards":
		list := []*HistoricalRewardsRecord{}
		return protoreflect.ValueOfList(&_DelegationTypeRecords_2_list{list: &list})
	case "milkyway.rewards.v1.DelegationTypeRecords.current_rewards":
		list := []*CurrentRewardsRecord{}
		return protoreflect.ValueOfList(&_DelegationTypeRecords_3_list{list: &list})
	case "milkyway.rewards.v1.DelegationTypeRecords.delegator_starting_infos":
		list := []*DelegatorStartingInfoRecord{}
		return protoreflect.ValueOfList(&_DelegationTypeRecords_4_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.DelegationTypeRecords"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.DelegationTypeRecords does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_DelegationTypeRecords) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in milkyway.rewards.v1.DelegationTypeRecords", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_DelegationTypeRecords) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegationTypeRecords) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_DelegationTypeRecords) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_DelegationTypeRecords) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*DelegationTypeRecords)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.OutstandingRewards) > 0 {
			for _, e := range x.OutstandingRewards {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.HistoricalRewards) > 0 {
			for _, e := range x.HistoricalRewards {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.CurrentRewards) > 0 {
			for _, e := range x.CurrentRewards {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.DelegatorStartingInfos) > 0 {
			for _, e := range x.DelegatorStartingInfos {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*DelegationTypeRecords)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.DelegatorStartingInfos) > 0 {
			for iNdEx := len(x.DelegatorStartingInfos) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.DelegatorStartingInfos[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x22
			}
		}
		if len(x.CurrentRewards) > 0 {
			for iNdEx := len(x.CurrentRewards) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CurrentRewards[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.HistoricalRewards) > 0 {
			for iNdEx := len(x.HistoricalRewards) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.HistoricalRewards[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.OutstandingRewards) > 0 {
			for iNdEx := len(x.OutstandingRewards) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.OutstandingRewards[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*DelegationTypeRecords)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DelegationTypeRecords: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DelegationTypeRecords: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OutstandingRewards", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OutstandingRewards = append(x.OutstandingRewards, &OutstandingRewardsRecord{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.OutstandingRewards[len(x.OutstandingRewards)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HistoricalRewards", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HistoricalRewards = append(x.HistoricalRewards, &HistoricalRewardsRecord{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.HistoricalRewards[len(x.HistoricalRewards)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CurrentRewards", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CurrentRewards = append(x.CurrentRewards, &CurrentRewardsRecord{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CurrentRewards[len(x.CurrentRewards)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DelegatorStartingInfos", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DelegatorStartingInfos = append(x.DelegatorStartingInfos, &DelegatorStartingInfoRecord{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.DelegatorStartingInfos[len(x.DelegatorStartingInfos)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_GenesisState_3_list)(nil)

type _GenesisState_3_list struct {
	list *[]*RewardsPlan
}

func (x *_GenesisState_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*RewardsPlan)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*RewardsPlan)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_3_list) AppendMutable() protoreflect.Value {
	v := new(RewardsPlan)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_3_list) NewElement() protoreflect.Value {
	v := new(RewardsPlan)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_3_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_5_list)(nil)

type _GenesisState_5_list struct {
	list *[]*DelegatorWithdrawInfo
}

func (x *_GenesisState_5_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_5_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_5_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*DelegatorWithdrawInfo)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_5_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*DelegatorWithdrawInfo)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_5_list) AppendMutable() protoreflect.Value {
	v := new(DelegatorWithdrawInfo)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_5_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_5_list) NewElement() protoreflect.Value {
	v := new(DelegatorWithdrawInfo)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_5_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_9_list)(nil)

type _GenesisState_9_list struct {
	list *[]*OperatorAccumulatedCommissionRecord
}

func (x *_GenesisState_9_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_9_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_9_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*OperatorAccumulatedCommissionRecord)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_9_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*OperatorAccumulatedCommissionRecord)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_9_list) AppendMutable() protoreflect.Value {
	v := new(OperatorAccumulatedCommissionRecord)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_9_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_9_list) NewElement() protoreflect.Value {
	v := new(OperatorAccumulatedCommissionRecord)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_9_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_10_list)(nil)

type _GenesisState_10_list struct {
	list *[]*PoolServiceTotalDelegatorShares
}

func (x *_GenesisState_10_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_10_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_10_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*PoolServiceTotalDelegatorShares)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_10_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*PoolServiceTotalDelegatorShares)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_10_list) AppendMutable() protoreflect.Value {
	v := new(PoolServiceTotalDelegatorShares)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_10_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_10_list) NewElement() protoreflect.Value {
	v := new(PoolServiceTotalDelegatorShares)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_10_list) IsValid() bool {
	return x.list != nil
}

var (
	md_GenesisState                                     protoreflect.MessageDescriptor
	fd_GenesisState_params                              protoreflect.FieldDescriptor
	fd_GenesisState_next_rewards_plan_id                protoreflect.FieldDescriptor
	fd_GenesisState_rewards_plans                       protoreflect.FieldDescriptor
	fd_GenesisState_last_rewards_allocation_time        protoreflect.FieldDescriptor
	fd_GenesisState_delegator_withdraw_infos            protoreflect.FieldDescriptor
	fd_GenesisState_pools_records                       protoreflect.FieldDescriptor
	fd_GenesisState_operators_records                   protoreflect.FieldDescriptor
	fd_GenesisState_services_records                    protoreflect.FieldDescriptor
	fd_GenesisState_operator_accumulated_commissions    protoreflect.FieldDescriptor
	fd_GenesisState_pool_service_total_delegator_shares protoreflect.FieldDescriptor
)

func init() {
	file_milkyway_rewards_v1_genesis_proto_init()
	md_GenesisState = File_milkyway_rewards_v1_genesis_proto.Messages().ByName("GenesisState")
	fd_GenesisState_params = md_GenesisState.Fields().ByName("params")
	fd_GenesisState_next_rewards_plan_id = md_GenesisState.Fields().ByName("next_rewards_plan_id")
	fd_GenesisState_rewards_plans = md_GenesisState.Fields().ByName("rewards_plans")
	fd_GenesisState_last_rewards_allocation_time = md_GenesisState.Fields().ByName("last_rewards_allocation_time")
	fd_GenesisState_delegator_withdraw_infos = md_GenesisState.Fields().ByName("delegator_withdraw_infos")
	fd_GenesisState_pools_records = md_GenesisState.Fields().ByName("pools_records")
	fd_GenesisState_operators_records = md_GenesisState.Fields().ByName("operators_records")
	fd_GenesisState_services_records = md_GenesisState.Fields().ByName("services_records")
	fd_GenesisState_operator_accumulated_commissions = md_GenesisState.Fields().ByName("operator_accumulated_commissions")
	fd_GenesisState_pool_service_total_delegator_shares = md_GenesisState.Fields().ByName("pool_service_total_delegator_shares")
}

var _ protoreflect.Message = (*fastReflection_GenesisState)(nil)

type fastReflection_GenesisState GenesisState

func (x *GenesisState) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GenesisState)(x)
}

func (x *GenesisState) slowProtoReflect() protoreflect.Message {
	mi := &file_milkyway_rewards_v1_genesis_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GenesisState_messageType fastReflection_GenesisState_messageType
var _ protoreflect.MessageType = fastReflection_GenesisState_messageType{}

type fastReflection_GenesisState_messageType struct{}

func (x fastReflection_GenesisState_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GenesisState)(nil)
}
func (x fastReflection_GenesisState_messageType) New() protoreflect.Message {
	return new(fastReflection_GenesisState)
}
func (x fastReflection_GenesisState_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GenesisState
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GenesisState) Descriptor() protoreflect.MessageDescriptor {
	return md_GenesisState
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GenesisState) Type() protoreflect.MessageType {
	return _fastReflection_GenesisState_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GenesisState) New() protoreflect.Message {
	return new(fastReflection_GenesisState)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GenesisState) Interface() protoreflect.ProtoMessage {
	return (*GenesisState)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GenesisState) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Params != nil {
		value := protoreflect.ValueOfMessage(x.Params.ProtoReflect())
		if !f(fd_GenesisState_params, value) {
			return
		}
	}
	if x.NextRewardsPlanId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.NextRewardsPlanId)
		if !f(fd_GenesisState_next_rewards_plan_id, value) {
			return
		}
	}
	if len(x.RewardsPlans) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_3_list{list: &x.RewardsPlans})
		if !f(fd_GenesisState_rewards_plans, value) {
			return
		}
	}
	if x.LastRewardsAllocationTime != nil {
		value := protoreflect.ValueOfMessage(x.LastRewardsAllocationTime.ProtoReflect())
		if !f(fd_GenesisState_last_rewards_allocation_time, value) {
			return
		}
	}
	if len(x.DelegatorWithdrawInfos) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_5_list{list: &x.DelegatorWithdrawInfos})
		if !f(fd_GenesisState_delegator_withdraw_infos, value) {
			return
		}
	}
	if x.PoolsRecords != nil {
		value := protoreflect.ValueOfMessage(x.PoolsRecords.ProtoReflect())
		if !f(fd_GenesisState_pools_records, value) {
			return
		}
	}
	if x.OperatorsRecords != nil {
		value := protoreflect.ValueOfMessage(x.OperatorsRecords.ProtoReflect())
		if !f(fd_GenesisState_operators_records, value) {
			return
		}
	}
	if x.ServicesRecords != nil {
		value := protoreflect.ValueOfMessage(x.ServicesRecords.ProtoReflect())
		if !f(fd_GenesisState_services_records, value) {
			return
		}
	}
	if len(x.OperatorAccumulatedCommissions) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_9_list{list: &x.OperatorAccumulatedCommissions})
		if !f(fd_GenesisState_operator_accumulated_commissions, value) {
			return
		}
	}
	if len(x.PoolServiceTotalDelegatorShares) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_10_list{list: &x.PoolServiceTotalDelegatorShares})
		if !f(fd_GenesisState_pool_service_total_delegator_shares, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GenesisState) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "milkyway.rewards.v1.GenesisState.params":
		return x.Params != nil
	case "milkyway.rewards.v1.GenesisState.next_rewards_plan_id":
		return x.NextRewardsPlanId != uint64(0)
	case "milkyway.rewards.v1.GenesisState.rewards_plans":
		return len(x.RewardsPlans) != 0
	case "milkyway.rewards.v1.GenesisState.last_rewards_allocation_time":
		return x.LastRewardsAllocationTime != nil
	case "milkyway.rewards.v1.GenesisState.delegator_withdraw_infos":
		return len(x.DelegatorWithdrawInfos) != 0
	case "milkyway.rewards.v1.GenesisState.pools_records":
		return x.PoolsRecords != nil
	case "milkyway.rewards.v1.GenesisState.operators_records":
		return x.OperatorsRecords != nil
	case "milkyway.rewards.v1.GenesisState.services_records":
		return x.ServicesRecords != nil
	case "milkyway.rewards.v1.GenesisState.operator_accumulated_commissions":
		return len(x.OperatorAccumulatedCommissions) != 0
	case "milkyway.rewards.v1.GenesisState.pool_service_total_delegator_shares":
		return len(x.PoolServiceTotalDelegatorShares) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.GenesisState"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.GenesisState does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "milkyway.rewards.v1.GenesisState.params":
		x.Params = nil
	case "milkyway.rewards.v1.GenesisState.next_rewards_plan_id":
		x.NextRewardsPlanId = uint64(0)
	case "milkyway.rewards.v1.GenesisState.rewards_plans":
		x.RewardsPlans = nil
	case "milkyway.rewards.v1.GenesisState.last_rewards_allocation_time":
		x.LastRewardsAllocationTime = nil
	case "milkyway.rewards.v1.GenesisState.delegator_withdraw_infos":
		x.DelegatorWithdrawInfos = nil
	case "milkyway.rewards.v1.GenesisState.pools_records":
		x.PoolsRecords = nil
	case "milkyway.rewards.v1.GenesisState.operators_records":
		x.OperatorsRecords = nil
	case "milkyway.rewards.v1.GenesisState.services_records":
		x.ServicesRecords = nil
	case "milkyway.rewards.v1.GenesisState.operator_accumulated_commissions":
		x.OperatorAccumulatedCommissions = nil
	case "milkyway.rewards.v1.GenesisState.pool_service_total_delegator_shares":
		x.PoolServiceTotalDelegatorShares = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.GenesisState"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.GenesisState does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GenesisState) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "milkyway.rewards.v1.GenesisState.params":
		value := x.Params
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "milkyway.rewards.v1.GenesisState.next_rewards_plan_id":
		value := x.NextRewardsPlanId
		return protoreflect.ValueOfUint64(value)
	case "milkyway.rewards.v1.GenesisState.rewards_plans":
		if len(x.RewardsPlans) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_3_list{})
		}
		listValue := &_GenesisState_3_list{list: &x.RewardsPlans}
		return protoreflect.ValueOfList(listValue)
	case "milkyway.rewards.v1.GenesisState.last_rewards_allocation_time":
		value := x.LastRewardsAllocationTime
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "milkyway.rewards.v1.GenesisState.delegator_withdraw_infos":
		if len(x.DelegatorWithdrawInfos) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_5_list{})
		}
		listValue := &_GenesisState_5_list{list: &x.DelegatorWithdrawInfos}
		return protoreflect.ValueOfList(listValue)
	case "milkyway.rewards.v1.GenesisState.pools_records":
		value := x.PoolsRecords
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "milkyway.rewards.v1.GenesisState.operators_records":
		value := x.OperatorsRecords
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "milkyway.rewards.v1.GenesisState.services_records":
		value := x.ServicesRecords
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "milkyway.rewards.v1.GenesisState.operator_accumulated_commissions":
		if len(x.OperatorAccumulatedCommissions) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_9_list{})
		}
		listValue := &_GenesisState_9_list{list: &x.OperatorAccumulatedCommissions}
		return protoreflect.ValueOfList(listValue)
	case "milkyway.rewards.v1.GenesisState.pool_service_total_delegator_shares":
		if len(x.PoolServiceTotalDelegatorShares) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_10_list{})
		}
		listValue := &_GenesisState_10_list{list: &x.PoolServiceTotalDelegatorShares}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.GenesisState"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.GenesisState does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "milkyway.rewards.v1.GenesisState.params":
		x.Params = value.Message().Interface().(*Params)
	case "milkyway.rewards.v1.GenesisState.next_rewards_plan_id":
		x.NextRewardsPlanId = value.Uint()
	case "milkyway.rewards.v1.GenesisState.rewards_plans":
		lv := value.List()
		clv := lv.(*_GenesisState_3_list)
		x.RewardsPlans = *clv.list
	case "milkyway.rewards.v1.GenesisState.last_rewards_allocation_time":
		x.LastRewardsAllocationTime = value.Message().Interface().(*timestamppb.Timestamp)
	case "milkyway.rewards.v1.GenesisState.delegator_withdraw_infos":
		lv := value.List()
		clv := lv.(*_GenesisState_5_list)
		x.DelegatorWithdrawInfos = *clv.list
	case "milkyway.rewards.v1.GenesisState.pools_records":
		x.PoolsRecords = value.Message().Interface().(*DelegationTypeRecords)
	case "milkyway.rewards.v1.GenesisState.operators_records":
		x.OperatorsRecords = value.Message().Interface().(*DelegationTypeRecords)
	case "milkyway.rewards.v1.GenesisState.services_records":
		x.ServicesRecords = value.Message().Interface().(*DelegationTypeRecords)
	case "milkyway.rewards.v1.GenesisState.operator_accumulated_commissions":
		lv := value.List()
		clv := lv.(*_GenesisState_9_list)
		x.OperatorAccumulatedCommissions = *clv.list
	case "milkyway.rewards.v1.GenesisState.pool_service_total_delegator_shares":
		lv := value.List()
		clv := lv.(*_GenesisState_10_list)
		x.PoolServiceTotalDelegatorShares = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.GenesisState"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.GenesisState does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "milkyway.rewards.v1.GenesisState.params":
		if x.Params == nil {
			x.Params = new(Params)
		}
		return protoreflect.ValueOfMessage(x.Params.ProtoReflect())
	case "milkyway.rewards.v1.GenesisState.rewards_plans":
		if x.RewardsPlans == nil {
			x.RewardsPlans = []*RewardsPlan{}
		}
		value := &_GenesisState_3_list{list: &x.RewardsPlans}
		return protoreflect.ValueOfList(value)
	case "milkyway.rewards.v1.GenesisState.last_rewards_allocation_time":
		if x.LastRewardsAllocationTime == nil {
			x.LastRewardsAllocationTime = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.LastRewardsAllocationTime.ProtoReflect())
	case "milkyway.rewards.v1.GenesisState.delegator_withdraw_infos":
		if x.DelegatorWithdrawInfos == nil {
			x.DelegatorWithdrawInfos = []*DelegatorWithdrawInfo{}
		}
		value := &_GenesisState_5_list{list: &x.DelegatorWithdrawInfos}
		return protoreflect.ValueOfList(value)
	case "milkyway.rewards.v1.GenesisState.pools_records":
		if x.PoolsRecords == nil {
			x.PoolsRecords = new(DelegationTypeRecords)
		}
		return protoreflect.ValueOfMessage(x.PoolsRecords.ProtoReflect())
	case "milkyway.rewards.v1.GenesisState.operators_records":
		if x.OperatorsRecords == nil {
			x.OperatorsRecords = new(DelegationTypeRecords)
		}
		return protoreflect.ValueOfMessage(x.OperatorsRecords.ProtoReflect())
	case "milkyway.rewards.v1.GenesisState.services_records":
		if x.ServicesRecords == nil {
			x.ServicesRecords = new(DelegationTypeRecords)
		}
		return protoreflect.ValueOfMessage(x.ServicesRecords.ProtoReflect())
	case "milkyway.rewards.v1.GenesisState.operator_accumulated_commissions":
		if x.OperatorAccumulatedCommissions == nil {
			x.OperatorAccumulatedCommissions = []*OperatorAccumulatedCommissionRecord{}
		}
		value := &_GenesisState_9_list{list: &x.OperatorAccumulatedCommissions}
		return protoreflect.ValueOfList(value)
	case "milkyway.rewards.v1.GenesisState.pool_service_total_delegator_shares":
		if x.PoolServiceTotalDelegatorShares == nil {
			x.PoolServiceTotalDelegatorShares = []*PoolServiceTotalDelegatorShares{}
		}
		value := &_GenesisState_10_list{list: &x.PoolServiceTotalDelegatorShares}
		return protoreflect.ValueOfList(value)
	case "milkyway.rewards.v1.GenesisState.next_rewards_plan_id":
		panic(fmt.Errorf("field next_rewards_plan_id of message milkyway.rewards.v1.GenesisState is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.GenesisState"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.GenesisState does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GenesisState) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "milkyway.rewards.v1.GenesisState.params":
		m := new(Params)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "milkyway.rewards.v1.GenesisState.next_rewards_plan_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "milkyway.rewards.v1.GenesisState.rewards_plans":
		list := []*RewardsPlan{}
		return protoreflect.ValueOfList(&_GenesisState_3_list{list: &list})
	case "milkyway.rewards.v1.GenesisState.last_rewards_allocation_time":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "milkyway.rewards.v1.GenesisState.delegator_withdraw_infos":
		list := []*DelegatorWithdrawInfo{}
		return protoreflect.ValueOfList(&_GenesisState_5_list{list: &list})
	case "milkyway.rewards.v1.GenesisState.pools_records":
		m := new(DelegationTypeRecords)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "milkyway.rewards.v1.GenesisState.operators_records":
		m := new(DelegationTypeRecords)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "milkyway.rewards.v1.GenesisState.services_records":
		m := new(DelegationTypeRecords)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "milkyway.rewards.v1.GenesisState.operator_accumulated_commissions":
		list := []*OperatorAccumulatedCommissionRecord{}
		return protoreflect.ValueOfList(&_GenesisState_9_list{list: &list})
	case "milkyway.rewards.v1.GenesisState.pool_service_total_delegator_shares":
		list := []*PoolServiceTotalDelegatorShares{}
		return protoreflect.ValueOfList(&_GenesisState_10_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: milkyway.rewards.v1.GenesisState"))
		}
		panic(fmt.Errorf("message milkyway.rewards.v1.GenesisState does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GenesisState) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in milkyway.rewards.v1.GenesisState", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GenesisState) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GenesisState) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GenesisState) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GenesisState)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Params != nil {
			l = options.Size(x.Params)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.NextRewardsPlanId != 0 {
			n += 1 + runtime.Sov(uint64(x.NextRewardsPlanId))
		}
		if len(x.RewardsPlans) > 0 {
			for _, e := range x.RewardsPlans {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.LastRewardsAllocationTime != nil {
			l = options.Size(x.LastRewardsAllocationTime)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.DelegatorWithdrawInfos) > 0 {
			for _, e := range x.DelegatorWithdrawInfos {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.PoolsRecords != nil {
			l = options.Size(x.PoolsRecords)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.OperatorsRecords != nil {
			l = options.Size(x.OperatorsRecords)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ServicesRecords != nil {
			l = options.Size(x.ServicesRecords)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.OperatorAccumulatedCommissions) > 0 {
			for _, e := range x.OperatorAccumulatedCommissions {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.PoolServiceTotalDelegatorShares) > 0 {
			for _, e := range x.PoolServiceTotalDelegatorShares {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GenesisState)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.PoolServiceTotalDelegatorShares) > 0 {
			for iNdEx := len(x.PoolServiceTotalDelegatorShares) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.PoolServiceTotalDelegatorShares[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x52
			}
		}
		if len(x.OperatorAccumulatedCommissions) > 0 {
			for iNdEx := len(x.OperatorAccumulatedCommissions) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.OperatorAccumulatedCommissions[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x4a
			}
		}
		if x.ServicesRecords != nil {
			encoded, err := options.Marshal(x.ServicesRecords)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x42
		}
		if x.OperatorsRecords != nil {
			encoded, err := options.Marshal(x.OperatorsRecords)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x3a
		}
		if x.PoolsRecords != nil {
			encoded, err := options.Marshal(x.PoolsRecords)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.DelegatorWithdrawInfos) > 0 {
			for iNdEx := len(x.DelegatorWithdrawInfos) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.DelegatorWithdrawInfos[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2a
			}
		}
		if x.LastRewardsAllocationTime != nil {
			encoded, err := options.Marshal(x.LastRewardsAllocationTime)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.RewardsPlans) > 0 {
			for iNdEx := len(x.RewardsPlans) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.RewardsPlans[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if x.NextRewardsPlanId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.NextRewardsPlanId))
			i--
			dAtA[i] = 0x10
		}
		if x.Params != nil {
			encoded, err := options.Marshal(x.Params)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GenesisState)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GenesisState: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GenesisState: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Params == nil {
					x.Params = &Params{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Params); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NextRewardsPlanId", wireType)
				}
				x.NextRewardsPlanId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.NextRewardsPlanId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardsPlans", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RewardsPlans = append(x.RewardsPlans, &RewardsPlan{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.RewardsPlans[len(x.RewardsPlans)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LastRewardsAllocationTime", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.LastRewardsAllocationTime == nil {
					x.LastRewardsAllocationTime = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.LastRewardsAllocationTime); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DelegatorWithdrawInfos", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DelegatorWithdrawInfos = append(x.DelegatorWithdrawInfos, &DelegatorWithdrawInfo{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.DelegatorWithdrawInfos[len(x.DelegatorWithdrawInfos)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PoolsRecords", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.PoolsRecords == nil {
					x.PoolsRecords = &DelegationTypeRecords{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.PoolsRecords); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OperatorsRecords", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.OperatorsRecords == nil {
					x.OperatorsRecords = &DelegationTypeRecords{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.OperatorsRecords); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ServicesRecords", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ServicesRecords == nil {
					x.ServicesRecords = &DelegationTypeRecords{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ServicesRecords); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OperatorAccumulatedCommissions", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OperatorAccumulatedCommissions = append(x.OperatorAccumulatedCommissions, &OperatorAccumulatedCommissionRecord{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.OperatorAccumulatedCommissions[len(x.OperatorAccumulatedCommissions)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PoolServiceTotalDelegatorShares", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PoolServiceTotalDelegatorShares = append(x.PoolServiceTotalDelegatorShares, &PoolServiceTotalDelegatorShares{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.PoolServiceTotalDelegatorShares[len(x.PoolServiceTotalDelegatorShares)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: milkyway/rewards/v1/genesis.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DelegatorWithdrawInfo is the address for where delegation rewards are
// withdrawn to by default this struct is only used at genesis to feed in
// default withdraw addresses.
type DelegatorWithdrawInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// delegator_address is the address of the delegator.
	DelegatorAddress string `protobuf:"bytes,1,opt,name=delegator_address,json=delegatorAddress,proto3" json:"delegator_address,omitempty"`
	// withdraw_address is the address to withdraw the delegation rewards to.
	WithdrawAddress string `protobuf:"bytes,2,opt,name=withdraw_address,json=withdrawAddress,proto3" json:"withdraw_address,omitempty"`
}

func (x *DelegatorWithdrawInfo) Reset() {
	*x = DelegatorWithdrawInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_milkyway_rewards_v1_genesis_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelegatorWithdrawInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegatorWithdrawInfo) ProtoMessage() {}

// Deprecated: Use DelegatorWithdrawInfo.ProtoReflect.Descriptor instead.
func (*DelegatorWithdrawInfo) Descriptor() ([]byte, []int) {
	return file_milkyway_rewards_v1_genesis_proto_rawDescGZIP(), []int{0}
}

func (x *DelegatorWithdrawInfo) GetDelegatorAddress() string {
	if x != nil {
		return x.DelegatorAddress
	}
	return ""
}

func (x *DelegatorWithdrawInfo) GetWithdrawAddress() string {
	if x != nil {
		return x.WithdrawAddress
	}
	return ""
}

// OutstandingRewardsRecord is used for import/export via genesis json.
type OutstandingRewardsRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// delegation_target_id is the ID of the delegation target.
	DelegationTargetId uint32 `protobuf:"varint,1,opt,name=delegation_target_id,json=delegationTargetId,proto3" json:"delegation_target_id,omitempty"`
	// outstanding_rewards represents the outstanding rewards of the delegation
	// target.
	OutstandingRewards []*DecPool `protobuf:"bytes,2,rep,name=outstanding_rewards,json=outstandingRewards,proto3" json:"outstanding_rewards,omitempty"`
}

func (x *OutstandingRewardsRecord) Reset() {
	*x = OutstandingRewardsRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_milkyway_rewards_v1_genesis_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutstandingRewardsRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutstandingRewardsRecord) ProtoMessage() {}

// Deprecated: Use OutstandingRewardsRecord.ProtoReflect.Descriptor instead.
func (*OutstandingRewardsRecord) Descriptor() ([]byte, []int) {
	return file_milkyway_rewards_v1_genesis_proto_rawDescGZIP(), []int{1}
}

func (x *OutstandingRewardsRecord) GetDelegationTargetId() uint32 {
	if x != nil {
		return x.DelegationTargetId
	}
	return 0
}

func (x *OutstandingRewardsRecord) GetOutstandingRewards() []*DecPool {
	if x != nil {
		return x.OutstandingRewards
	}
	return nil
}

// HistoricalRewardsRecord is used for import / export via genesis
// json.
type HistoricalRewardsRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// delegation_target_id is the ID of the delegation target.
	DelegationTargetId uint32 `protobuf:"varint,1,opt,name=delegation_target_id,json=delegationTargetId,proto3" json:"delegation_target_id,omitempty"`
	// period defines the period the historical rewards apply to.
	Period uint64 `protobuf:"varint,2,opt,name=period,proto3" json:"period,omitempty"`
	// rewards defines the historical rewards of the delegation target.
	Rewards *HistoricalRewards `protobuf:"bytes,3,opt,name=rewards,proto3" json:"rewards,omitempty"`
}

func (x *HistoricalRewardsRecord) Reset() {
	*x = HistoricalRewardsRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_milkyway_rewards_v1_genesis_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoricalRewardsRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoricalRewardsRecord) ProtoMessage() {}

// Deprecated: Use HistoricalRewardsRecord.ProtoReflect.Descriptor instead.
func (*HistoricalRewardsRecord) Descriptor() ([]byte, []int) {
	return file_milkyway_rewards_v1_genesis_proto_rawDescGZIP(), []int{2}
}

func (x *HistoricalRewardsRecord) GetDelegationTargetId() uint32 {
	if x != nil {
		return x.DelegationTargetId
	}
	return 0
}

func (x *HistoricalRewardsRecord) GetPeriod() uint64 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *HistoricalRewardsRecord) GetRewards() *HistoricalRewards {
	if x != nil {
		return x.Rewards
	}
	return nil
}

// CurrentRewardsRecord is used for import / export via genesis json.
type CurrentRewardsRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// delegation_target_id is the ID of the delegation target.
	DelegationTargetId uint32 `protobuf:"varint,1,opt,name=delegation_target_id,json=delegationTargetId,proto3" json:"delegation_target_id,omitempty"`
	// rewards defines the current rewards of the delegation target.
	Rewards *CurrentRewards `protobuf:"bytes,2,opt,name=rewards,proto3" json:"rewards,omitempty"`
}

func (x *CurrentRewardsRecord) Reset() {
	*x = CurrentRewardsRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_milkyway_rewards_v1_genesis_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrentRewardsRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentRewardsRecord) ProtoMessage() {}

// Deprecated: Use CurrentRewardsRecord.ProtoReflect.Descriptor instead.
func (*CurrentRewardsRecord) Descriptor() ([]byte, []int) {
	return file_milkyway_rewards_v1_genesis_proto_rawDescGZIP(), []int{3}
}

func (x *CurrentRewardsRecord) GetDelegationTargetId() uint32 {
	if x != nil {
		return x.DelegationTargetId
	}
	return 0
}

func (x *CurrentRewardsRecord) GetRewards() *CurrentRewards {
	if x != nil {
		return x.Rewards
	}
	return nil
}

// DelegatorStartingInfoRecord used for import / export via genesis json.
type DelegatorStartingInfoRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// delegator_address is the address of the delegator.
	DelegatorAddress string `protobuf:"bytes,1,opt,name=delegator_address,json=delegatorAddress,proto3" json:"delegator_address,omitempty"`
	// delegation_target_id is the ID of the delegation target.
	DelegationTargetId uint32 `protobuf:"varint,2,opt,name=delegation_target_id,json=delegationTargetId,proto3" json:"delegation_target_id,omitempty"`
	// starting_info defines the starting info of a delegator.
	StartingInfo *DelegatorStartingInfo `protobuf:"bytes,3,opt,name=starting_info,json=startingInfo,proto3" json:"starting_info,omitempty"`
}

func (x *DelegatorStartingInfoRecord) Reset() {
	*x = DelegatorStartingInfoRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_milkyway_rewards_v1_genesis_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelegatorStartingInfoRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegatorStartingInfoRecord) ProtoMessage() {}

// Deprecated: Use DelegatorStartingInfoRecord.ProtoReflect.Descriptor instead.
func (*DelegatorStartingInfoRecord) Descriptor() ([]byte, []int) {
	return file_milkyway_rewards_v1_genesis_proto_rawDescGZIP(), []int{4}
}

func (x *DelegatorStartingInfoRecord) GetDelegatorAddress() string {
	if x != nil {
		return x.DelegatorAddress
	}
	return ""
}

func (x *DelegatorStartingInfoRecord) GetDelegationTargetId() uint32 {
	if x != nil {
		return x.DelegationTargetId
	}
	return 0
}

func (x *DelegatorStartingInfoRecord) GetStartingInfo() *DelegatorStartingInfo {
	if x != nil {
		return x.StartingInfo
	}
	return nil
}

type OperatorAccumulatedCommissionRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorId uint32 `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	// accumulated is the accumulated commission of an operator.
	Accumulated *AccumulatedCommission `protobuf:"bytes,2,opt,name=accumulated,proto3" json:"accumulated,omitempty"`
}

func (x *OperatorAccumulatedCommissionRecord) Reset() {
	*x = OperatorAccumulatedCommissionRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_milkyway_rewards_v1_genesis_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperatorAccumulatedCommissionRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorAccumulatedCommissionRecord) ProtoMessage() {}

// Deprecated: Use OperatorAccumulatedCommissionRecord.ProtoReflect.Descriptor instead.
func (*OperatorAccumulatedCommissionRecord) Descriptor() ([]byte, []int) {
	return file_milkyway_rewards_v1_genesis_proto_rawDescGZIP(), []int{5}
}

func (x *OperatorAccumulatedCommissionRecord) GetOperatorId() uint32 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *OperatorAccumulatedCommissionRecord) GetAccumulated() *AccumulatedCommission {
	if x != nil {
		return x.Accumulated
	}
	return nil
}

// DelegationTypeRecords groups various genesis records under the same type
// of delegation target.
type DelegationTypeRecords struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// outstanding_rewards defines the outstanding rewards of all delegation
	// targets with the same delegation type at genesis.
	OutstandingRewards []*OutstandingRewardsRecord `protobuf:"bytes,1,rep,name=outstanding_rewards,json=outstandingRewards,proto3" json:"outstanding_rewards,omitempty"`
	// historical_rewards defines the historical rewards of all delegation targets
	// with the same delegation type at genesis.
	HistoricalRewards []*HistoricalRewardsRecord `protobuf:"bytes,2,rep,name=historical_rewards,json=historicalRewards,proto3" json:"historical_rewards,omitempty"`
	// current_rewards defines the current rewards of all delegation targets with
	// the same delegation type at genesis.
	CurrentRewards []*CurrentRewardsRecord `protobuf:"bytes,3,rep,name=current_rewards,json=currentRewards,proto3" json:"current_rewards,omitempty"`
	// delegator_starting_infos defines the delegator starting infos of all
	// delegation targets with the same delegation type at genesis.
	DelegatorStartingInfos []*DelegatorStartingInfoRecord `protobuf:"bytes,4,rep,name=delegator_starting_infos,json=delegatorStartingInfos,proto3" json:"delegator_starting_infos,omitempty"`
}

func (x *DelegationTypeRecords) Reset() {
	*x = DelegationTypeRecords{}
	if protoimpl.UnsafeEnabled {
		mi := &file_milkyway_rewards_v1_genesis_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelegationTypeRecords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegationTypeRecords) ProtoMessage() {}

// Deprecated: Use DelegationTypeRecords.ProtoReflect.Descriptor instead.
func (*DelegationTypeRecords) Descriptor() ([]byte, []int) {
	return file_milkyway_rewards_v1_genesis_proto_rawDescGZIP(), []int{6}
}

func (x *DelegationTypeRecords) GetOutstandingRewards() []*OutstandingRewardsRecord {
	if x != nil {
		return x.OutstandingRewards
	}
	return nil
}

func (x *DelegationTypeRecords) GetHistoricalRewards() []*HistoricalRewardsRecord {
	if x != nil {
		return x.HistoricalRewards
	}
	return nil
}

func (x *DelegationTypeRecords) GetCurrentRewards() []*CurrentRewardsRecord {
	if x != nil {
		return x.CurrentRewards
	}
	return nil
}

func (x *DelegationTypeRecords) GetDelegatorStartingInfos() []*DelegatorStartingInfoRecord {
	if x != nil {
		return x.DelegatorStartingInfos
	}
	return nil
}

// GenesisState defines the module's genesis state.
type GenesisState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Params defines the parameters of the module.
	Params *Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	// NextRewardsPlanID represents the id to be used when creating the next
	// rewards plan.
	NextRewardsPlanId uint64 `protobuf:"varint,2,opt,name=next_rewards_plan_id,json=nextRewardsPlanId,proto3" json:"next_rewards_plan_id,omitempty"`
	// RewardsPlans defines the list of rewards plans.
	RewardsPlans []*RewardsPlan `protobuf:"bytes,3,rep,name=rewards_plans,json=rewardsPlans,proto3" json:"rewards_plans,omitempty"`
	// last_rewards_allocation_time is the last time rewards were allocated.
	LastRewardsAllocationTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_rewards_allocation_time,json=lastRewardsAllocationTime,proto3" json:"last_rewards_allocation_time,omitempty"`
	// delegator_withdraw_infos defines the delegator withdraw infos at genesis.
	DelegatorWithdrawInfos []*DelegatorWithdrawInfo `protobuf:"bytes,5,rep,name=delegator_withdraw_infos,json=delegatorWithdrawInfos,proto3" json:"delegator_withdraw_infos,omitempty"`
	// pools_records defines a group of genesis records of all pools at genesis.
	PoolsRecords *DelegationTypeRecords `protobuf:"bytes,6,opt,name=pools_records,json=poolsRecords,proto3" json:"pools_records,omitempty"`
	// operators_records defines a group of genesis records of all operators at
	// genesis.
	OperatorsRecords *DelegationTypeRecords `protobuf:"bytes,7,opt,name=operators_records,json=operatorsRecords,proto3" json:"operators_records,omitempty"`
	// services_records defines a group of genesis records of all services at
	// genesis.
	ServicesRecords *DelegationTypeRecords `protobuf:"bytes,8,opt,name=services_records,json=servicesRecords,proto3" json:"services_records,omitempty"`
	// operator_accumulated_commissions defines the accumulated commissions of all
	// operators at genesis.
	OperatorAccumulatedCommissions []*OperatorAccumulatedCommissionRecord `protobuf:"bytes,9,rep,name=operator_accumulated_commissions,json=operatorAccumulatedCommissions,proto3" json:"operator_accumulated_commissions,omitempty"`
	// pool_service_total_delegator_shares defines the total delegator shares at
	// genesis.
	PoolServiceTotalDelegatorShares []*PoolServiceTotalDelegatorShares `protobuf:"bytes,10,rep,name=pool_service_total_delegator_shares,json=poolServiceTotalDelegatorShares,proto3" json:"pool_service_total_delegator_shares,omitempty"`
}

func (x *GenesisState) Reset() {
	*x = GenesisState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_milkyway_rewards_v1_genesis_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisState) ProtoMessage() {}

// Deprecated: Use GenesisState.ProtoReflect.Descriptor instead.
func (*GenesisState) Descriptor() ([]byte, []int) {
	return file_milkyway_rewards_v1_genesis_proto_rawDescGZIP(), []int{7}
}

func (x *GenesisState) GetParams() *Params {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *GenesisState) GetNextRewardsPlanId() uint64 {
	if x != nil {
		return x.NextRewardsPlanId
	}
	return 0
}

func (x *GenesisState) GetRewardsPlans() []*RewardsPlan {
	if x != nil {
		return x.RewardsPlans
	}
	return nil
}

func (x *GenesisState) GetLastRewardsAllocationTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastRewardsAllocationTime
	}
	return nil
}

func (x *GenesisState) GetDelegatorWithdrawInfos() []*DelegatorWithdrawInfo {
	if x != nil {
		return x.DelegatorWithdrawInfos
	}
	return nil
}

func (x *GenesisState) GetPoolsRecords() *DelegationTypeRecords {
	if x != nil {
		return x.PoolsRecords
	}
	return nil
}

func (x *GenesisState) GetOperatorsRecords() *DelegationTypeRecords {
	if x != nil {
		return x.OperatorsRecords
	}
	return nil
}

func (x *GenesisState) GetServicesRecords() *DelegationTypeRecords {
	if x != nil {
		return x.ServicesRecords
	}
	return nil
}

func (x *GenesisState) GetOperatorAccumulatedCommissions() []*OperatorAccumulatedCommissionRecord {
	if x != nil {
		return x.OperatorAccumulatedCommissions
	}
	return nil
}

func (x *GenesisState) GetPoolServiceTotalDelegatorShares() []*PoolServiceTotalDelegatorShares {
	if x != nil {
		return x.PoolServiceTotalDelegatorShares
	}
	return nil
}

var File_milkyway_rewards_v1_genesis_proto protoreflect.FileDescriptor

var file_milkyway_rewards_v1_genesis_proto_rawDesc = []byte{
	0x0a, 0x21, 0x6d, 0x69, 0x6c, 0x6b, 0x79, 0x77, 0x61, 0x79, 0x2f, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x13, 0x6d, 0x69, 0x6c, 0x6b, 0x79, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x11, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2f,
	0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x62,
	0x61, 0x73, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x63, 0x6f, 0x69, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6d,
	0x69, 0x6c, 0x6b, 0x79, 0x77, 0x61, 0x79, 0x2f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x20, 0x6d, 0x69, 0x6c, 0x6b, 0x79, 0x77, 0x61, 0x79, 0x2f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xad, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45, 0x0a, 0x11, 0x64,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x43, 0x0a, 0x10, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4,
	0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f,
	0x00, 0x22, 0xd4, 0x01, 0x0a, 0x18, 0x4f, 0x75, 0x74, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x48,
	0x0a, 0x14, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x16, 0xe2, 0xde,
	0x1f, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x49, 0x44, 0x52, 0x12, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x64, 0x0a, 0x13, 0x6f, 0x75, 0x74, 0x73,
	0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x69, 0x6c, 0x6b, 0x79, 0x77, 0x61, 0x79,
	0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x63, 0x50,
	0x6f, 0x6f, 0x6c, 0x42, 0x15, 0xc8, 0xde, 0x1f, 0x00, 0xaa, 0xdf, 0x1f, 0x08, 0x44, 0x65, 0x63,
	0x50, 0x6f, 0x6f, 0x6c, 0x73, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x12, 0x6f, 0x75, 0x74, 0x73,
	0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x3a, 0x08,
	0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0xd2, 0x01, 0x0a, 0x17, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x48, 0x0a, 0x14, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x16, 0xe2, 0xde, 0x1f, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x52, 0x12, 0x64, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x4b, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x69, 0x6c, 0x6b, 0x79, 0x77,
	0x61, 0x79, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x42,
	0x09, 0xc8, 0xde, 0x1f, 0x00, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0xb4, 0x01,
	0x0a, 0x14, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x48, 0x0a, 0x14, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x16, 0xe2, 0xde, 0x1f, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x52, 0x12, 0x64, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x48, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x69, 0x6c, 0x6b, 0x79, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x42, 0x09, 0xc8, 0xde, 0x1f, 0x00, 0xa8, 0xe7, 0xb0, 0x2a,
	0x01, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00,
	0xe8, 0xa0, 0x1f, 0x00, 0x22, 0x94, 0x02, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x6f, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x45, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x48, 0x0a, 0x14, 0x64,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x16, 0xe2, 0xde, 0x1f, 0x12, 0x44,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49,
	0x44, 0x52, 0x12, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x5a, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d,
	0x69, 0x6c, 0x6b, 0x79, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x09, 0xc8, 0xde, 0x1f, 0x00, 0xa8, 0xe7,
	0xb0, 0x2a, 0x01, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66,
	0x6f, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0xb9, 0x01, 0x0a, 0x23,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x12, 0x2f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0e, 0xe2, 0xde, 0x1f, 0x0a, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x57, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x69, 0x6c, 0x6b,
	0x79, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0xc8, 0xde, 0x1f, 0x00, 0xa8, 0xe7, 0xb0, 0x2a, 0x01,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x3a, 0x08, 0x88,
	0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0xc0, 0x03, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x12, 0x69, 0x0a, 0x13, 0x6f, 0x75, 0x74, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x6d, 0x69, 0x6c, 0x6b, 0x79, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x09, 0xc8,
	0xde, 0x1f, 0x00, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x12, 0x6f, 0x75, 0x74, 0x73, 0x74, 0x61,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x66, 0x0a, 0x12,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6d, 0x69, 0x6c, 0x6b, 0x79,
	0x77, 0x61, 0x79, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x09, 0xc8, 0xde, 0x1f, 0x00, 0xa8, 0xe7, 0xb0, 0x2a,
	0x01, 0x52, 0x11, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x12, 0x5d, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x6d, 0x69, 0x6c, 0x6b, 0x79, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x09, 0xc8, 0xde, 0x1f, 0x00, 0xa8, 0xe7,
	0xb0, 0x2a, 0x01, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x12, 0x75, 0x0a, 0x18, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6d, 0x69, 0x6c, 0x6b, 0x79, 0x77, 0x61, 0x79,
	0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x09, 0xc8, 0xde, 0x1f, 0x00, 0xa8, 0xe7, 0xb0,
	0x2a, 0x01, 0x52, 0x16, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0xf4, 0x07, 0x0a, 0x0c, 0x47,
	0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x69,
	0x6c, 0x6b, 0x79, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x46, 0x0a, 0x14, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x15, 0xe2, 0xde, 0x1f, 0x11, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x44, 0x52, 0x11, 0x6e, 0x65, 0x78,
	0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x4b,
	0x0a, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x69, 0x6c, 0x6b, 0x79, 0x77, 0x61, 0x79,
	0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x50, 0x6c, 0x61, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x12, 0x61, 0x0a, 0x1c, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x61, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x04, 0x90,
	0xdf, 0x1f, 0x01, 0x52, 0x19, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x6f,
	0x0a, 0x18, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x77, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x6d, 0x69, 0x6c, 0x6b, 0x79, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x09, 0xc8, 0xde,
	0x1f, 0x00, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x16, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x6f, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x5a, 0x0a, 0x0d, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x69, 0x6c, 0x6b, 0x79, 0x77, 0x61,
	0x79, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x42, 0x09, 0xc8, 0xde, 0x1f, 0x00, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x0c, 0x70,
	0x6f, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x62, 0x0a, 0x11, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x69, 0x6c, 0x6b, 0x79, 0x77, 0x61,
	0x79, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x42, 0x09, 0xc8, 0xde, 0x1f, 0x00, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x10, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12,
	0x60, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x69, 0x6c, 0x6b,
	0x79, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x42, 0x09, 0xc8, 0xde, 0x1f, 0x00, 0xa8, 0xe7, 0xb0, 0x2a, 0x01,
	0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x12, 0x8d, 0x01, 0x0a, 0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61,
	0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6d,
	0x69, 0x6c, 0x6b, 0x79, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x75, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x09, 0xc8, 0xde, 0x1f, 0x00, 0xa8, 0xe7, 0xb0, 0x2a,
	0x01, 0x52, 0x1e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x75, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x8d, 0x01, 0x0a, 0x23, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x6d, 0x69, 0x6c, 0x6b, 0x79, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x42, 0x09, 0xc8, 0xde, 0x1f, 0x00, 0xa8, 0xe7, 0xb0, 0x2a, 0x01,
	0x52, 0x1f, 0x70, 0x6f, 0x6f, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x42, 0xdd, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x69, 0x6c, 0x6b, 0x79, 0x77,
	0x61, 0x79, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x47,
	0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x46, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x69, 0x6c, 0x6b, 0x79, 0x77,
	0x61, 0x79, 0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x6d, 0x69, 0x6c, 0x6b, 0x79, 0x77, 0x61, 0x79,
	0x2f, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x69, 0x6c, 0x6b, 0x79, 0x77, 0x61, 0x79,
	0x2f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4d, 0x52, 0x58, 0xaa, 0x02, 0x13, 0x4d, 0x69,
	0x6c, 0x6b, 0x79, 0x77, 0x61, 0x79, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x56,
	0x31, 0xca, 0x02, 0x13, 0x4d, 0x69, 0x6c, 0x6b, 0x79, 0x77, 0x61, 0x79, 0x5c, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1f, 0x4d, 0x69, 0x6c, 0x6b, 0x79, 0x77,
	0x61, 0x79, 0x5c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x15, 0x4d, 0x69, 0x6c, 0x6b,
	0x79, 0x77, 0x61, 0x79, 0x3a, 0x3a, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_milkyway_rewards_v1_genesis_proto_rawDescOnce sync.Once
	file_milkyway_rewards_v1_genesis_proto_rawDescData = file_milkyway_rewards_v1_genesis_proto_rawDesc
)

func file_milkyway_rewards_v1_genesis_proto_rawDescGZIP() []byte {
	file_milkyway_rewards_v1_genesis_proto_rawDescOnce.Do(func() {
		file_milkyway_rewards_v1_genesis_proto_rawDescData = protoimpl.X.CompressGZIP(file_milkyway_rewards_v1_genesis_proto_rawDescData)
	})
	return file_milkyway_rewards_v1_genesis_proto_rawDescData
}

var file_milkyway_rewards_v1_genesis_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_milkyway_rewards_v1_genesis_proto_goTypes = []interface{}{
	(*DelegatorWithdrawInfo)(nil),               // 0: milkyway.rewards.v1.DelegatorWithdrawInfo
	(*OutstandingRewardsRecord)(nil),            // 1: milkyway.rewards.v1.OutstandingRewardsRecord
	(*HistoricalRewardsRecord)(nil),             // 2: milkyway.rewards.v1.HistoricalRewardsRecord
	(*CurrentRewardsRecord)(nil),                // 3: milkyway.rewards.v1.CurrentRewardsRecord
	(*DelegatorStartingInfoRecord)(nil),         // 4: milkyway.rewards.v1.DelegatorStartingInfoRecord
	(*OperatorAccumulatedCommissionRecord)(nil), // 5: milkyway.rewards.v1.OperatorAccumulatedCommissionRecord
	(*DelegationTypeRecords)(nil),               // 6: milkyway.rewards.v1.DelegationTypeRecords
	(*GenesisState)(nil),                        // 7: milkyway.rewards.v1.GenesisState
	(*DecPool)(nil),                             // 8: milkyway.rewards.v1.DecPool
	(*HistoricalRewards)(nil),                   // 9: milkyway.rewards.v1.HistoricalRewards
	(*CurrentRewards)(nil),                      // 10: milkyway.rewards.v1.CurrentRewards
	(*DelegatorStartingInfo)(nil),               // 11: milkyway.rewards.v1.DelegatorStartingInfo
	(*AccumulatedCommission)(nil),               // 12: milkyway.rewards.v1.AccumulatedCommission
	(*Params)(nil),                              // 13: milkyway.rewards.v1.Params
	(*RewardsPlan)(nil),                         // 14: milkyway.rewards.v1.RewardsPlan
	(*timestamppb.Timestamp)(nil),               // 15: google.protobuf.Timestamp
	(*PoolServiceTotalDelegatorShares)(nil),     // 16: milkyway.rewards.v1.PoolServiceTotalDelegatorShares
}
var file_milkyway_rewards_v1_genesis_proto_depIdxs = []int32{
	8,  // 0: milkyway.rewards.v1.OutstandingRewardsRecord.outstanding_rewards:type_name -> milkyway.rewards.v1.DecPool
	9,  // 1: milkyway.rewards.v1.HistoricalRewardsRecord.rewards:type_name -> milkyway.rewards.v1.HistoricalRewards
	10, // 2: milkyway.rewards.v1.CurrentRewardsRecord.rewards:type_name -> milkyway.rewards.v1.CurrentRewards
	11, // 3: milkyway.rewards.v1.DelegatorStartingInfoRecord.starting_info:type_name -> milkyway.rewards.v1.DelegatorStartingInfo
	12, // 4: milkyway.rewards.v1.OperatorAccumulatedCommissionRecord.accumulated:type_name -> milkyway.rewards.v1.AccumulatedCommission
	1,  // 5: milkyway.rewards.v1.DelegationTypeRecords.outstanding_rewards:type_name -> milkyway.rewards.v1.OutstandingRewardsRecord
	2,  // 6: milkyway.rewards.v1.DelegationTypeRecords.historical_rewards:type_name -> milkyway.rewards.v1.HistoricalRewardsRecord
	3,  // 7: milkyway.rewards.v1.DelegationTypeRecords.current_rewards:type_name -> milkyway.rewards.v1.CurrentRewardsRecord
	4,  // 8: milkyway.rewards.v1.DelegationTypeRecords.delegator_starting_infos:type_name -> milkyway.rewards.v1.DelegatorStartingInfoRecord
	13, // 9: milkyway.rewards.v1.GenesisState.params:type_name -> milkyway.rewards.v1.Params
	14, // 10: milkyway.rewards.v1.GenesisState.rewards_plans:type_name -> milkyway.rewards.v1.RewardsPlan
	15, // 11: milkyway.rewards.v1.GenesisState.last_rewards_allocation_time:type_name -> google.protobuf.Timestamp
	0,  // 12: milkyway.rewards.v1.GenesisState.delegator_withdraw_infos:type_name -> milkyway.rewards.v1.DelegatorWithdrawInfo
	6,  // 13: milkyway.rewards.v1.GenesisState.pools_records:type_name -> milkyway.rewards.v1.DelegationTypeRecords
	6,  // 14: milkyway.rewards.v1.GenesisState.operators_records:type_name -> milkyway.rewards.v1.DelegationTypeRecords
	6,  // 15: milkyway.rewards.v1.GenesisState.services_records:type_name -> milkyway.rewards.v1.DelegationTypeRecords
	5,  // 16: milkyway.rewards.v1.GenesisState.operator_accumulated_commissions:type_name -> milkyway.rewards.v1.OperatorAccumulatedCommissionRecord
	16, // 17: milkyway.rewards.v1.GenesisState.pool_service_total_delegator_shares:type_name -> milkyway.rewards.v1.PoolServiceTotalDelegatorShares
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_milkyway_rewards_v1_genesis_proto_init() }
func file_milkyway_rewards_v1_genesis_proto_init() {
	if File_milkyway_rewards_v1_genesis_proto != nil {
		return
	}
	file_milkyway_rewards_v1_params_proto_init()
	file_milkyway_rewards_v1_models_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_milkyway_rewards_v1_genesis_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelegatorWithdrawInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_milkyway_rewards_v1_genesis_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutstandingRewardsRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_milkyway_rewards_v1_genesis_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoricalRewardsRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_milkyway_rewards_v1_genesis_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrentRewardsRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_milkyway_rewards_v1_genesis_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelegatorStartingInfoRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_milkyway_rewards_v1_genesis_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperatorAccumulatedCommissionRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_milkyway_rewards_v1_genesis_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelegationTypeRecords); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_milkyway_rewards_v1_genesis_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_milkyway_rewards_v1_genesis_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_milkyway_rewards_v1_genesis_proto_goTypes,
		DependencyIndexes: file_milkyway_rewards_v1_genesis_proto_depIdxs,
		MessageInfos:      file_milkyway_rewards_v1_genesis_proto_msgTypes,
	}.Build()
	File_milkyway_rewards_v1_genesis_proto = out.File
	file_milkyway_rewards_v1_genesis_proto_rawDesc = nil
	file_milkyway_rewards_v1_genesis_proto_goTypes = nil
	file_milkyway_rewards_v1_genesis_proto_depIdxs = nil
}
